{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"report",
				"reportReferenceIndexRef\tconst"
			],
			[
				"has",
				"hasOwnProperty"
			],
			[
				"rep",
				"reposition"
			],
			[
				"cradleState",
				"saveCradleState"
			],
			[
				"viewportData",
				"viewportDataRef\tconst"
			],
			[
				"viewportD",
				"viewportDimensions"
			],
			[
				"refere",
				"referenceIndexDataRef"
			],
			[
				"conte",
				"contentCount\tlet"
			],
			[
				"reference",
				"referenceoffset"
			],
			[
				"lists",
				"listsizeRef"
			],
			[
				"list",
				"listsize\tvar"
			],
			[
				"scrollb",
				"scrollblockoffset\tlet"
			],
			[
				"la",
				"layoutDataRef\tconst"
			],
			[
				"isS",
				"isScrolling\tconst"
			],
			[
				"isR",
				"isResizingRef"
			],
			[
				"referenceInde",
				"referenceIndexDataRef"
			],
			[
				"callingRe",
				"callingReferenceIndexDataRef\tconst"
			],
			[
				"calling",
				"callingReferenceIndexDataRef"
			],
			[
				"view",
				"viewportdivRef\tconst"
			],
			[
				"cross",
				"crosscountRef"
			],
			[
				"referenceIn",
				"referenceIndexDataRef\tconst"
			],
			[
				"Scroll",
				"ScrollContext\tvar"
			],
			[
				"drop",
				"dropentries\tlet"
			],
			[
				"local",
				"localViewportData\tlet"
			],
			[
				"viewp",
				"viewportwidth\tlet"
			],
			[
				"viewport",
				"viewportwidth"
			],
			[
				"ref",
				"referenceIndexDataRef\tconst"
			],
			[
				"isRe",
				"isResizingRef\tconst"
			],
			[
				"leading",
				"leadingitemcount"
			],
			[
				"inde",
				"indexoffset\tlet"
			],
			[
				"vi",
				"visibletargetindexoffset\tvar"
			],
			[
				"scroll",
				"scrollblockoffset"
			],
			[
				"index",
				"indexrowoffset"
			],
			[
				"visib",
				"visibletargetscrolloffset\tlet"
			],
			[
				"referenceindexda",
				"referenceindexdata\tconst"
			],
			[
				"isSett",
				"isSettingCradleContentRef\tconst"
			],
			[
				"isCradleInV",
				"isCradleInViewRef\tconst"
			],
			[
				"isCr",
				"isCradleVisible"
			],
			[
				"useF",
				"useRef\talias"
			],
			[
				"reposi",
				"repositioning"
			],
			[
				"orie",
				"orientationRef\tconst"
			],
			[
				"ori",
				"orientationRef\tconst"
			],
			[
				"repo",
				"repositioning"
			],
			[
				"content",
				"contentlistRef\tconst"
			],
			[
				"refe",
				"referenceindex\tconst"
			],
			[
				"reposition",
				"repositionindex"
			],
			[
				"crad",
				"cradleState"
			],
			[
				"Refee",
				"referenceIndexRef\tconst"
			],
			[
				"cradleSt",
				"cradlestateRef\tconst"
			],
			[
				"resi",
				"resizeTimeridRef"
			],
			[
				"visible",
				"visibletargetindex"
			],
			[
				"Tex",
				"TextField\tdirectory"
			],
			[
				"ma",
				"material-ui\texternal module name"
			],
			[
				"Inp",
				"InputLabel"
			],
			[
				"demo",
				"demoCallback"
			],
			[
				"compo",
				"componentRef\tlet"
			],
			[
				"scro",
				"scrollblockRef"
			],
			[
				"crate",
				"createElement\tfunction"
			],
			[
				"callb",
				"callbacksRef"
			],
			[
				"can",
				"cancelIdleCallback"
			],
			[
				"req",
				"requestidlecallback\tlet"
			],
			[
				"item",
				"itemrequest\tlet"
			],
			[
				"imae",
				"imagePromise\tlet"
			],
			[
				"get",
				"getItem\tconst"
			],
			[
				"Ima",
				"ImageItem\tconst"
			],
			[
				"curre",
				"currentScrollPos\tconst"
			],
			[
				"cell",
				"cellHeight"
			],
			[
				"back",
				"backgroundColor\tproperty"
			],
			[
				"scr",
				"scrolltracker\tscript"
			],
			[
				"e",
				"elementref"
			],
			[
				"o",
				"offsetTop"
			],
			[
				"cra",
				"cradleElementRef\tconst"
			],
			[
				"ver",
				"verifyCradleIsInView\tconst"
			],
			[
				"re",
				"repositionrowindex\tlet"
			],
			[
				"cradles",
				"cradlestateRef\tconst"
			],
			[
				"save",
				"saveCradleState\tconst"
			],
			[
				"is",
				"isIntersecting"
			],
			[
				"cr",
				"cradleElementRef\tconst"
			],
			[
				"cradleob",
				"cradleobserverRef\tconst"
			],
			[
				"viewpo",
				"viewportheight\tvar"
			],
			[
				"lis",
				"listlength\tlet"
			],
			[
				"hor",
				"horizontal"
			],
			[
				"element",
				"elementstyle\tlet"
			],
			[
				"divlinerS",
				"divlinerStyleRevisionsRef\tconst"
			],
			[
				"style",
				"stylerevisions\tlet"
			],
			[
				"divl",
				"divlinerStyleRevisionsRef\tconst"
			],
			[
				"div",
				"divlinerstyleRef\tconst"
			],
			[
				"cradleE",
				"cradleElementRef\tconst"
			],
			[
				"lead",
				"leadingrows\tlet"
			],
			[
				"tar",
				"targetoffset"
			],
			[
				"run",
				"runwaylength"
			],
			[
				"child",
				"childlistfragment"
			],
			[
				"row",
				"rowcount"
			],
			[
				"targetsc",
				"targetscrolloffset\tlet"
			],
			[
				"max",
				"maxoffset\tlet"
			],
			[
				"ind",
				"indexoffset\tlet"
			],
			[
				"vis",
				"visibleTargetItemOffset\tvar"
			],
			[
				"cu",
				"current\tproperty"
			],
			[
				"isScro",
				"isScrollingRef\tconst"
			],
			[
				"current",
				"currentconfig"
			],
			[
				"previ",
				"previousvisiblelist\tlet"
			],
			[
				"pre",
				"previousvisiblelist\tlet"
			],
			[
				"targetCon",
				"targetConfigDataRef\tparameter"
			],
			[
				"previous",
				"previousvisible"
			],
			[
				"remove",
				"removeEventListener\tmethod"
			],
			[
				"isScrol",
				"isScrollingTimerRef\tconst"
			],
			[
				"isScr",
				"isScrollingRef\tconst"
			],
			[
				"bo",
				"bottomPortion"
			],
			[
				"bott",
				"bottomPortion\tlet"
			],
			[
				"viewportTop",
				"viewportTopItemBottomOffset\tlet"
			],
			[
				"hori",
				"horizontalRatio"
			],
			[
				"viewportSc",
				"viewportScrollTop\tlet"
			],
			[
				"off",
				"offsetLeft"
			],
			[
				"offs",
				"offsetLeft"
			],
			[
				"diff",
				"diffcountoffset\tlet"
			],
			[
				"cro",
				"crossLength"
			],
			[
				"Viewp",
				"viewportData\tconst"
			],
			[
				"forward",
				"forwardcount\tlet"
			],
			[
				"dr",
				"droprecordindex\tlet"
			],
			[
				"itemEle",
				"itemElementsRef\tconst"
			],
			[
				"callba",
				"callbacksRef\tconst"
			],
			[
				"call",
				"callbacks\tconst"
			],
			[
				"it",
				"itemElementsRef\tconst"
			],
			[
				"initializ",
				"initialization"
			],
			[
				"indexo",
				"indexoffset\tlet"
			],
			[
				"c",
				"current\tproperty"
			],
			[
				"pro",
				"processingstateRef\tconst"
			],
			[
				"in",
				"indexoffset\tlet"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 355.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"Package Control:",
				"Package Control: Install Package"
			],
			[
				"Package Control: U",
				"Package Control: Upgrade Package"
			],
			[
				"package",
				"Package Control: Install Package"
			]
		],
		"width": 485.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/henrikbechmann/Projects/react-infinite-scroll-by-grid/src"
	],
	"file_history":
	[
		"/Users/henrikbechmann/Projects/react-infinite-scroll-by-grid/src/viewport.tsx",
		"/Users/henrikbechmann/Projects/react-infinite-scroll-by-grid/package-lock.json",
		"/Users/henrikbechmann/Projects/react-infinite-scroll-by-grid/package.json",
		"/Users/henrikbechmann/Projects/react-infinite-scroll-by-grid/src/infinitescrollbygrid.tsx",
		"/Users/henrikbechmann/Projects/react-infinite-scroll-by-grid/src/tsconfig.json",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/tsconfig.json",
		"/Users/henrikbechmann/Projects/react-infinite-scroll-by-grid/src/scrolltracker.tsx",
		"/Users/henrikbechmann/Projects/react-infinite-scroll-by-grid/src/scrollblock.tsx",
		"/Users/henrikbechmann/Projects/react-infinite-scroll-by-grid/src/placeholder.tsx",
		"/Users/henrikbechmann/Projects/react-infinite-scroll-by-grid/src/itemshell.tsx",
		"/Users/henrikbechmann/Projects/react-infinite-scroll-by-grid/src/cradlefunctions.tsx",
		"/Users/henrikbechmann/Projects/react-infinite-scroll-by-grid/src/cradle.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/package.json",
		"/Users/henrikbechmann/Projects/tribalopolis.com/.babelrc",
		"/Users/henrikbechmann/Projects/react-infinite-scroll-by-grid/config/webpack.config.js",
		"/Users/henrikbechmann/Projects/react-infinite-scroll-by-grid/tsconfig.json",
		"/Users/henrikbechmann/Projects/react-infinite-scroll-by-grid/dist/cradle.d.ts",
		"/Users/henrikbechmann/Projects/react-infinite-scroll-by-grid/.gitignore",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/common/infinitescrollbygrid/.gitignore",
		"/Users/henrikbechmann/Servers/create-react-app/test/node_modules/commander/CHANGELOG.md",
		"/Users/henrikbechmann/Projects/tribalopolis.com/.gitignore",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/common/infinitescrollbygrid/scrolltracker.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/common/infinitescrollbygrid/scrollblock.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/common/infinitescrollbygrid/cradle.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/common/infinitescrollbygrid/cradlefunctions.tsx",
		"/Users/henrikbechmann/Desktop/tabula-Covid Ontario govt website.docx (1).csv",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/common/infinitescrollbygrid/placeholder.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/start/routes.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/system/test.controller.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/system/test/testoptions.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/common/scrollcontrols.view.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/common/infinitescrollbygrid/infinitescrollbygrid.css",
		"/Users/henrikbechmann/Projects/tribalopolis.com/config/webpack.config.js",
		"/Users/henrikbechmann/Desktop/cityrinks.txt",
		"/Users/henrikbechmann/Projects/tribalopolis.com/_archive/infinitescrollbygrid.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/common/infinitescrollbygrid/infinitescrollbygrid.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/common/infinitescrollbygrid.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/common/iscrollbygrid/itemframe.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/common/iscrollbygrid/cradle.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/common/iscrollbygrid/scrollblock.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/common/iscrollbygrid/viewport.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/start/main.controller.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/system/test/testdirectionselection.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/common/simplescroller.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/services/components.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/factorycomponents/contentform.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/factorycomponents/abstractdatapane.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/utilities/utilities.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/services/application.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/services/verification.filter.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/services/dbdata.context.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/common/menulist.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/services/userdata.context.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/services/useraccount.activecontrols.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/services/interfaces.tsx",
		"/Users/henrikbechmann/Desktop/postoffice.txt",
		"/Users/henrikbechmann/Desktop/sharethewealth.comments.txt",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/common/infinitescroller.tsx",
		"/Users/henrikbechmann/Desktop/index.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/services/componentfactory.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/node_modules/react-window/src/createListComponent.js",
		"/Users/henrikbechmann/Projects/tribalopolis.com/node_modules/react-window/src/FixedSizeList.js",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/quadrant.controller.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/databox.controller.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/services/firebase.api.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/services/auth.api.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/common/loadingmessage.view.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/index.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/databox/directorylistitem.view.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/databox/directorylist.view.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/services/componentfactory/displays.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/services/componentfactory/forms.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/services/componentfactory/layouts.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/factorycomponents/togglecomponent.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/factorycomponents/contenttextfield.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/factorycomponents/contentspan.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/system/build.controller.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/common/accountdialog.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/services/componentfactory/components/contentform.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/common/datadrawer.view.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/services/componentfactory/components/togglecomponent.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/services/componentfactory/components/contentspan.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/services/componentfactory/components/contenttextfield.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/js/services/componentfactory/components/contentform.jsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/js/services/componentfactory/components/contentform.jsx.map",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/services/componentfactory/widgets.tsx",
		"/Users/henrikbechmann/Desktop/types.json",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/databox/directorybar.view.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/databox/identitybar.view.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/data/repositories.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/common/datapane.view.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/services/componentfactory/components/contentgroup.tsx",
		"/Users/henrikbechmann/.bashrc",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/system/register.controller.tsx",
		"/Users/henrikbechmann/Desktop/backups/firestore_rules_AFTER.js",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/system/build/builddatapane.view.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/services/type.filter.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/services/fetchactivepermissions.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/services/application/docpackcache.tsx",
		"/Users/henrikbechmann/Desktop/backups/firestore_rules.js",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/data/system_data.tsx",
		"/Users/henrikbechmann/Desktop/backups/types.json",
		"/Users/henrikbechmann/Desktop/backups/system.json",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/services/gateway.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/services/componentfactory/components/contentbaseform.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/common/toolsstrip.view.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/ui/common/lookupdrawer.view.tsx",
		"/Users/henrikbechmann/Desktop/2019.09.20.collections.backup/types.json",
		"/Users/henrikbechmann/Desktop/2019.09.20.collections.backup/accounts.json",
		"/Users/henrikbechmann/Desktop/users.json",
		"/Users/henrikbechmann/Desktop/handles.json",
		"/Users/henrikbechmann/Desktop/system.json",
		"/Users/henrikbechmann/Desktop/types.account.json",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/start/route.controller.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/js/ui/databox/directorylist.view.jsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/node_modules/grpc/node_modules/protobufjs/tests/suite.js",
		"/Users/henrikbechmann/Projects/tribalopolis.com/node_modules/@babel/polyfill/dist/polyfill.js",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/services/prerenderer.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/js/utilities/utilities.jsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/node_modules/@material-ui/core/Grid/Grid.d.ts",
		"/Users/henrikbechmann/Projects/tribalopolis.com/index.html",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/utilities/userdata.class.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/start/main.view.tsx",
		"/Volumes/G-UTILITIES/Instructions.txt",
		"/Applications/ScreenFlow.app/Contents/PkgInfo",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/dragitemtypes.tsx",
		"/Users/henrikbechmann/Projects/tribalopolis.com/src/constants.tsx",
		"/Users/henrikbechmann/Desktop/scheervisionpart2.txt"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 101.0,
		"where_history":
		[
			"/Users/henrikbechmann/Projects/react-infinite-scroll-by-grid/src"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"generic",
			"interfaces",
			"interface"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 36.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.doc":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 157.0
	},
	"output.find_results":
	{
		"height": 100.0
	},
	"output.markdown":
	{
		"height": 100.0
	},
	"pinned_build_system": "",
	"project": "scroller.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"utili",
				"js/utilities/utilities.jsx"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 266.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
