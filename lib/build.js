(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"), require("react-dom"));
	else if(typeof define === 'function' && define.amd)
		define(["react", "react-dom"], factory);
	else if(typeof exports === 'object')
		exports["Scroller"] = factory(require("react"), require("react-dom"));
	else
		root["Scroller"] = factory(root["react"], root["react-dom"]);
})(window, function(__WEBPACK_EXTERNAL_MODULE_react__, __WEBPACK_EXTERNAL_MODULE_react_dom__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/infinitegridscroller.tsx");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js ***!
  \*********************************************************************/
/*! exports provided: DOMRectReadOnly */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DOMRectReadOnly\", function() { return DOMRectReadOnly; });\n/* harmony import */ var _utils_freeze__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/freeze */ \"./node_modules/@juggle/resize-observer/lib/utils/freeze.js\");\n\nvar DOMRectReadOnly = (function () {\n    function DOMRectReadOnly(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.top = this.y;\n        this.left = this.x;\n        this.bottom = this.top + this.height;\n        this.right = this.left + this.width;\n        return Object(_utils_freeze__WEBPACK_IMPORTED_MODULE_0__[\"freeze\"])(this);\n    }\n    DOMRectReadOnly.prototype.toJSON = function () {\n        var _a = this, x = _a.x, y = _a.y, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left, width = _a.width, height = _a.height;\n        return { x: x, y: y, top: top, right: right, bottom: bottom, left: left, width: width, height: height };\n    };\n    DOMRectReadOnly.fromRect = function (rectangle) {\n        return new DOMRectReadOnly(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n    };\n    return DOMRectReadOnly;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TY3JvbGxlci8uL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvRE9NUmVjdFJlYWRPbmx5LmpzP2ZkZDQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQXdDO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSw0REFBTTtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDMEIiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL0RPTVJlY3RSZWFkT25seS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZyZWV6ZSB9IGZyb20gJy4vdXRpbHMvZnJlZXplJztcbnZhciBET01SZWN0UmVhZE9ubHkgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIERPTVJlY3RSZWFkT25seSh4LCB5LCB3aWR0aCwgaGVpZ2h0KSB7XG4gICAgICAgIHRoaXMueCA9IHg7XG4gICAgICAgIHRoaXMueSA9IHk7XG4gICAgICAgIHRoaXMud2lkdGggPSB3aWR0aDtcbiAgICAgICAgdGhpcy5oZWlnaHQgPSBoZWlnaHQ7XG4gICAgICAgIHRoaXMudG9wID0gdGhpcy55O1xuICAgICAgICB0aGlzLmxlZnQgPSB0aGlzLng7XG4gICAgICAgIHRoaXMuYm90dG9tID0gdGhpcy50b3AgKyB0aGlzLmhlaWdodDtcbiAgICAgICAgdGhpcy5yaWdodCA9IHRoaXMubGVmdCArIHRoaXMud2lkdGg7XG4gICAgICAgIHJldHVybiBmcmVlemUodGhpcyk7XG4gICAgfVxuICAgIERPTVJlY3RSZWFkT25seS5wcm90b3R5cGUudG9KU09OID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX2EgPSB0aGlzLCB4ID0gX2EueCwgeSA9IF9hLnksIHRvcCA9IF9hLnRvcCwgcmlnaHQgPSBfYS5yaWdodCwgYm90dG9tID0gX2EuYm90dG9tLCBsZWZ0ID0gX2EubGVmdCwgd2lkdGggPSBfYS53aWR0aCwgaGVpZ2h0ID0gX2EuaGVpZ2h0O1xuICAgICAgICByZXR1cm4geyB4OiB4LCB5OiB5LCB0b3A6IHRvcCwgcmlnaHQ6IHJpZ2h0LCBib3R0b206IGJvdHRvbSwgbGVmdDogbGVmdCwgd2lkdGg6IHdpZHRoLCBoZWlnaHQ6IGhlaWdodCB9O1xuICAgIH07XG4gICAgRE9NUmVjdFJlYWRPbmx5LmZyb21SZWN0ID0gZnVuY3Rpb24gKHJlY3RhbmdsZSkge1xuICAgICAgICByZXR1cm4gbmV3IERPTVJlY3RSZWFkT25seShyZWN0YW5nbGUueCwgcmVjdGFuZ2xlLnksIHJlY3RhbmdsZS53aWR0aCwgcmVjdGFuZ2xlLmhlaWdodCk7XG4gICAgfTtcbiAgICByZXR1cm4gRE9NUmVjdFJlYWRPbmx5O1xufSgpKTtcbmV4cG9ydCB7IERPTVJlY3RSZWFkT25seSB9O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/ResizeObservation.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/ResizeObservation.js ***!
  \***********************************************************************/
/*! exports provided: ResizeObservation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ResizeObservation\", function() { return ResizeObservation; });\n/* harmony import */ var _ResizeObserverBoxOptions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ResizeObserverBoxOptions */ \"./node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js\");\n/* harmony import */ var _algorithms_calculateBoxSize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./algorithms/calculateBoxSize */ \"./node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js\");\n/* harmony import */ var _utils_element__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/element */ \"./node_modules/@juggle/resize-observer/lib/utils/element.js\");\n\n\n\nvar skipNotifyOnElement = function (target) {\n    return !Object(_utils_element__WEBPACK_IMPORTED_MODULE_2__[\"isSVG\"])(target)\n        && !Object(_utils_element__WEBPACK_IMPORTED_MODULE_2__[\"isReplacedElement\"])(target)\n        && getComputedStyle(target).display === 'inline';\n};\nvar ResizeObservation = (function () {\n    function ResizeObservation(target, observedBox) {\n        this.target = target;\n        this.observedBox = observedBox || _ResizeObserverBoxOptions__WEBPACK_IMPORTED_MODULE_0__[\"ResizeObserverBoxOptions\"].CONTENT_BOX;\n        this.lastReportedSize = {\n            inlineSize: 0,\n            blockSize: 0\n        };\n    }\n    ResizeObservation.prototype.isActive = function () {\n        var size = Object(_algorithms_calculateBoxSize__WEBPACK_IMPORTED_MODULE_1__[\"calculateBoxSize\"])(this.target, this.observedBox, true);\n        if (skipNotifyOnElement(this.target)) {\n            this.lastReportedSize = size;\n        }\n        if (this.lastReportedSize.inlineSize !== size.inlineSize\n            || this.lastReportedSize.blockSize !== size.blockSize) {\n            return true;\n        }\n        return false;\n    };\n    return ResizeObservation;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TY3JvbGxlci8uL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvUmVzaXplT2JzZXJ2YXRpb24uanM/NDRjOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXNFO0FBQ0w7QUFDTjtBQUMzRDtBQUNBLFlBQVksNERBQUs7QUFDakIsWUFBWSx3RUFBaUI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyxrRkFBd0I7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHFGQUFnQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDNEIiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL1Jlc2l6ZU9ic2VydmF0aW9uLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVzaXplT2JzZXJ2ZXJCb3hPcHRpb25zIH0gZnJvbSAnLi9SZXNpemVPYnNlcnZlckJveE9wdGlvbnMnO1xuaW1wb3J0IHsgY2FsY3VsYXRlQm94U2l6ZSB9IGZyb20gJy4vYWxnb3JpdGhtcy9jYWxjdWxhdGVCb3hTaXplJztcbmltcG9ydCB7IGlzU1ZHLCBpc1JlcGxhY2VkRWxlbWVudCB9IGZyb20gJy4vdXRpbHMvZWxlbWVudCc7XG52YXIgc2tpcE5vdGlmeU9uRWxlbWVudCA9IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICByZXR1cm4gIWlzU1ZHKHRhcmdldClcbiAgICAgICAgJiYgIWlzUmVwbGFjZWRFbGVtZW50KHRhcmdldClcbiAgICAgICAgJiYgZ2V0Q29tcHV0ZWRTdHlsZSh0YXJnZXQpLmRpc3BsYXkgPT09ICdpbmxpbmUnO1xufTtcbnZhciBSZXNpemVPYnNlcnZhdGlvbiA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gUmVzaXplT2JzZXJ2YXRpb24odGFyZ2V0LCBvYnNlcnZlZEJveCkge1xuICAgICAgICB0aGlzLnRhcmdldCA9IHRhcmdldDtcbiAgICAgICAgdGhpcy5vYnNlcnZlZEJveCA9IG9ic2VydmVkQm94IHx8IFJlc2l6ZU9ic2VydmVyQm94T3B0aW9ucy5DT05URU5UX0JPWDtcbiAgICAgICAgdGhpcy5sYXN0UmVwb3J0ZWRTaXplID0ge1xuICAgICAgICAgICAgaW5saW5lU2l6ZTogMCxcbiAgICAgICAgICAgIGJsb2NrU2l6ZTogMFxuICAgICAgICB9O1xuICAgIH1cbiAgICBSZXNpemVPYnNlcnZhdGlvbi5wcm90b3R5cGUuaXNBY3RpdmUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBzaXplID0gY2FsY3VsYXRlQm94U2l6ZSh0aGlzLnRhcmdldCwgdGhpcy5vYnNlcnZlZEJveCwgdHJ1ZSk7XG4gICAgICAgIGlmIChza2lwTm90aWZ5T25FbGVtZW50KHRoaXMudGFyZ2V0KSkge1xuICAgICAgICAgICAgdGhpcy5sYXN0UmVwb3J0ZWRTaXplID0gc2l6ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5sYXN0UmVwb3J0ZWRTaXplLmlubGluZVNpemUgIT09IHNpemUuaW5saW5lU2l6ZVxuICAgICAgICAgICAgfHwgdGhpcy5sYXN0UmVwb3J0ZWRTaXplLmJsb2NrU2l6ZSAhPT0gc2l6ZS5ibG9ja1NpemUpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9O1xuICAgIHJldHVybiBSZXNpemVPYnNlcnZhdGlvbjtcbn0oKSk7XG5leHBvcnQgeyBSZXNpemVPYnNlcnZhdGlvbiB9O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/ResizeObservation.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/ResizeObserver.js":
/*!********************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/ResizeObserver.js ***!
  \********************************************************************/
/*! exports provided: ResizeObserver */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ResizeObserver\", function() { return ResizeObserver; });\n/* harmony import */ var _ResizeObserverController__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ResizeObserverController */ \"./node_modules/@juggle/resize-observer/lib/ResizeObserverController.js\");\n/* harmony import */ var _utils_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/element */ \"./node_modules/@juggle/resize-observer/lib/utils/element.js\");\n\n\nvar ResizeObserver = (function () {\n    function ResizeObserver(callback) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (typeof callback !== 'function') {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\");\n        }\n        _ResizeObserverController__WEBPACK_IMPORTED_MODULE_0__[\"ResizeObserverController\"].connect(this, callback);\n    }\n    ResizeObserver.prototype.observe = function (target, options) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!Object(_utils_element__WEBPACK_IMPORTED_MODULE_1__[\"isElement\"])(target)) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        _ResizeObserverController__WEBPACK_IMPORTED_MODULE_0__[\"ResizeObserverController\"].observe(this, target, options);\n    };\n    ResizeObserver.prototype.unobserve = function (target) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!Object(_utils_element__WEBPACK_IMPORTED_MODULE_1__[\"isElement\"])(target)) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        _ResizeObserverController__WEBPACK_IMPORTED_MODULE_0__[\"ResizeObserverController\"].unobserve(this, target);\n    };\n    ResizeObserver.prototype.disconnect = function () {\n        _ResizeObserverController__WEBPACK_IMPORTED_MODULE_0__[\"ResizeObserverController\"].disconnect(this);\n    };\n    ResizeObserver.toString = function () {\n        return 'function ResizeObserver () { [polyfill code] }';\n    };\n    return ResizeObserver;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TY3JvbGxlci8uL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvUmVzaXplT2JzZXJ2ZXIuanM/ZDAyMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFzRTtBQUMxQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxrRkFBd0I7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsZ0VBQVM7QUFDdEI7QUFDQTtBQUNBLFFBQVEsa0ZBQXdCO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLGdFQUFTO0FBQ3RCO0FBQ0E7QUFDQSxRQUFRLGtGQUF3QjtBQUNoQztBQUNBO0FBQ0EsUUFBUSxrRkFBd0I7QUFDaEM7QUFDQTtBQUNBLDRDQUE0QyxrQkFBa0I7QUFDOUQ7QUFDQTtBQUNBLENBQUM7QUFDeUIiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL1Jlc2l6ZU9ic2VydmVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVzaXplT2JzZXJ2ZXJDb250cm9sbGVyIH0gZnJvbSAnLi9SZXNpemVPYnNlcnZlckNvbnRyb2xsZXInO1xuaW1wb3J0IHsgaXNFbGVtZW50IH0gZnJvbSAnLi91dGlscy9lbGVtZW50JztcbnZhciBSZXNpemVPYnNlcnZlciA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gUmVzaXplT2JzZXJ2ZXIoY2FsbGJhY2spIHtcbiAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJGYWlsZWQgdG8gY29uc3RydWN0ICdSZXNpemVPYnNlcnZlcic6IDEgYXJndW1lbnQgcmVxdWlyZWQsIGJ1dCBvbmx5IDAgcHJlc2VudC5cIik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiBjYWxsYmFjayAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkZhaWxlZCB0byBjb25zdHJ1Y3QgJ1Jlc2l6ZU9ic2VydmVyJzogVGhlIGNhbGxiYWNrIHByb3ZpZGVkIGFzIHBhcmFtZXRlciAxIGlzIG5vdCBhIGZ1bmN0aW9uLlwiKTtcbiAgICAgICAgfVxuICAgICAgICBSZXNpemVPYnNlcnZlckNvbnRyb2xsZXIuY29ubmVjdCh0aGlzLCBjYWxsYmFjayk7XG4gICAgfVxuICAgIFJlc2l6ZU9ic2VydmVyLnByb3RvdHlwZS5vYnNlcnZlID0gZnVuY3Rpb24gKHRhcmdldCwgb3B0aW9ucykge1xuICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkZhaWxlZCB0byBleGVjdXRlICdvYnNlcnZlJyBvbiAnUmVzaXplT2JzZXJ2ZXInOiAxIGFyZ3VtZW50IHJlcXVpcmVkLCBidXQgb25seSAwIHByZXNlbnQuXCIpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghaXNFbGVtZW50KHRhcmdldCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJGYWlsZWQgdG8gZXhlY3V0ZSAnb2JzZXJ2ZScgb24gJ1Jlc2l6ZU9ic2VydmVyJzogcGFyYW1ldGVyIDEgaXMgbm90IG9mIHR5cGUgJ0VsZW1lbnRcIik7XG4gICAgICAgIH1cbiAgICAgICAgUmVzaXplT2JzZXJ2ZXJDb250cm9sbGVyLm9ic2VydmUodGhpcywgdGFyZ2V0LCBvcHRpb25zKTtcbiAgICB9O1xuICAgIFJlc2l6ZU9ic2VydmVyLnByb3RvdHlwZS51bm9ic2VydmUgPSBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gICAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiRmFpbGVkIHRvIGV4ZWN1dGUgJ3Vub2JzZXJ2ZScgb24gJ1Jlc2l6ZU9ic2VydmVyJzogMSBhcmd1bWVudCByZXF1aXJlZCwgYnV0IG9ubHkgMCBwcmVzZW50LlwiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWlzRWxlbWVudCh0YXJnZXQpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiRmFpbGVkIHRvIGV4ZWN1dGUgJ3Vub2JzZXJ2ZScgb24gJ1Jlc2l6ZU9ic2VydmVyJzogcGFyYW1ldGVyIDEgaXMgbm90IG9mIHR5cGUgJ0VsZW1lbnRcIik7XG4gICAgICAgIH1cbiAgICAgICAgUmVzaXplT2JzZXJ2ZXJDb250cm9sbGVyLnVub2JzZXJ2ZSh0aGlzLCB0YXJnZXQpO1xuICAgIH07XG4gICAgUmVzaXplT2JzZXJ2ZXIucHJvdG90eXBlLmRpc2Nvbm5lY3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIFJlc2l6ZU9ic2VydmVyQ29udHJvbGxlci5kaXNjb25uZWN0KHRoaXMpO1xuICAgIH07XG4gICAgUmVzaXplT2JzZXJ2ZXIudG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiAnZnVuY3Rpb24gUmVzaXplT2JzZXJ2ZXIgKCkgeyBbcG9seWZpbGwgY29kZV0gfSc7XG4gICAgfTtcbiAgICByZXR1cm4gUmVzaXplT2JzZXJ2ZXI7XG59KCkpO1xuZXhwb3J0IHsgUmVzaXplT2JzZXJ2ZXIgfTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/ResizeObserver.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js ***!
  \******************************************************************************/
/*! exports provided: ResizeObserverBoxOptions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ResizeObserverBoxOptions\", function() { return ResizeObserverBoxOptions; });\nvar ResizeObserverBoxOptions;\n(function (ResizeObserverBoxOptions) {\n    ResizeObserverBoxOptions[\"BORDER_BOX\"] = \"border-box\";\n    ResizeObserverBoxOptions[\"CONTENT_BOX\"] = \"content-box\";\n    ResizeObserverBoxOptions[\"DEVICE_PIXEL_CONTENT_BOX\"] = \"device-pixel-content-box\";\n})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TY3JvbGxlci8uL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvUmVzaXplT2JzZXJ2ZXJCb3hPcHRpb25zLmpzP2U1NTYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDREQUE0RDtBQUN6QiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvUmVzaXplT2JzZXJ2ZXJCb3hPcHRpb25zLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIFJlc2l6ZU9ic2VydmVyQm94T3B0aW9ucztcbihmdW5jdGlvbiAoUmVzaXplT2JzZXJ2ZXJCb3hPcHRpb25zKSB7XG4gICAgUmVzaXplT2JzZXJ2ZXJCb3hPcHRpb25zW1wiQk9SREVSX0JPWFwiXSA9IFwiYm9yZGVyLWJveFwiO1xuICAgIFJlc2l6ZU9ic2VydmVyQm94T3B0aW9uc1tcIkNPTlRFTlRfQk9YXCJdID0gXCJjb250ZW50LWJveFwiO1xuICAgIFJlc2l6ZU9ic2VydmVyQm94T3B0aW9uc1tcIkRFVklDRV9QSVhFTF9DT05URU5UX0JPWFwiXSA9IFwiZGV2aWNlLXBpeGVsLWNvbnRlbnQtYm94XCI7XG59KShSZXNpemVPYnNlcnZlckJveE9wdGlvbnMgfHwgKFJlc2l6ZU9ic2VydmVyQm94T3B0aW9ucyA9IHt9KSk7XG5leHBvcnQgeyBSZXNpemVPYnNlcnZlckJveE9wdGlvbnMgfTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/ResizeObserverController.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/ResizeObserverController.js ***!
  \******************************************************************************/
/*! exports provided: ResizeObserverController */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ResizeObserverController\", function() { return ResizeObserverController; });\n/* harmony import */ var _utils_scheduler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/scheduler */ \"./node_modules/@juggle/resize-observer/lib/utils/scheduler.js\");\n/* harmony import */ var _ResizeObservation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ResizeObservation */ \"./node_modules/@juggle/resize-observer/lib/ResizeObservation.js\");\n/* harmony import */ var _ResizeObserverDetail__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ResizeObserverDetail */ \"./node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js\");\n/* harmony import */ var _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/resizeObservers */ \"./node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js\");\n\n\n\n\nvar observerMap = new WeakMap();\nvar getObservationIndex = function (observationTargets, target) {\n    for (var i = 0; i < observationTargets.length; i += 1) {\n        if (observationTargets[i].target === target) {\n            return i;\n        }\n    }\n    return -1;\n};\nvar ResizeObserverController = (function () {\n    function ResizeObserverController() {\n    }\n    ResizeObserverController.connect = function (resizeObserver, callback) {\n        var detail = new _ResizeObserverDetail__WEBPACK_IMPORTED_MODULE_2__[\"ResizeObserverDetail\"](resizeObserver, callback);\n        observerMap.set(resizeObserver, detail);\n    };\n    ResizeObserverController.observe = function (resizeObserver, target, options) {\n        var detail = observerMap.get(resizeObserver);\n        var firstObservation = detail.observationTargets.length === 0;\n        if (getObservationIndex(detail.observationTargets, target) < 0) {\n            firstObservation && _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_3__[\"resizeObservers\"].push(detail);\n            detail.observationTargets.push(new _ResizeObservation__WEBPACK_IMPORTED_MODULE_1__[\"ResizeObservation\"](target, options && options.box));\n            Object(_utils_scheduler__WEBPACK_IMPORTED_MODULE_0__[\"updateCount\"])(1);\n            _utils_scheduler__WEBPACK_IMPORTED_MODULE_0__[\"scheduler\"].schedule();\n        }\n    };\n    ResizeObserverController.unobserve = function (resizeObserver, target) {\n        var detail = observerMap.get(resizeObserver);\n        var index = getObservationIndex(detail.observationTargets, target);\n        var lastObservation = detail.observationTargets.length === 1;\n        if (index >= 0) {\n            lastObservation && _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_3__[\"resizeObservers\"].splice(_utils_resizeObservers__WEBPACK_IMPORTED_MODULE_3__[\"resizeObservers\"].indexOf(detail), 1);\n            detail.observationTargets.splice(index, 1);\n            Object(_utils_scheduler__WEBPACK_IMPORTED_MODULE_0__[\"updateCount\"])(-1);\n        }\n    };\n    ResizeObserverController.disconnect = function (resizeObserver) {\n        var _this = this;\n        var detail = observerMap.get(resizeObserver);\n        detail.observationTargets.slice().forEach(function (ot) { return _this.unobserve(resizeObserver, ot.target); });\n        detail.activeTargets.splice(0, detail.activeTargets.length);\n    };\n    return ResizeObserverController;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TY3JvbGxlci8uL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvUmVzaXplT2JzZXJ2ZXJDb250cm9sbGVyLmpzP2YzNzkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQTJEO0FBQ0g7QUFDTTtBQUNKO0FBQzFEO0FBQ0E7QUFDQSxtQkFBbUIsK0JBQStCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLDBFQUFvQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0Msc0VBQWU7QUFDL0MsK0NBQStDLG9FQUFpQjtBQUNoRSxZQUFZLG9FQUFXO0FBQ3ZCLFlBQVksMERBQVM7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0Isc0VBQWUsUUFBUSxzRUFBZTtBQUNyRTtBQUNBLFlBQVksb0VBQVc7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFpRSxtREFBbUQsRUFBRTtBQUN0SDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ21DIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BqdWdnbGUvcmVzaXplLW9ic2VydmVyL2xpYi9SZXNpemVPYnNlcnZlckNvbnRyb2xsZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzY2hlZHVsZXIsIHVwZGF0ZUNvdW50IH0gZnJvbSAnLi91dGlscy9zY2hlZHVsZXInO1xuaW1wb3J0IHsgUmVzaXplT2JzZXJ2YXRpb24gfSBmcm9tICcuL1Jlc2l6ZU9ic2VydmF0aW9uJztcbmltcG9ydCB7IFJlc2l6ZU9ic2VydmVyRGV0YWlsIH0gZnJvbSAnLi9SZXNpemVPYnNlcnZlckRldGFpbCc7XG5pbXBvcnQgeyByZXNpemVPYnNlcnZlcnMgfSBmcm9tICcuL3V0aWxzL3Jlc2l6ZU9ic2VydmVycyc7XG52YXIgb2JzZXJ2ZXJNYXAgPSBuZXcgV2Vha01hcCgpO1xudmFyIGdldE9ic2VydmF0aW9uSW5kZXggPSBmdW5jdGlvbiAob2JzZXJ2YXRpb25UYXJnZXRzLCB0YXJnZXQpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG9ic2VydmF0aW9uVGFyZ2V0cy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICBpZiAob2JzZXJ2YXRpb25UYXJnZXRzW2ldLnRhcmdldCA9PT0gdGFyZ2V0KSB7XG4gICAgICAgICAgICByZXR1cm4gaTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gLTE7XG59O1xudmFyIFJlc2l6ZU9ic2VydmVyQ29udHJvbGxlciA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gUmVzaXplT2JzZXJ2ZXJDb250cm9sbGVyKCkge1xuICAgIH1cbiAgICBSZXNpemVPYnNlcnZlckNvbnRyb2xsZXIuY29ubmVjdCA9IGZ1bmN0aW9uIChyZXNpemVPYnNlcnZlciwgY2FsbGJhY2spIHtcbiAgICAgICAgdmFyIGRldGFpbCA9IG5ldyBSZXNpemVPYnNlcnZlckRldGFpbChyZXNpemVPYnNlcnZlciwgY2FsbGJhY2spO1xuICAgICAgICBvYnNlcnZlck1hcC5zZXQocmVzaXplT2JzZXJ2ZXIsIGRldGFpbCk7XG4gICAgfTtcbiAgICBSZXNpemVPYnNlcnZlckNvbnRyb2xsZXIub2JzZXJ2ZSA9IGZ1bmN0aW9uIChyZXNpemVPYnNlcnZlciwgdGFyZ2V0LCBvcHRpb25zKSB7XG4gICAgICAgIHZhciBkZXRhaWwgPSBvYnNlcnZlck1hcC5nZXQocmVzaXplT2JzZXJ2ZXIpO1xuICAgICAgICB2YXIgZmlyc3RPYnNlcnZhdGlvbiA9IGRldGFpbC5vYnNlcnZhdGlvblRhcmdldHMubGVuZ3RoID09PSAwO1xuICAgICAgICBpZiAoZ2V0T2JzZXJ2YXRpb25JbmRleChkZXRhaWwub2JzZXJ2YXRpb25UYXJnZXRzLCB0YXJnZXQpIDwgMCkge1xuICAgICAgICAgICAgZmlyc3RPYnNlcnZhdGlvbiAmJiByZXNpemVPYnNlcnZlcnMucHVzaChkZXRhaWwpO1xuICAgICAgICAgICAgZGV0YWlsLm9ic2VydmF0aW9uVGFyZ2V0cy5wdXNoKG5ldyBSZXNpemVPYnNlcnZhdGlvbih0YXJnZXQsIG9wdGlvbnMgJiYgb3B0aW9ucy5ib3gpKTtcbiAgICAgICAgICAgIHVwZGF0ZUNvdW50KDEpO1xuICAgICAgICAgICAgc2NoZWR1bGVyLnNjaGVkdWxlKCk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFJlc2l6ZU9ic2VydmVyQ29udHJvbGxlci51bm9ic2VydmUgPSBmdW5jdGlvbiAocmVzaXplT2JzZXJ2ZXIsIHRhcmdldCkge1xuICAgICAgICB2YXIgZGV0YWlsID0gb2JzZXJ2ZXJNYXAuZ2V0KHJlc2l6ZU9ic2VydmVyKTtcbiAgICAgICAgdmFyIGluZGV4ID0gZ2V0T2JzZXJ2YXRpb25JbmRleChkZXRhaWwub2JzZXJ2YXRpb25UYXJnZXRzLCB0YXJnZXQpO1xuICAgICAgICB2YXIgbGFzdE9ic2VydmF0aW9uID0gZGV0YWlsLm9ic2VydmF0aW9uVGFyZ2V0cy5sZW5ndGggPT09IDE7XG4gICAgICAgIGlmIChpbmRleCA+PSAwKSB7XG4gICAgICAgICAgICBsYXN0T2JzZXJ2YXRpb24gJiYgcmVzaXplT2JzZXJ2ZXJzLnNwbGljZShyZXNpemVPYnNlcnZlcnMuaW5kZXhPZihkZXRhaWwpLCAxKTtcbiAgICAgICAgICAgIGRldGFpbC5vYnNlcnZhdGlvblRhcmdldHMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgICAgIHVwZGF0ZUNvdW50KC0xKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgUmVzaXplT2JzZXJ2ZXJDb250cm9sbGVyLmRpc2Nvbm5lY3QgPSBmdW5jdGlvbiAocmVzaXplT2JzZXJ2ZXIpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdmFyIGRldGFpbCA9IG9ic2VydmVyTWFwLmdldChyZXNpemVPYnNlcnZlcik7XG4gICAgICAgIGRldGFpbC5vYnNlcnZhdGlvblRhcmdldHMuc2xpY2UoKS5mb3JFYWNoKGZ1bmN0aW9uIChvdCkgeyByZXR1cm4gX3RoaXMudW5vYnNlcnZlKHJlc2l6ZU9ic2VydmVyLCBvdC50YXJnZXQpOyB9KTtcbiAgICAgICAgZGV0YWlsLmFjdGl2ZVRhcmdldHMuc3BsaWNlKDAsIGRldGFpbC5hY3RpdmVUYXJnZXRzLmxlbmd0aCk7XG4gICAgfTtcbiAgICByZXR1cm4gUmVzaXplT2JzZXJ2ZXJDb250cm9sbGVyO1xufSgpKTtcbmV4cG9ydCB7IFJlc2l6ZU9ic2VydmVyQ29udHJvbGxlciB9O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/ResizeObserverController.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js ***!
  \**************************************************************************/
/*! exports provided: ResizeObserverDetail */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ResizeObserverDetail\", function() { return ResizeObserverDetail; });\nvar ResizeObserverDetail = (function () {\n    function ResizeObserverDetail(resizeObserver, callback) {\n        this.activeTargets = [];\n        this.skippedTargets = [];\n        this.observationTargets = [];\n        this.observer = resizeObserver;\n        this.callback = callback;\n    }\n    return ResizeObserverDetail;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TY3JvbGxlci8uL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvUmVzaXplT2JzZXJ2ZXJEZXRhaWwuanM/NzgxYSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUMrQiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvUmVzaXplT2JzZXJ2ZXJEZXRhaWwuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgUmVzaXplT2JzZXJ2ZXJEZXRhaWwgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFJlc2l6ZU9ic2VydmVyRGV0YWlsKHJlc2l6ZU9ic2VydmVyLCBjYWxsYmFjaykge1xuICAgICAgICB0aGlzLmFjdGl2ZVRhcmdldHMgPSBbXTtcbiAgICAgICAgdGhpcy5za2lwcGVkVGFyZ2V0cyA9IFtdO1xuICAgICAgICB0aGlzLm9ic2VydmF0aW9uVGFyZ2V0cyA9IFtdO1xuICAgICAgICB0aGlzLm9ic2VydmVyID0gcmVzaXplT2JzZXJ2ZXI7XG4gICAgICAgIHRoaXMuY2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgICB9XG4gICAgcmV0dXJuIFJlc2l6ZU9ic2VydmVyRGV0YWlsO1xufSgpKTtcbmV4cG9ydCB7IFJlc2l6ZU9ic2VydmVyRGV0YWlsIH07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js ***!
  \*************************************************************************/
/*! exports provided: ResizeObserverEntry */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ResizeObserverEntry\", function() { return ResizeObserverEntry; });\n/* harmony import */ var _algorithms_calculateBoxSize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./algorithms/calculateBoxSize */ \"./node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js\");\n/* harmony import */ var _utils_freeze__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/freeze */ \"./node_modules/@juggle/resize-observer/lib/utils/freeze.js\");\n\n\nvar ResizeObserverEntry = (function () {\n    function ResizeObserverEntry(target) {\n        var boxes = Object(_algorithms_calculateBoxSize__WEBPACK_IMPORTED_MODULE_0__[\"calculateBoxSizes\"])(target);\n        this.target = target;\n        this.contentRect = boxes.contentRect;\n        this.borderBoxSize = Object(_utils_freeze__WEBPACK_IMPORTED_MODULE_1__[\"freeze\"])([boxes.borderBoxSize]);\n        this.contentBoxSize = Object(_utils_freeze__WEBPACK_IMPORTED_MODULE_1__[\"freeze\"])([boxes.contentBoxSize]);\n        this.devicePixelContentBoxSize = Object(_utils_freeze__WEBPACK_IMPORTED_MODULE_1__[\"freeze\"])([boxes.devicePixelContentBoxSize]);\n    }\n    return ResizeObserverEntry;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TY3JvbGxlci8uL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvUmVzaXplT2JzZXJ2ZXJFbnRyeS5qcz80MWU4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQWtFO0FBQzFCO0FBQ3hDO0FBQ0E7QUFDQSxvQkFBb0Isc0ZBQWlCO0FBQ3JDO0FBQ0E7QUFDQSw2QkFBNkIsNERBQU07QUFDbkMsOEJBQThCLDREQUFNO0FBQ3BDLHlDQUF5Qyw0REFBTTtBQUMvQztBQUNBO0FBQ0EsQ0FBQztBQUM4QiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvUmVzaXplT2JzZXJ2ZXJFbnRyeS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNhbGN1bGF0ZUJveFNpemVzIH0gZnJvbSAnLi9hbGdvcml0aG1zL2NhbGN1bGF0ZUJveFNpemUnO1xuaW1wb3J0IHsgZnJlZXplIH0gZnJvbSAnLi91dGlscy9mcmVlemUnO1xudmFyIFJlc2l6ZU9ic2VydmVyRW50cnkgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFJlc2l6ZU9ic2VydmVyRW50cnkodGFyZ2V0KSB7XG4gICAgICAgIHZhciBib3hlcyA9IGNhbGN1bGF0ZUJveFNpemVzKHRhcmdldCk7XG4gICAgICAgIHRoaXMudGFyZ2V0ID0gdGFyZ2V0O1xuICAgICAgICB0aGlzLmNvbnRlbnRSZWN0ID0gYm94ZXMuY29udGVudFJlY3Q7XG4gICAgICAgIHRoaXMuYm9yZGVyQm94U2l6ZSA9IGZyZWV6ZShbYm94ZXMuYm9yZGVyQm94U2l6ZV0pO1xuICAgICAgICB0aGlzLmNvbnRlbnRCb3hTaXplID0gZnJlZXplKFtib3hlcy5jb250ZW50Qm94U2l6ZV0pO1xuICAgICAgICB0aGlzLmRldmljZVBpeGVsQ29udGVudEJveFNpemUgPSBmcmVlemUoW2JveGVzLmRldmljZVBpeGVsQ29udGVudEJveFNpemVdKTtcbiAgICB9XG4gICAgcmV0dXJuIFJlc2l6ZU9ic2VydmVyRW50cnk7XG59KCkpO1xuZXhwb3J0IHsgUmVzaXplT2JzZXJ2ZXJFbnRyeSB9O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/ResizeObserverSize.js":
/*!************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/ResizeObserverSize.js ***!
  \************************************************************************/
/*! exports provided: ResizeObserverSize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ResizeObserverSize\", function() { return ResizeObserverSize; });\n/* harmony import */ var _utils_freeze__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/freeze */ \"./node_modules/@juggle/resize-observer/lib/utils/freeze.js\");\n\nvar ResizeObserverSize = (function () {\n    function ResizeObserverSize(inlineSize, blockSize) {\n        this.inlineSize = inlineSize;\n        this.blockSize = blockSize;\n        Object(_utils_freeze__WEBPACK_IMPORTED_MODULE_0__[\"freeze\"])(this);\n    }\n    return ResizeObserverSize;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TY3JvbGxlci8uL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvUmVzaXplT2JzZXJ2ZXJTaXplLmpzP2M2NTQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQXdDO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSw0REFBTTtBQUNkO0FBQ0E7QUFDQSxDQUFDO0FBQzZCIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BqdWdnbGUvcmVzaXplLW9ic2VydmVyL2xpYi9SZXNpemVPYnNlcnZlclNpemUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmcmVlemUgfSBmcm9tICcuL3V0aWxzL2ZyZWV6ZSc7XG52YXIgUmVzaXplT2JzZXJ2ZXJTaXplID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBSZXNpemVPYnNlcnZlclNpemUoaW5saW5lU2l6ZSwgYmxvY2tTaXplKSB7XG4gICAgICAgIHRoaXMuaW5saW5lU2l6ZSA9IGlubGluZVNpemU7XG4gICAgICAgIHRoaXMuYmxvY2tTaXplID0gYmxvY2tTaXplO1xuICAgICAgICBmcmVlemUodGhpcyk7XG4gICAgfVxuICAgIHJldHVybiBSZXNpemVPYnNlcnZlclNpemU7XG59KCkpO1xuZXhwb3J0IHsgUmVzaXplT2JzZXJ2ZXJTaXplIH07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/ResizeObserverSize.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js ***!
  \********************************************************************************************/
/*! exports provided: broadcastActiveObservations */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"broadcastActiveObservations\", function() { return broadcastActiveObservations; });\n/* harmony import */ var _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/resizeObservers */ \"./node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js\");\n/* harmony import */ var _ResizeObserverEntry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ResizeObserverEntry */ \"./node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js\");\n/* harmony import */ var _calculateDepthForNode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./calculateDepthForNode */ \"./node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js\");\n/* harmony import */ var _calculateBoxSize__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./calculateBoxSize */ \"./node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js\");\n\n\n\n\nvar broadcastActiveObservations = function () {\n    var shallowestDepth = Infinity;\n    var callbacks = [];\n    _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_0__[\"resizeObservers\"].forEach(function processObserver(ro) {\n        if (ro.activeTargets.length === 0) {\n            return;\n        }\n        var entries = [];\n        ro.activeTargets.forEach(function processTarget(ot) {\n            var entry = new _ResizeObserverEntry__WEBPACK_IMPORTED_MODULE_1__[\"ResizeObserverEntry\"](ot.target);\n            var targetDepth = Object(_calculateDepthForNode__WEBPACK_IMPORTED_MODULE_2__[\"calculateDepthForNode\"])(ot.target);\n            entries.push(entry);\n            ot.lastReportedSize = Object(_calculateBoxSize__WEBPACK_IMPORTED_MODULE_3__[\"calculateBoxSize\"])(ot.target, ot.observedBox);\n            if (targetDepth < shallowestDepth) {\n                shallowestDepth = targetDepth;\n            }\n        });\n        callbacks.push(function resizeObserverCallback() {\n            ro.callback.call(ro.observer, entries, ro.observer);\n        });\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n    });\n    for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {\n        var callback = callbacks_1[_i];\n        callback();\n    }\n    return shallowestDepth;\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TY3JvbGxlci8uL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvYWxnb3JpdGhtcy9icm9hZGNhc3RBY3RpdmVPYnNlcnZhdGlvbnMuanM/Y2FiNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBMkQ7QUFDRTtBQUNHO0FBQ1Y7QUFDdEQ7QUFDQTtBQUNBO0FBQ0EsSUFBSSxzRUFBZTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHdFQUFtQjtBQUMvQyw4QkFBOEIsb0ZBQXFCO0FBQ25EO0FBQ0Esa0NBQWtDLDBFQUFnQjtBQUNsRDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTCw2Q0FBNkMseUJBQXlCO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDdUMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL2FsZ29yaXRobXMvYnJvYWRjYXN0QWN0aXZlT2JzZXJ2YXRpb25zLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVzaXplT2JzZXJ2ZXJzIH0gZnJvbSAnLi4vdXRpbHMvcmVzaXplT2JzZXJ2ZXJzJztcbmltcG9ydCB7IFJlc2l6ZU9ic2VydmVyRW50cnkgfSBmcm9tICcuLi9SZXNpemVPYnNlcnZlckVudHJ5JztcbmltcG9ydCB7IGNhbGN1bGF0ZURlcHRoRm9yTm9kZSB9IGZyb20gJy4vY2FsY3VsYXRlRGVwdGhGb3JOb2RlJztcbmltcG9ydCB7IGNhbGN1bGF0ZUJveFNpemUgfSBmcm9tICcuL2NhbGN1bGF0ZUJveFNpemUnO1xudmFyIGJyb2FkY2FzdEFjdGl2ZU9ic2VydmF0aW9ucyA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2hhbGxvd2VzdERlcHRoID0gSW5maW5pdHk7XG4gICAgdmFyIGNhbGxiYWNrcyA9IFtdO1xuICAgIHJlc2l6ZU9ic2VydmVycy5mb3JFYWNoKGZ1bmN0aW9uIHByb2Nlc3NPYnNlcnZlcihybykge1xuICAgICAgICBpZiAocm8uYWN0aXZlVGFyZ2V0cy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgZW50cmllcyA9IFtdO1xuICAgICAgICByby5hY3RpdmVUYXJnZXRzLmZvckVhY2goZnVuY3Rpb24gcHJvY2Vzc1RhcmdldChvdCkge1xuICAgICAgICAgICAgdmFyIGVudHJ5ID0gbmV3IFJlc2l6ZU9ic2VydmVyRW50cnkob3QudGFyZ2V0KTtcbiAgICAgICAgICAgIHZhciB0YXJnZXREZXB0aCA9IGNhbGN1bGF0ZURlcHRoRm9yTm9kZShvdC50YXJnZXQpO1xuICAgICAgICAgICAgZW50cmllcy5wdXNoKGVudHJ5KTtcbiAgICAgICAgICAgIG90Lmxhc3RSZXBvcnRlZFNpemUgPSBjYWxjdWxhdGVCb3hTaXplKG90LnRhcmdldCwgb3Qub2JzZXJ2ZWRCb3gpO1xuICAgICAgICAgICAgaWYgKHRhcmdldERlcHRoIDwgc2hhbGxvd2VzdERlcHRoKSB7XG4gICAgICAgICAgICAgICAgc2hhbGxvd2VzdERlcHRoID0gdGFyZ2V0RGVwdGg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBjYWxsYmFja3MucHVzaChmdW5jdGlvbiByZXNpemVPYnNlcnZlckNhbGxiYWNrKCkge1xuICAgICAgICAgICAgcm8uY2FsbGJhY2suY2FsbChyby5vYnNlcnZlciwgZW50cmllcywgcm8ub2JzZXJ2ZXIpO1xuICAgICAgICB9KTtcbiAgICAgICAgcm8uYWN0aXZlVGFyZ2V0cy5zcGxpY2UoMCwgcm8uYWN0aXZlVGFyZ2V0cy5sZW5ndGgpO1xuICAgIH0pO1xuICAgIGZvciAodmFyIF9pID0gMCwgY2FsbGJhY2tzXzEgPSBjYWxsYmFja3M7IF9pIDwgY2FsbGJhY2tzXzEubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgIHZhciBjYWxsYmFjayA9IGNhbGxiYWNrc18xW19pXTtcbiAgICAgICAgY2FsbGJhY2soKTtcbiAgICB9XG4gICAgcmV0dXJuIHNoYWxsb3dlc3REZXB0aDtcbn07XG5leHBvcnQgeyBicm9hZGNhc3RBY3RpdmVPYnNlcnZhdGlvbnMgfTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js ***!
  \*********************************************************************************/
/*! exports provided: calculateBoxSize, calculateBoxSizes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"calculateBoxSize\", function() { return calculateBoxSize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"calculateBoxSizes\", function() { return calculateBoxSizes; });\n/* harmony import */ var _ResizeObserverBoxOptions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ResizeObserverBoxOptions */ \"./node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js\");\n/* harmony import */ var _ResizeObserverSize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ResizeObserverSize */ \"./node_modules/@juggle/resize-observer/lib/ResizeObserverSize.js\");\n/* harmony import */ var _DOMRectReadOnly__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../DOMRectReadOnly */ \"./node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js\");\n/* harmony import */ var _utils_element__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/element */ \"./node_modules/@juggle/resize-observer/lib/utils/element.js\");\n/* harmony import */ var _utils_freeze__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/freeze */ \"./node_modules/@juggle/resize-observer/lib/utils/freeze.js\");\n/* harmony import */ var _utils_global__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/global */ \"./node_modules/@juggle/resize-observer/lib/utils/global.js\");\n\n\n\n\n\n\nvar cache = new WeakMap();\nvar scrollRegexp = /auto|scroll/;\nvar verticalRegexp = /^tb|vertical/;\nvar IE = (/msie|trident/i).test(_utils_global__WEBPACK_IMPORTED_MODULE_5__[\"global\"].navigator && _utils_global__WEBPACK_IMPORTED_MODULE_5__[\"global\"].navigator.userAgent);\nvar parseDimension = function (pixel) { return parseFloat(pixel || '0'); };\nvar size = function (inlineSize, blockSize, switchSizes) {\n    if (inlineSize === void 0) { inlineSize = 0; }\n    if (blockSize === void 0) { blockSize = 0; }\n    if (switchSizes === void 0) { switchSizes = false; }\n    return new _ResizeObserverSize__WEBPACK_IMPORTED_MODULE_1__[\"ResizeObserverSize\"]((switchSizes ? blockSize : inlineSize) || 0, (switchSizes ? inlineSize : blockSize) || 0);\n};\nvar zeroBoxes = Object(_utils_freeze__WEBPACK_IMPORTED_MODULE_4__[\"freeze\"])({\n    devicePixelContentBoxSize: size(),\n    borderBoxSize: size(),\n    contentBoxSize: size(),\n    contentRect: new _DOMRectReadOnly__WEBPACK_IMPORTED_MODULE_2__[\"DOMRectReadOnly\"](0, 0, 0, 0)\n});\nvar calculateBoxSizes = function (target, forceRecalculation) {\n    if (forceRecalculation === void 0) { forceRecalculation = false; }\n    if (cache.has(target) && !forceRecalculation) {\n        return cache.get(target);\n    }\n    if (Object(_utils_element__WEBPACK_IMPORTED_MODULE_3__[\"isHidden\"])(target)) {\n        cache.set(target, zeroBoxes);\n        return zeroBoxes;\n    }\n    var cs = getComputedStyle(target);\n    var svg = Object(_utils_element__WEBPACK_IMPORTED_MODULE_3__[\"isSVG\"])(target) && target.ownerSVGElement && target.getBBox();\n    var removePadding = !IE && cs.boxSizing === 'border-box';\n    var switchSizes = verticalRegexp.test(cs.writingMode || '');\n    var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');\n    var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');\n    var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);\n    var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);\n    var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);\n    var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);\n    var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);\n    var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);\n    var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);\n    var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);\n    var horizontalPadding = paddingLeft + paddingRight;\n    var verticalPadding = paddingTop + paddingBottom;\n    var horizontalBorderArea = borderLeft + borderRight;\n    var verticalBorderArea = borderTop + borderBottom;\n    var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;\n    var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;\n    var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;\n    var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;\n    var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;\n    var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;\n    var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;\n    var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;\n    var boxes = Object(_utils_freeze__WEBPACK_IMPORTED_MODULE_4__[\"freeze\"])({\n        devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),\n        borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),\n        contentBoxSize: size(contentWidth, contentHeight, switchSizes),\n        contentRect: new _DOMRectReadOnly__WEBPACK_IMPORTED_MODULE_2__[\"DOMRectReadOnly\"](paddingLeft, paddingTop, contentWidth, contentHeight)\n    });\n    cache.set(target, boxes);\n    return boxes;\n};\nvar calculateBoxSize = function (target, observedBox, forceRecalculation) {\n    var _a = calculateBoxSizes(target, forceRecalculation), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize, devicePixelContentBoxSize = _a.devicePixelContentBoxSize;\n    switch (observedBox) {\n        case _ResizeObserverBoxOptions__WEBPACK_IMPORTED_MODULE_0__[\"ResizeObserverBoxOptions\"].DEVICE_PIXEL_CONTENT_BOX:\n            return devicePixelContentBoxSize;\n        case _ResizeObserverBoxOptions__WEBPACK_IMPORTED_MODULE_0__[\"ResizeObserverBoxOptions\"].BORDER_BOX:\n            return borderBoxSize;\n        default:\n            return contentBoxSize;\n    }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TY3JvbGxlci8uL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvYWxnb3JpdGhtcy9jYWxjdWxhdGVCb3hTaXplLmpzPzEwNmMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXVFO0FBQ1o7QUFDTjtBQUNGO0FBQ1Y7QUFDQTtBQUN6QztBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0Msb0RBQU0sY0FBYyxvREFBTTtBQUMxRCx1Q0FBdUMsaUNBQWlDO0FBQ3hFO0FBQ0EsZ0NBQWdDLGdCQUFnQjtBQUNoRCwrQkFBK0IsZUFBZTtBQUM5QyxpQ0FBaUMscUJBQXFCO0FBQ3RELGVBQWUsc0VBQWtCO0FBQ2pDO0FBQ0EsZ0JBQWdCLDREQUFNO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixnRUFBZTtBQUNwQyxDQUFDO0FBQ0Q7QUFDQSx3Q0FBd0MsNEJBQTRCO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBLFFBQVEsK0RBQVE7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLDREQUFLO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiw0REFBTTtBQUN0QjtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsZ0VBQWU7QUFDeEMsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsa0ZBQXdCO0FBQ3JDO0FBQ0EsYUFBYSxrRkFBd0I7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUMrQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvYWxnb3JpdGhtcy9jYWxjdWxhdGVCb3hTaXplLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVzaXplT2JzZXJ2ZXJCb3hPcHRpb25zIH0gZnJvbSAnLi4vUmVzaXplT2JzZXJ2ZXJCb3hPcHRpb25zJztcbmltcG9ydCB7IFJlc2l6ZU9ic2VydmVyU2l6ZSB9IGZyb20gJy4uL1Jlc2l6ZU9ic2VydmVyU2l6ZSc7XG5pbXBvcnQgeyBET01SZWN0UmVhZE9ubHkgfSBmcm9tICcuLi9ET01SZWN0UmVhZE9ubHknO1xuaW1wb3J0IHsgaXNTVkcsIGlzSGlkZGVuIH0gZnJvbSAnLi4vdXRpbHMvZWxlbWVudCc7XG5pbXBvcnQgeyBmcmVlemUgfSBmcm9tICcuLi91dGlscy9mcmVlemUnO1xuaW1wb3J0IHsgZ2xvYmFsIH0gZnJvbSAnLi4vdXRpbHMvZ2xvYmFsJztcbnZhciBjYWNoZSA9IG5ldyBXZWFrTWFwKCk7XG52YXIgc2Nyb2xsUmVnZXhwID0gL2F1dG98c2Nyb2xsLztcbnZhciB2ZXJ0aWNhbFJlZ2V4cCA9IC9edGJ8dmVydGljYWwvO1xudmFyIElFID0gKC9tc2llfHRyaWRlbnQvaSkudGVzdChnbG9iYWwubmF2aWdhdG9yICYmIGdsb2JhbC5uYXZpZ2F0b3IudXNlckFnZW50KTtcbnZhciBwYXJzZURpbWVuc2lvbiA9IGZ1bmN0aW9uIChwaXhlbCkgeyByZXR1cm4gcGFyc2VGbG9hdChwaXhlbCB8fCAnMCcpOyB9O1xudmFyIHNpemUgPSBmdW5jdGlvbiAoaW5saW5lU2l6ZSwgYmxvY2tTaXplLCBzd2l0Y2hTaXplcykge1xuICAgIGlmIChpbmxpbmVTaXplID09PSB2b2lkIDApIHsgaW5saW5lU2l6ZSA9IDA7IH1cbiAgICBpZiAoYmxvY2tTaXplID09PSB2b2lkIDApIHsgYmxvY2tTaXplID0gMDsgfVxuICAgIGlmIChzd2l0Y2hTaXplcyA9PT0gdm9pZCAwKSB7IHN3aXRjaFNpemVzID0gZmFsc2U7IH1cbiAgICByZXR1cm4gbmV3IFJlc2l6ZU9ic2VydmVyU2l6ZSgoc3dpdGNoU2l6ZXMgPyBibG9ja1NpemUgOiBpbmxpbmVTaXplKSB8fCAwLCAoc3dpdGNoU2l6ZXMgPyBpbmxpbmVTaXplIDogYmxvY2tTaXplKSB8fCAwKTtcbn07XG52YXIgemVyb0JveGVzID0gZnJlZXplKHtcbiAgICBkZXZpY2VQaXhlbENvbnRlbnRCb3hTaXplOiBzaXplKCksXG4gICAgYm9yZGVyQm94U2l6ZTogc2l6ZSgpLFxuICAgIGNvbnRlbnRCb3hTaXplOiBzaXplKCksXG4gICAgY29udGVudFJlY3Q6IG5ldyBET01SZWN0UmVhZE9ubHkoMCwgMCwgMCwgMClcbn0pO1xudmFyIGNhbGN1bGF0ZUJveFNpemVzID0gZnVuY3Rpb24gKHRhcmdldCwgZm9yY2VSZWNhbGN1bGF0aW9uKSB7XG4gICAgaWYgKGZvcmNlUmVjYWxjdWxhdGlvbiA9PT0gdm9pZCAwKSB7IGZvcmNlUmVjYWxjdWxhdGlvbiA9IGZhbHNlOyB9XG4gICAgaWYgKGNhY2hlLmhhcyh0YXJnZXQpICYmICFmb3JjZVJlY2FsY3VsYXRpb24pIHtcbiAgICAgICAgcmV0dXJuIGNhY2hlLmdldCh0YXJnZXQpO1xuICAgIH1cbiAgICBpZiAoaXNIaWRkZW4odGFyZ2V0KSkge1xuICAgICAgICBjYWNoZS5zZXQodGFyZ2V0LCB6ZXJvQm94ZXMpO1xuICAgICAgICByZXR1cm4gemVyb0JveGVzO1xuICAgIH1cbiAgICB2YXIgY3MgPSBnZXRDb21wdXRlZFN0eWxlKHRhcmdldCk7XG4gICAgdmFyIHN2ZyA9IGlzU1ZHKHRhcmdldCkgJiYgdGFyZ2V0Lm93bmVyU1ZHRWxlbWVudCAmJiB0YXJnZXQuZ2V0QkJveCgpO1xuICAgIHZhciByZW1vdmVQYWRkaW5nID0gIUlFICYmIGNzLmJveFNpemluZyA9PT0gJ2JvcmRlci1ib3gnO1xuICAgIHZhciBzd2l0Y2hTaXplcyA9IHZlcnRpY2FsUmVnZXhwLnRlc3QoY3Mud3JpdGluZ01vZGUgfHwgJycpO1xuICAgIHZhciBjYW5TY3JvbGxWZXJ0aWNhbGx5ID0gIXN2ZyAmJiBzY3JvbGxSZWdleHAudGVzdChjcy5vdmVyZmxvd1kgfHwgJycpO1xuICAgIHZhciBjYW5TY3JvbGxIb3Jpem9udGFsbHkgPSAhc3ZnICYmIHNjcm9sbFJlZ2V4cC50ZXN0KGNzLm92ZXJmbG93WCB8fCAnJyk7XG4gICAgdmFyIHBhZGRpbmdUb3AgPSBzdmcgPyAwIDogcGFyc2VEaW1lbnNpb24oY3MucGFkZGluZ1RvcCk7XG4gICAgdmFyIHBhZGRpbmdSaWdodCA9IHN2ZyA/IDAgOiBwYXJzZURpbWVuc2lvbihjcy5wYWRkaW5nUmlnaHQpO1xuICAgIHZhciBwYWRkaW5nQm90dG9tID0gc3ZnID8gMCA6IHBhcnNlRGltZW5zaW9uKGNzLnBhZGRpbmdCb3R0b20pO1xuICAgIHZhciBwYWRkaW5nTGVmdCA9IHN2ZyA/IDAgOiBwYXJzZURpbWVuc2lvbihjcy5wYWRkaW5nTGVmdCk7XG4gICAgdmFyIGJvcmRlclRvcCA9IHN2ZyA/IDAgOiBwYXJzZURpbWVuc2lvbihjcy5ib3JkZXJUb3BXaWR0aCk7XG4gICAgdmFyIGJvcmRlclJpZ2h0ID0gc3ZnID8gMCA6IHBhcnNlRGltZW5zaW9uKGNzLmJvcmRlclJpZ2h0V2lkdGgpO1xuICAgIHZhciBib3JkZXJCb3R0b20gPSBzdmcgPyAwIDogcGFyc2VEaW1lbnNpb24oY3MuYm9yZGVyQm90dG9tV2lkdGgpO1xuICAgIHZhciBib3JkZXJMZWZ0ID0gc3ZnID8gMCA6IHBhcnNlRGltZW5zaW9uKGNzLmJvcmRlckxlZnRXaWR0aCk7XG4gICAgdmFyIGhvcml6b250YWxQYWRkaW5nID0gcGFkZGluZ0xlZnQgKyBwYWRkaW5nUmlnaHQ7XG4gICAgdmFyIHZlcnRpY2FsUGFkZGluZyA9IHBhZGRpbmdUb3AgKyBwYWRkaW5nQm90dG9tO1xuICAgIHZhciBob3Jpem9udGFsQm9yZGVyQXJlYSA9IGJvcmRlckxlZnQgKyBib3JkZXJSaWdodDtcbiAgICB2YXIgdmVydGljYWxCb3JkZXJBcmVhID0gYm9yZGVyVG9wICsgYm9yZGVyQm90dG9tO1xuICAgIHZhciBob3Jpem9udGFsU2Nyb2xsYmFyVGhpY2tuZXNzID0gIWNhblNjcm9sbEhvcml6b250YWxseSA/IDAgOiB0YXJnZXQub2Zmc2V0SGVpZ2h0IC0gdmVydGljYWxCb3JkZXJBcmVhIC0gdGFyZ2V0LmNsaWVudEhlaWdodDtcbiAgICB2YXIgdmVydGljYWxTY3JvbGxiYXJUaGlja25lc3MgPSAhY2FuU2Nyb2xsVmVydGljYWxseSA/IDAgOiB0YXJnZXQub2Zmc2V0V2lkdGggLSBob3Jpem9udGFsQm9yZGVyQXJlYSAtIHRhcmdldC5jbGllbnRXaWR0aDtcbiAgICB2YXIgd2lkdGhSZWR1Y3Rpb24gPSByZW1vdmVQYWRkaW5nID8gaG9yaXpvbnRhbFBhZGRpbmcgKyBob3Jpem9udGFsQm9yZGVyQXJlYSA6IDA7XG4gICAgdmFyIGhlaWdodFJlZHVjdGlvbiA9IHJlbW92ZVBhZGRpbmcgPyB2ZXJ0aWNhbFBhZGRpbmcgKyB2ZXJ0aWNhbEJvcmRlckFyZWEgOiAwO1xuICAgIHZhciBjb250ZW50V2lkdGggPSBzdmcgPyBzdmcud2lkdGggOiBwYXJzZURpbWVuc2lvbihjcy53aWR0aCkgLSB3aWR0aFJlZHVjdGlvbiAtIHZlcnRpY2FsU2Nyb2xsYmFyVGhpY2tuZXNzO1xuICAgIHZhciBjb250ZW50SGVpZ2h0ID0gc3ZnID8gc3ZnLmhlaWdodCA6IHBhcnNlRGltZW5zaW9uKGNzLmhlaWdodCkgLSBoZWlnaHRSZWR1Y3Rpb24gLSBob3Jpem9udGFsU2Nyb2xsYmFyVGhpY2tuZXNzO1xuICAgIHZhciBib3JkZXJCb3hXaWR0aCA9IGNvbnRlbnRXaWR0aCArIGhvcml6b250YWxQYWRkaW5nICsgdmVydGljYWxTY3JvbGxiYXJUaGlja25lc3MgKyBob3Jpem9udGFsQm9yZGVyQXJlYTtcbiAgICB2YXIgYm9yZGVyQm94SGVpZ2h0ID0gY29udGVudEhlaWdodCArIHZlcnRpY2FsUGFkZGluZyArIGhvcml6b250YWxTY3JvbGxiYXJUaGlja25lc3MgKyB2ZXJ0aWNhbEJvcmRlckFyZWE7XG4gICAgdmFyIGJveGVzID0gZnJlZXplKHtcbiAgICAgICAgZGV2aWNlUGl4ZWxDb250ZW50Qm94U2l6ZTogc2l6ZShNYXRoLnJvdW5kKGNvbnRlbnRXaWR0aCAqIGRldmljZVBpeGVsUmF0aW8pLCBNYXRoLnJvdW5kKGNvbnRlbnRIZWlnaHQgKiBkZXZpY2VQaXhlbFJhdGlvKSwgc3dpdGNoU2l6ZXMpLFxuICAgICAgICBib3JkZXJCb3hTaXplOiBzaXplKGJvcmRlckJveFdpZHRoLCBib3JkZXJCb3hIZWlnaHQsIHN3aXRjaFNpemVzKSxcbiAgICAgICAgY29udGVudEJveFNpemU6IHNpemUoY29udGVudFdpZHRoLCBjb250ZW50SGVpZ2h0LCBzd2l0Y2hTaXplcyksXG4gICAgICAgIGNvbnRlbnRSZWN0OiBuZXcgRE9NUmVjdFJlYWRPbmx5KHBhZGRpbmdMZWZ0LCBwYWRkaW5nVG9wLCBjb250ZW50V2lkdGgsIGNvbnRlbnRIZWlnaHQpXG4gICAgfSk7XG4gICAgY2FjaGUuc2V0KHRhcmdldCwgYm94ZXMpO1xuICAgIHJldHVybiBib3hlcztcbn07XG52YXIgY2FsY3VsYXRlQm94U2l6ZSA9IGZ1bmN0aW9uICh0YXJnZXQsIG9ic2VydmVkQm94LCBmb3JjZVJlY2FsY3VsYXRpb24pIHtcbiAgICB2YXIgX2EgPSBjYWxjdWxhdGVCb3hTaXplcyh0YXJnZXQsIGZvcmNlUmVjYWxjdWxhdGlvbiksIGJvcmRlckJveFNpemUgPSBfYS5ib3JkZXJCb3hTaXplLCBjb250ZW50Qm94U2l6ZSA9IF9hLmNvbnRlbnRCb3hTaXplLCBkZXZpY2VQaXhlbENvbnRlbnRCb3hTaXplID0gX2EuZGV2aWNlUGl4ZWxDb250ZW50Qm94U2l6ZTtcbiAgICBzd2l0Y2ggKG9ic2VydmVkQm94KSB7XG4gICAgICAgIGNhc2UgUmVzaXplT2JzZXJ2ZXJCb3hPcHRpb25zLkRFVklDRV9QSVhFTF9DT05URU5UX0JPWDpcbiAgICAgICAgICAgIHJldHVybiBkZXZpY2VQaXhlbENvbnRlbnRCb3hTaXplO1xuICAgICAgICBjYXNlIFJlc2l6ZU9ic2VydmVyQm94T3B0aW9ucy5CT1JERVJfQk9YOlxuICAgICAgICAgICAgcmV0dXJuIGJvcmRlckJveFNpemU7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gY29udGVudEJveFNpemU7XG4gICAgfVxufTtcbmV4cG9ydCB7IGNhbGN1bGF0ZUJveFNpemUsIGNhbGN1bGF0ZUJveFNpemVzIH07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js ***!
  \**************************************************************************************/
/*! exports provided: calculateDepthForNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"calculateDepthForNode\", function() { return calculateDepthForNode; });\n/* harmony import */ var _utils_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/element */ \"./node_modules/@juggle/resize-observer/lib/utils/element.js\");\n\nvar calculateDepthForNode = function (node) {\n    if (Object(_utils_element__WEBPACK_IMPORTED_MODULE_0__[\"isHidden\"])(node)) {\n        return Infinity;\n    }\n    var depth = 0;\n    var parent = node.parentNode;\n    while (parent) {\n        depth += 1;\n        parent = parent.parentNode;\n    }\n    return depth;\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TY3JvbGxlci8uL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvYWxnb3JpdGhtcy9jYWxjdWxhdGVEZXB0aEZvck5vZGUuanM/YzkzMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBNEM7QUFDNUM7QUFDQSxRQUFRLCtEQUFRO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2lDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BqdWdnbGUvcmVzaXplLW9ic2VydmVyL2xpYi9hbGdvcml0aG1zL2NhbGN1bGF0ZURlcHRoRm9yTm9kZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzSGlkZGVuIH0gZnJvbSAnLi4vdXRpbHMvZWxlbWVudCc7XG52YXIgY2FsY3VsYXRlRGVwdGhGb3JOb2RlID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICBpZiAoaXNIaWRkZW4obm9kZSkpIHtcbiAgICAgICAgcmV0dXJuIEluZmluaXR5O1xuICAgIH1cbiAgICB2YXIgZGVwdGggPSAwO1xuICAgIHZhciBwYXJlbnQgPSBub2RlLnBhcmVudE5vZGU7XG4gICAgd2hpbGUgKHBhcmVudCkge1xuICAgICAgICBkZXB0aCArPSAxO1xuICAgICAgICBwYXJlbnQgPSBwYXJlbnQucGFyZW50Tm9kZTtcbiAgICB9XG4gICAgcmV0dXJuIGRlcHRoO1xufTtcbmV4cG9ydCB7IGNhbGN1bGF0ZURlcHRoRm9yTm9kZSB9O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js ***!
  \***************************************************************************************/
/*! exports provided: deliverResizeLoopError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"deliverResizeLoopError\", function() { return deliverResizeLoopError; });\nvar msg = 'ResizeObserver loop completed with undelivered notifications.';\nvar deliverResizeLoopError = function () {\n    var event;\n    if (typeof ErrorEvent === 'function') {\n        event = new ErrorEvent('error', {\n            message: msg\n        });\n    }\n    else {\n        event = document.createEvent('Event');\n        event.initEvent('error', false, false);\n        event.message = msg;\n    }\n    window.dispatchEvent(event);\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TY3JvbGxlci8uL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvYWxnb3JpdGhtcy9kZWxpdmVyUmVzaXplTG9vcEVycm9yLmpzP2MyZTMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2tDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BqdWdnbGUvcmVzaXplLW9ic2VydmVyL2xpYi9hbGdvcml0aG1zL2RlbGl2ZXJSZXNpemVMb29wRXJyb3IuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbXNnID0gJ1Jlc2l6ZU9ic2VydmVyIGxvb3AgY29tcGxldGVkIHdpdGggdW5kZWxpdmVyZWQgbm90aWZpY2F0aW9ucy4nO1xudmFyIGRlbGl2ZXJSZXNpemVMb29wRXJyb3IgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV2ZW50O1xuICAgIGlmICh0eXBlb2YgRXJyb3JFdmVudCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBldmVudCA9IG5ldyBFcnJvckV2ZW50KCdlcnJvcicsIHtcbiAgICAgICAgICAgIG1lc3NhZ2U6IG1zZ1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGV2ZW50ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0V2ZW50Jyk7XG4gICAgICAgIGV2ZW50LmluaXRFdmVudCgnZXJyb3InLCBmYWxzZSwgZmFsc2UpO1xuICAgICAgICBldmVudC5tZXNzYWdlID0gbXNnO1xuICAgIH1cbiAgICB3aW5kb3cuZGlzcGF0Y2hFdmVudChldmVudCk7XG59O1xuZXhwb3J0IHsgZGVsaXZlclJlc2l6ZUxvb3BFcnJvciB9O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js ***!
  \************************************************************************************************/
/*! exports provided: gatherActiveObservationsAtDepth */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"gatherActiveObservationsAtDepth\", function() { return gatherActiveObservationsAtDepth; });\n/* harmony import */ var _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/resizeObservers */ \"./node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js\");\n/* harmony import */ var _calculateDepthForNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./calculateDepthForNode */ \"./node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js\");\n\n\nvar gatherActiveObservationsAtDepth = function (depth) {\n    _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_0__[\"resizeObservers\"].forEach(function processObserver(ro) {\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n        ro.skippedTargets.splice(0, ro.skippedTargets.length);\n        ro.observationTargets.forEach(function processTarget(ot) {\n            if (ot.isActive()) {\n                if (Object(_calculateDepthForNode__WEBPACK_IMPORTED_MODULE_1__[\"calculateDepthForNode\"])(ot.target) > depth) {\n                    ro.activeTargets.push(ot);\n                }\n                else {\n                    ro.skippedTargets.push(ot);\n                }\n            }\n        });\n    });\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TY3JvbGxlci8uL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvYWxnb3JpdGhtcy9nYXRoZXJBY3RpdmVPYnNlcnZhdGlvbnNBdERlcHRoLmpzPzQ1YjQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBMkQ7QUFDSztBQUNoRTtBQUNBLElBQUksc0VBQWU7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isb0ZBQXFCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDMkMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL2FsZ29yaXRobXMvZ2F0aGVyQWN0aXZlT2JzZXJ2YXRpb25zQXREZXB0aC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlc2l6ZU9ic2VydmVycyB9IGZyb20gJy4uL3V0aWxzL3Jlc2l6ZU9ic2VydmVycyc7XG5pbXBvcnQgeyBjYWxjdWxhdGVEZXB0aEZvck5vZGUgfSBmcm9tICcuL2NhbGN1bGF0ZURlcHRoRm9yTm9kZSc7XG52YXIgZ2F0aGVyQWN0aXZlT2JzZXJ2YXRpb25zQXREZXB0aCA9IGZ1bmN0aW9uIChkZXB0aCkge1xuICAgIHJlc2l6ZU9ic2VydmVycy5mb3JFYWNoKGZ1bmN0aW9uIHByb2Nlc3NPYnNlcnZlcihybykge1xuICAgICAgICByby5hY3RpdmVUYXJnZXRzLnNwbGljZSgwLCByby5hY3RpdmVUYXJnZXRzLmxlbmd0aCk7XG4gICAgICAgIHJvLnNraXBwZWRUYXJnZXRzLnNwbGljZSgwLCByby5za2lwcGVkVGFyZ2V0cy5sZW5ndGgpO1xuICAgICAgICByby5vYnNlcnZhdGlvblRhcmdldHMuZm9yRWFjaChmdW5jdGlvbiBwcm9jZXNzVGFyZ2V0KG90KSB7XG4gICAgICAgICAgICBpZiAob3QuaXNBY3RpdmUoKSkge1xuICAgICAgICAgICAgICAgIGlmIChjYWxjdWxhdGVEZXB0aEZvck5vZGUob3QudGFyZ2V0KSA+IGRlcHRoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJvLmFjdGl2ZVRhcmdldHMucHVzaChvdCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByby5za2lwcGVkVGFyZ2V0cy5wdXNoKG90KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0pO1xufTtcbmV4cG9ydCB7IGdhdGhlckFjdGl2ZU9ic2VydmF0aW9uc0F0RGVwdGggfTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js ***!
  \**************************************************************************************/
/*! exports provided: hasActiveObservations */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasActiveObservations\", function() { return hasActiveObservations; });\n/* harmony import */ var _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/resizeObservers */ \"./node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js\");\n\nvar hasActiveObservations = function () {\n    return _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_0__[\"resizeObservers\"].some(function (ro) { return ro.activeTargets.length > 0; });\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TY3JvbGxlci8uL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvYWxnb3JpdGhtcy9oYXNBY3RpdmVPYnNlcnZhdGlvbnMuanM/ZGRhMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBMkQ7QUFDM0Q7QUFDQSxXQUFXLHNFQUFlLHFCQUFxQixvQ0FBb0MsRUFBRTtBQUNyRjtBQUNpQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvYWxnb3JpdGhtcy9oYXNBY3RpdmVPYnNlcnZhdGlvbnMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZXNpemVPYnNlcnZlcnMgfSBmcm9tICcuLi91dGlscy9yZXNpemVPYnNlcnZlcnMnO1xudmFyIGhhc0FjdGl2ZU9ic2VydmF0aW9ucyA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gcmVzaXplT2JzZXJ2ZXJzLnNvbWUoZnVuY3Rpb24gKHJvKSB7IHJldHVybiByby5hY3RpdmVUYXJnZXRzLmxlbmd0aCA+IDA7IH0pO1xufTtcbmV4cG9ydCB7IGhhc0FjdGl2ZU9ic2VydmF0aW9ucyB9O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js ***!
  \***************************************************************************************/
/*! exports provided: hasSkippedObservations */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasSkippedObservations\", function() { return hasSkippedObservations; });\n/* harmony import */ var _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/resizeObservers */ \"./node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js\");\n\nvar hasSkippedObservations = function () {\n    return _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_0__[\"resizeObservers\"].some(function (ro) { return ro.skippedTargets.length > 0; });\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TY3JvbGxlci8uL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvYWxnb3JpdGhtcy9oYXNTa2lwcGVkT2JzZXJ2YXRpb25zLmpzP2MxMGIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQTJEO0FBQzNEO0FBQ0EsV0FBVyxzRUFBZSxxQkFBcUIscUNBQXFDLEVBQUU7QUFDdEY7QUFDa0MiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL2FsZ29yaXRobXMvaGFzU2tpcHBlZE9ic2VydmF0aW9ucy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlc2l6ZU9ic2VydmVycyB9IGZyb20gJy4uL3V0aWxzL3Jlc2l6ZU9ic2VydmVycyc7XG52YXIgaGFzU2tpcHBlZE9ic2VydmF0aW9ucyA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gcmVzaXplT2JzZXJ2ZXJzLnNvbWUoZnVuY3Rpb24gKHJvKSB7IHJldHVybiByby5za2lwcGVkVGFyZ2V0cy5sZW5ndGggPiAwOyB9KTtcbn07XG5leHBvcnQgeyBoYXNTa2lwcGVkT2JzZXJ2YXRpb25zIH07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/exports/resize-observer.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/exports/resize-observer.js ***!
  \*****************************************************************************/
/*! exports provided: ResizeObserver, ResizeObserverEntry, ResizeObserverSize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ResizeObserver__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ResizeObserver */ \"./node_modules/@juggle/resize-observer/lib/ResizeObserver.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ResizeObserver\", function() { return _ResizeObserver__WEBPACK_IMPORTED_MODULE_0__[\"ResizeObserver\"]; });\n\n/* harmony import */ var _ResizeObserverEntry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ResizeObserverEntry */ \"./node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ResizeObserverEntry\", function() { return _ResizeObserverEntry__WEBPACK_IMPORTED_MODULE_1__[\"ResizeObserverEntry\"]; });\n\n/* harmony import */ var _ResizeObserverSize__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ResizeObserverSize */ \"./node_modules/@juggle/resize-observer/lib/ResizeObserverSize.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ResizeObserverSize\", function() { return _ResizeObserverSize__WEBPACK_IMPORTED_MODULE_2__[\"ResizeObserverSize\"]; });\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TY3JvbGxlci8uL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvZXhwb3J0cy9yZXNpemUtb2JzZXJ2ZXIuanM/MWQxZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFtRDtBQUNVO0FBQ0YiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL2V4cG9ydHMvcmVzaXplLW9ic2VydmVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgUmVzaXplT2JzZXJ2ZXIgfSBmcm9tICcuLi9SZXNpemVPYnNlcnZlcic7XG5leHBvcnQgeyBSZXNpemVPYnNlcnZlckVudHJ5IH0gZnJvbSAnLi4vUmVzaXplT2JzZXJ2ZXJFbnRyeSc7XG5leHBvcnQgeyBSZXNpemVPYnNlcnZlclNpemUgfSBmcm9tICcuLi9SZXNpemVPYnNlcnZlclNpemUnO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/exports/resize-observer.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/utils/element.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/utils/element.js ***!
  \*******************************************************************/
/*! exports provided: isSVG, isHidden, isElement, isReplacedElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isSVG\", function() { return isSVG; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isHidden\", function() { return isHidden; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isElement\", function() { return isElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isReplacedElement\", function() { return isReplacedElement; });\nvar isSVG = function (target) { return target instanceof SVGElement && 'getBBox' in target; };\nvar isHidden = function (target) {\n    if (isSVG(target)) {\n        var _a = target.getBBox(), width = _a.width, height = _a.height;\n        return !width && !height;\n    }\n    var _b = target, offsetWidth = _b.offsetWidth, offsetHeight = _b.offsetHeight;\n    return !(offsetWidth || offsetHeight || target.getClientRects().length);\n};\nvar isElement = function (obj) {\n    var _a, _b;\n    if (obj instanceof Element) {\n        return true;\n    }\n    var scope = (_b = (_a = obj) === null || _a === void 0 ? void 0 : _a.ownerDocument) === null || _b === void 0 ? void 0 : _b.defaultView;\n    return !!(scope && obj instanceof scope.Element);\n};\nvar isReplacedElement = function (target) {\n    switch (target.tagName) {\n        case 'INPUT':\n            if (target.type !== 'image') {\n                break;\n            }\n        case 'VIDEO':\n        case 'AUDIO':\n        case 'EMBED':\n        case 'OBJECT':\n        case 'CANVAS':\n        case 'IFRAME':\n        case 'IMG':\n            return true;\n    }\n    return false;\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TY3JvbGxlci8uL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvdXRpbHMvZWxlbWVudC5qcz8zY2Q1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwrQkFBK0IsNERBQTREO0FBQzNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUN5RCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvdXRpbHMvZWxlbWVudC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBpc1NWRyA9IGZ1bmN0aW9uICh0YXJnZXQpIHsgcmV0dXJuIHRhcmdldCBpbnN0YW5jZW9mIFNWR0VsZW1lbnQgJiYgJ2dldEJCb3gnIGluIHRhcmdldDsgfTtcbnZhciBpc0hpZGRlbiA9IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICBpZiAoaXNTVkcodGFyZ2V0KSkge1xuICAgICAgICB2YXIgX2EgPSB0YXJnZXQuZ2V0QkJveCgpLCB3aWR0aCA9IF9hLndpZHRoLCBoZWlnaHQgPSBfYS5oZWlnaHQ7XG4gICAgICAgIHJldHVybiAhd2lkdGggJiYgIWhlaWdodDtcbiAgICB9XG4gICAgdmFyIF9iID0gdGFyZ2V0LCBvZmZzZXRXaWR0aCA9IF9iLm9mZnNldFdpZHRoLCBvZmZzZXRIZWlnaHQgPSBfYi5vZmZzZXRIZWlnaHQ7XG4gICAgcmV0dXJuICEob2Zmc2V0V2lkdGggfHwgb2Zmc2V0SGVpZ2h0IHx8IHRhcmdldC5nZXRDbGllbnRSZWN0cygpLmxlbmd0aCk7XG59O1xudmFyIGlzRWxlbWVudCA9IGZ1bmN0aW9uIChvYmopIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIGlmIChvYmogaW5zdGFuY2VvZiBFbGVtZW50KSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICB2YXIgc2NvcGUgPSAoX2IgPSAoX2EgPSBvYmopID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5vd25lckRvY3VtZW50KSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuZGVmYXVsdFZpZXc7XG4gICAgcmV0dXJuICEhKHNjb3BlICYmIG9iaiBpbnN0YW5jZW9mIHNjb3BlLkVsZW1lbnQpO1xufTtcbnZhciBpc1JlcGxhY2VkRWxlbWVudCA9IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICBzd2l0Y2ggKHRhcmdldC50YWdOYW1lKSB7XG4gICAgICAgIGNhc2UgJ0lOUFVUJzpcbiAgICAgICAgICAgIGlmICh0YXJnZXQudHlwZSAhPT0gJ2ltYWdlJykge1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICBjYXNlICdWSURFTyc6XG4gICAgICAgIGNhc2UgJ0FVRElPJzpcbiAgICAgICAgY2FzZSAnRU1CRUQnOlxuICAgICAgICBjYXNlICdPQkpFQ1QnOlxuICAgICAgICBjYXNlICdDQU5WQVMnOlxuICAgICAgICBjYXNlICdJRlJBTUUnOlxuICAgICAgICBjYXNlICdJTUcnOlxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn07XG5leHBvcnQgeyBpc1NWRywgaXNIaWRkZW4sIGlzRWxlbWVudCwgaXNSZXBsYWNlZEVsZW1lbnQgfTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/utils/element.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/utils/freeze.js":
/*!******************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/utils/freeze.js ***!
  \******************************************************************/
/*! exports provided: freeze */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"freeze\", function() { return freeze; });\nvar freeze = function (obj) { return Object.freeze(obj); };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TY3JvbGxlci8uL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvdXRpbHMvZnJlZXplLmpzP2ZjZjQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFPLDZCQUE2QiwyQkFBMkIiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL3V0aWxzL2ZyZWV6ZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgZnJlZXplID0gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gT2JqZWN0LmZyZWV6ZShvYmopOyB9O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/utils/freeze.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/utils/global.js":
/*!******************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/utils/global.js ***!
  \******************************************************************/
/*! exports provided: global */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"global\", function() { return global; });\nvar global = typeof window !== 'undefined' ? window : {};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TY3JvbGxlci8uL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvdXRpbHMvZ2xvYmFsLmpzP2NiNzYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFPIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BqdWdnbGUvcmVzaXplLW9ic2VydmVyL2xpYi91dGlscy9nbG9iYWwuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdmFyIGdsb2JhbCA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnID8gd2luZG93IDoge307XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/utils/global.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/utils/process.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/utils/process.js ***!
  \*******************************************************************/
/*! exports provided: process */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"process\", function() { return process; });\n/* harmony import */ var _algorithms_hasActiveObservations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../algorithms/hasActiveObservations */ \"./node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js\");\n/* harmony import */ var _algorithms_hasSkippedObservations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../algorithms/hasSkippedObservations */ \"./node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js\");\n/* harmony import */ var _algorithms_deliverResizeLoopError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../algorithms/deliverResizeLoopError */ \"./node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js\");\n/* harmony import */ var _algorithms_broadcastActiveObservations__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../algorithms/broadcastActiveObservations */ \"./node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js\");\n/* harmony import */ var _algorithms_gatherActiveObservationsAtDepth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../algorithms/gatherActiveObservationsAtDepth */ \"./node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js\");\n\n\n\n\n\nvar process = function () {\n    var depth = 0;\n    Object(_algorithms_gatherActiveObservationsAtDepth__WEBPACK_IMPORTED_MODULE_4__[\"gatherActiveObservationsAtDepth\"])(depth);\n    while (Object(_algorithms_hasActiveObservations__WEBPACK_IMPORTED_MODULE_0__[\"hasActiveObservations\"])()) {\n        depth = Object(_algorithms_broadcastActiveObservations__WEBPACK_IMPORTED_MODULE_3__[\"broadcastActiveObservations\"])();\n        Object(_algorithms_gatherActiveObservationsAtDepth__WEBPACK_IMPORTED_MODULE_4__[\"gatherActiveObservationsAtDepth\"])(depth);\n    }\n    if (Object(_algorithms_hasSkippedObservations__WEBPACK_IMPORTED_MODULE_1__[\"hasSkippedObservations\"])()) {\n        Object(_algorithms_deliverResizeLoopError__WEBPACK_IMPORTED_MODULE_2__[\"deliverResizeLoopError\"])();\n    }\n    return depth > 0;\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TY3JvbGxlci8uL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvdXRpbHMvcHJvY2Vzcy5qcz9kNGMwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQTRFO0FBQ0U7QUFDQTtBQUNVO0FBQ1E7QUFDaEc7QUFDQTtBQUNBLElBQUksbUhBQStCO0FBQ25DLFdBQVcsK0ZBQXFCO0FBQ2hDLGdCQUFnQiwyR0FBMkI7QUFDM0MsUUFBUSxtSEFBK0I7QUFDdkM7QUFDQSxRQUFRLGlHQUFzQjtBQUM5QixRQUFRLGlHQUFzQjtBQUM5QjtBQUNBO0FBQ0E7QUFDbUIiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL3V0aWxzL3Byb2Nlc3MuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBoYXNBY3RpdmVPYnNlcnZhdGlvbnMgfSBmcm9tICcuLi9hbGdvcml0aG1zL2hhc0FjdGl2ZU9ic2VydmF0aW9ucyc7XG5pbXBvcnQgeyBoYXNTa2lwcGVkT2JzZXJ2YXRpb25zIH0gZnJvbSAnLi4vYWxnb3JpdGhtcy9oYXNTa2lwcGVkT2JzZXJ2YXRpb25zJztcbmltcG9ydCB7IGRlbGl2ZXJSZXNpemVMb29wRXJyb3IgfSBmcm9tICcuLi9hbGdvcml0aG1zL2RlbGl2ZXJSZXNpemVMb29wRXJyb3InO1xuaW1wb3J0IHsgYnJvYWRjYXN0QWN0aXZlT2JzZXJ2YXRpb25zIH0gZnJvbSAnLi4vYWxnb3JpdGhtcy9icm9hZGNhc3RBY3RpdmVPYnNlcnZhdGlvbnMnO1xuaW1wb3J0IHsgZ2F0aGVyQWN0aXZlT2JzZXJ2YXRpb25zQXREZXB0aCB9IGZyb20gJy4uL2FsZ29yaXRobXMvZ2F0aGVyQWN0aXZlT2JzZXJ2YXRpb25zQXREZXB0aCc7XG52YXIgcHJvY2VzcyA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZGVwdGggPSAwO1xuICAgIGdhdGhlckFjdGl2ZU9ic2VydmF0aW9uc0F0RGVwdGgoZGVwdGgpO1xuICAgIHdoaWxlIChoYXNBY3RpdmVPYnNlcnZhdGlvbnMoKSkge1xuICAgICAgICBkZXB0aCA9IGJyb2FkY2FzdEFjdGl2ZU9ic2VydmF0aW9ucygpO1xuICAgICAgICBnYXRoZXJBY3RpdmVPYnNlcnZhdGlvbnNBdERlcHRoKGRlcHRoKTtcbiAgICB9XG4gICAgaWYgKGhhc1NraXBwZWRPYnNlcnZhdGlvbnMoKSkge1xuICAgICAgICBkZWxpdmVyUmVzaXplTG9vcEVycm9yKCk7XG4gICAgfVxuICAgIHJldHVybiBkZXB0aCA+IDA7XG59O1xuZXhwb3J0IHsgcHJvY2VzcyB9O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/utils/process.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js ***!
  \**************************************************************************/
/*! exports provided: queueMicroTask */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"queueMicroTask\", function() { return queueMicroTask; });\nvar trigger;\nvar callbacks = [];\nvar notify = function () { return callbacks.splice(0).forEach(function (cb) { return cb(); }); };\nvar queueMicroTask = function (callback) {\n    if (!trigger) {\n        var toggle_1 = 0;\n        var el_1 = document.createTextNode('');\n        var config = { characterData: true };\n        new MutationObserver(function () { return notify(); }).observe(el_1, config);\n        trigger = function () { el_1.textContent = \"\" + (toggle_1 ? toggle_1-- : toggle_1++); };\n    }\n    callbacks.push(callback);\n    trigger();\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TY3JvbGxlci8uL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvdXRpbHMvcXVldWVNaWNyb1Rhc2suanM/YTk5NCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBLDBCQUEwQixtREFBbUQsYUFBYSxFQUFFLEVBQUU7QUFDOUY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEIsMENBQTBDLGlCQUFpQixFQUFFO0FBQzdELCtCQUErQiw4REFBOEQ7QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDMEIiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL3V0aWxzL3F1ZXVlTWljcm9UYXNrLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHRyaWdnZXI7XG52YXIgY2FsbGJhY2tzID0gW107XG52YXIgbm90aWZ5ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gY2FsbGJhY2tzLnNwbGljZSgwKS5mb3JFYWNoKGZ1bmN0aW9uIChjYikgeyByZXR1cm4gY2IoKTsgfSk7IH07XG52YXIgcXVldWVNaWNyb1Rhc2sgPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICBpZiAoIXRyaWdnZXIpIHtcbiAgICAgICAgdmFyIHRvZ2dsZV8xID0gMDtcbiAgICAgICAgdmFyIGVsXzEgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnJyk7XG4gICAgICAgIHZhciBjb25maWcgPSB7IGNoYXJhY3RlckRhdGE6IHRydWUgfTtcbiAgICAgICAgbmV3IE11dGF0aW9uT2JzZXJ2ZXIoZnVuY3Rpb24gKCkgeyByZXR1cm4gbm90aWZ5KCk7IH0pLm9ic2VydmUoZWxfMSwgY29uZmlnKTtcbiAgICAgICAgdHJpZ2dlciA9IGZ1bmN0aW9uICgpIHsgZWxfMS50ZXh0Q29udGVudCA9IFwiXCIgKyAodG9nZ2xlXzEgPyB0b2dnbGVfMS0tIDogdG9nZ2xlXzErKyk7IH07XG4gICAgfVxuICAgIGNhbGxiYWNrcy5wdXNoKGNhbGxiYWNrKTtcbiAgICB0cmlnZ2VyKCk7XG59O1xuZXhwb3J0IHsgcXVldWVNaWNyb1Rhc2sgfTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js ***!
  \*******************************************************************************/
/*! exports provided: queueResizeObserver */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"queueResizeObserver\", function() { return queueResizeObserver; });\n/* harmony import */ var _queueMicroTask__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./queueMicroTask */ \"./node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js\");\n\nvar queueResizeObserver = function (cb) {\n    Object(_queueMicroTask__WEBPACK_IMPORTED_MODULE_0__[\"queueMicroTask\"])(function ResizeObserver() {\n        requestAnimationFrame(cb);\n    });\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TY3JvbGxlci8uL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvdXRpbHMvcXVldWVSZXNpemVPYnNlcnZlci5qcz9hMzY2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFrRDtBQUNsRDtBQUNBLElBQUksc0VBQWM7QUFDbEI7QUFDQSxLQUFLO0FBQ0w7QUFDK0IiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL3V0aWxzL3F1ZXVlUmVzaXplT2JzZXJ2ZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBxdWV1ZU1pY3JvVGFzayB9IGZyb20gJy4vcXVldWVNaWNyb1Rhc2snO1xudmFyIHF1ZXVlUmVzaXplT2JzZXJ2ZXIgPSBmdW5jdGlvbiAoY2IpIHtcbiAgICBxdWV1ZU1pY3JvVGFzayhmdW5jdGlvbiBSZXNpemVPYnNlcnZlcigpIHtcbiAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGNiKTtcbiAgICB9KTtcbn07XG5leHBvcnQgeyBxdWV1ZVJlc2l6ZU9ic2VydmVyIH07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js ***!
  \***************************************************************************/
/*! exports provided: resizeObservers */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"resizeObservers\", function() { return resizeObservers; });\nvar resizeObservers = [];\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TY3JvbGxlci8uL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvdXRpbHMvcmVzaXplT2JzZXJ2ZXJzLmpzP2E4ZTUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQzJCIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BqdWdnbGUvcmVzaXplLW9ic2VydmVyL2xpYi91dGlscy9yZXNpemVPYnNlcnZlcnMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcmVzaXplT2JzZXJ2ZXJzID0gW107XG5leHBvcnQgeyByZXNpemVPYnNlcnZlcnMgfTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/utils/scheduler.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/utils/scheduler.js ***!
  \*********************************************************************/
/*! exports provided: scheduler, updateCount */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scheduler\", function() { return scheduler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateCount\", function() { return updateCount; });\n/* harmony import */ var _process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./process */ \"./node_modules/@juggle/resize-observer/lib/utils/process.js\");\n/* harmony import */ var _global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./global */ \"./node_modules/@juggle/resize-observer/lib/utils/global.js\");\n/* harmony import */ var _queueResizeObserver__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./queueResizeObserver */ \"./node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js\");\n\n\n\nvar watching = 0;\nvar isWatching = function () { return !!watching; };\nvar CATCH_PERIOD = 250;\nvar observerConfig = { attributes: true, characterData: true, childList: true, subtree: true };\nvar events = [\n    'resize',\n    'load',\n    'transitionend',\n    'animationend',\n    'animationstart',\n    'animationiteration',\n    'keyup',\n    'keydown',\n    'mouseup',\n    'mousedown',\n    'mouseover',\n    'mouseout',\n    'blur',\n    'focus'\n];\nvar time = function (timeout) {\n    if (timeout === void 0) { timeout = 0; }\n    return Date.now() + timeout;\n};\nvar scheduled = false;\nvar Scheduler = (function () {\n    function Scheduler() {\n        var _this = this;\n        this.stopped = true;\n        this.listener = function () { return _this.schedule(); };\n    }\n    Scheduler.prototype.run = function (timeout) {\n        var _this = this;\n        if (timeout === void 0) { timeout = CATCH_PERIOD; }\n        if (scheduled) {\n            return;\n        }\n        scheduled = true;\n        var until = time(timeout);\n        Object(_queueResizeObserver__WEBPACK_IMPORTED_MODULE_2__[\"queueResizeObserver\"])(function () {\n            var elementsHaveResized = false;\n            try {\n                elementsHaveResized = Object(_process__WEBPACK_IMPORTED_MODULE_0__[\"process\"])();\n            }\n            finally {\n                scheduled = false;\n                timeout = until - time();\n                if (!isWatching()) {\n                    return;\n                }\n                if (elementsHaveResized) {\n                    _this.run(1000);\n                }\n                else if (timeout > 0) {\n                    _this.run(timeout);\n                }\n                else {\n                    _this.start();\n                }\n            }\n        });\n    };\n    Scheduler.prototype.schedule = function () {\n        this.stop();\n        this.run();\n    };\n    Scheduler.prototype.observe = function () {\n        var _this = this;\n        var cb = function () { return _this.observer && _this.observer.observe(document.body, observerConfig); };\n        document.body ? cb() : _global__WEBPACK_IMPORTED_MODULE_1__[\"global\"].addEventListener('DOMContentLoaded', cb);\n    };\n    Scheduler.prototype.start = function () {\n        var _this = this;\n        if (this.stopped) {\n            this.stopped = false;\n            this.observer = new MutationObserver(this.listener);\n            this.observe();\n            events.forEach(function (name) { return _global__WEBPACK_IMPORTED_MODULE_1__[\"global\"].addEventListener(name, _this.listener, true); });\n        }\n    };\n    Scheduler.prototype.stop = function () {\n        var _this = this;\n        if (!this.stopped) {\n            this.observer && this.observer.disconnect();\n            events.forEach(function (name) { return _global__WEBPACK_IMPORTED_MODULE_1__[\"global\"].removeEventListener(name, _this.listener, true); });\n            this.stopped = true;\n        }\n    };\n    return Scheduler;\n}());\nvar scheduler = new Scheduler();\nvar updateCount = function (n) {\n    !watching && n > 0 && scheduler.start();\n    watching += n;\n    !watching && scheduler.stop();\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TY3JvbGxlci8uL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvdXRpbHMvc2NoZWR1bGVyLmpzP2IwMDUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQW9DO0FBQ0Y7QUFDMEI7QUFDNUQ7QUFDQSw4QkFBOEIsbUJBQW1CO0FBQ2pEO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsYUFBYTtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyx5QkFBeUI7QUFDOUQ7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLHdCQUF3QjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxnRkFBbUI7QUFDM0I7QUFDQTtBQUNBLHNDQUFzQyx3REFBTztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLGdGQUFnRjtBQUM5RywrQkFBK0IsOENBQU07QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsUUFBUSw4Q0FBTSw4Q0FBOEMsRUFBRTtBQUMxRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsUUFBUSw4Q0FBTSxpREFBaUQsRUFBRTtBQUM3RztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDa0MiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL3V0aWxzL3NjaGVkdWxlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHByb2Nlc3MgfSBmcm9tICcuL3Byb2Nlc3MnO1xuaW1wb3J0IHsgZ2xvYmFsIH0gZnJvbSAnLi9nbG9iYWwnO1xuaW1wb3J0IHsgcXVldWVSZXNpemVPYnNlcnZlciB9IGZyb20gJy4vcXVldWVSZXNpemVPYnNlcnZlcic7XG52YXIgd2F0Y2hpbmcgPSAwO1xudmFyIGlzV2F0Y2hpbmcgPSBmdW5jdGlvbiAoKSB7IHJldHVybiAhIXdhdGNoaW5nOyB9O1xudmFyIENBVENIX1BFUklPRCA9IDI1MDtcbnZhciBvYnNlcnZlckNvbmZpZyA9IHsgYXR0cmlidXRlczogdHJ1ZSwgY2hhcmFjdGVyRGF0YTogdHJ1ZSwgY2hpbGRMaXN0OiB0cnVlLCBzdWJ0cmVlOiB0cnVlIH07XG52YXIgZXZlbnRzID0gW1xuICAgICdyZXNpemUnLFxuICAgICdsb2FkJyxcbiAgICAndHJhbnNpdGlvbmVuZCcsXG4gICAgJ2FuaW1hdGlvbmVuZCcsXG4gICAgJ2FuaW1hdGlvbnN0YXJ0JyxcbiAgICAnYW5pbWF0aW9uaXRlcmF0aW9uJyxcbiAgICAna2V5dXAnLFxuICAgICdrZXlkb3duJyxcbiAgICAnbW91c2V1cCcsXG4gICAgJ21vdXNlZG93bicsXG4gICAgJ21vdXNlb3ZlcicsXG4gICAgJ21vdXNlb3V0JyxcbiAgICAnYmx1cicsXG4gICAgJ2ZvY3VzJ1xuXTtcbnZhciB0aW1lID0gZnVuY3Rpb24gKHRpbWVvdXQpIHtcbiAgICBpZiAodGltZW91dCA9PT0gdm9pZCAwKSB7IHRpbWVvdXQgPSAwOyB9XG4gICAgcmV0dXJuIERhdGUubm93KCkgKyB0aW1lb3V0O1xufTtcbnZhciBzY2hlZHVsZWQgPSBmYWxzZTtcbnZhciBTY2hlZHVsZXIgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFNjaGVkdWxlcigpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdGhpcy5zdG9wcGVkID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5saXN0ZW5lciA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIF90aGlzLnNjaGVkdWxlKCk7IH07XG4gICAgfVxuICAgIFNjaGVkdWxlci5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKHRpbWVvdXQpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgaWYgKHRpbWVvdXQgPT09IHZvaWQgMCkgeyB0aW1lb3V0ID0gQ0FUQ0hfUEVSSU9EOyB9XG4gICAgICAgIGlmIChzY2hlZHVsZWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBzY2hlZHVsZWQgPSB0cnVlO1xuICAgICAgICB2YXIgdW50aWwgPSB0aW1lKHRpbWVvdXQpO1xuICAgICAgICBxdWV1ZVJlc2l6ZU9ic2VydmVyKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBlbGVtZW50c0hhdmVSZXNpemVkID0gZmFsc2U7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGVsZW1lbnRzSGF2ZVJlc2l6ZWQgPSBwcm9jZXNzKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmaW5hbGx5IHtcbiAgICAgICAgICAgICAgICBzY2hlZHVsZWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB0aW1lb3V0ID0gdW50aWwgLSB0aW1lKCk7XG4gICAgICAgICAgICAgICAgaWYgKCFpc1dhdGNoaW5nKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoZWxlbWVudHNIYXZlUmVzaXplZCkge1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5ydW4oMTAwMCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHRpbWVvdXQgPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgIF90aGlzLnJ1bih0aW1lb3V0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIF90aGlzLnN0YXJ0KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9O1xuICAgIFNjaGVkdWxlci5wcm90b3R5cGUuc2NoZWR1bGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuc3RvcCgpO1xuICAgICAgICB0aGlzLnJ1bigpO1xuICAgIH07XG4gICAgU2NoZWR1bGVyLnByb3RvdHlwZS5vYnNlcnZlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgY2IgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBfdGhpcy5vYnNlcnZlciAmJiBfdGhpcy5vYnNlcnZlci5vYnNlcnZlKGRvY3VtZW50LmJvZHksIG9ic2VydmVyQ29uZmlnKTsgfTtcbiAgICAgICAgZG9jdW1lbnQuYm9keSA/IGNiKCkgOiBnbG9iYWwuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGNiKTtcbiAgICB9O1xuICAgIFNjaGVkdWxlci5wcm90b3R5cGUuc3RhcnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIGlmICh0aGlzLnN0b3BwZWQpIHtcbiAgICAgICAgICAgIHRoaXMuc3RvcHBlZCA9IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5vYnNlcnZlciA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKHRoaXMubGlzdGVuZXIpO1xuICAgICAgICAgICAgdGhpcy5vYnNlcnZlKCk7XG4gICAgICAgICAgICBldmVudHMuZm9yRWFjaChmdW5jdGlvbiAobmFtZSkgeyByZXR1cm4gZ2xvYmFsLmFkZEV2ZW50TGlzdGVuZXIobmFtZSwgX3RoaXMubGlzdGVuZXIsIHRydWUpOyB9KTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgU2NoZWR1bGVyLnByb3RvdHlwZS5zdG9wID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBpZiAoIXRoaXMuc3RvcHBlZCkge1xuICAgICAgICAgICAgdGhpcy5vYnNlcnZlciAmJiB0aGlzLm9ic2VydmVyLmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgICAgIGV2ZW50cy5mb3JFYWNoKGZ1bmN0aW9uIChuYW1lKSB7IHJldHVybiBnbG9iYWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihuYW1lLCBfdGhpcy5saXN0ZW5lciwgdHJ1ZSk7IH0pO1xuICAgICAgICAgICAgdGhpcy5zdG9wcGVkID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIFNjaGVkdWxlcjtcbn0oKSk7XG52YXIgc2NoZWR1bGVyID0gbmV3IFNjaGVkdWxlcigpO1xudmFyIHVwZGF0ZUNvdW50ID0gZnVuY3Rpb24gKG4pIHtcbiAgICAhd2F0Y2hpbmcgJiYgbiA+IDAgJiYgc2NoZWR1bGVyLnN0YXJ0KCk7XG4gICAgd2F0Y2hpbmcgKz0gbjtcbiAgICAhd2F0Y2hpbmcgJiYgc2NoZWR1bGVyLnN0b3AoKTtcbn07XG5leHBvcnQgeyBzY2hlZHVsZXIsIHVwZGF0ZUNvdW50IH07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/utils/scheduler.js\n");

/***/ }),

/***/ "./node_modules/detect-browser/es/index.js":
/*!*************************************************!*\
  !*** ./node_modules/detect-browser/es/index.js ***!
  \*************************************************/
/*! exports provided: BrowserInfo, NodeInfo, SearchBotDeviceInfo, BotInfo, ReactNativeInfo, detect, browserName, parseUserAgent, detectOS, getNodeVersion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BrowserInfo\", function() { return BrowserInfo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NodeInfo\", function() { return NodeInfo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SearchBotDeviceInfo\", function() { return SearchBotDeviceInfo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BotInfo\", function() { return BotInfo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ReactNativeInfo\", function() { return ReactNativeInfo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"detect\", function() { return detect; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"browserName\", function() { return browserName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parseUserAgent\", function() { return parseUserAgent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"detectOS\", function() { return detectOS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getNodeVersion\", function() { return getNodeVersion; });\nvar __spreadArrays = (undefined && undefined.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nvar BrowserInfo = /** @class */ (function () {\n    function BrowserInfo(name, version, os) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.type = 'browser';\n    }\n    return BrowserInfo;\n}());\n\nvar NodeInfo = /** @class */ (function () {\n    function NodeInfo(version) {\n        this.version = version;\n        this.type = 'node';\n        this.name = 'node';\n        this.os = process.platform;\n    }\n    return NodeInfo;\n}());\n\nvar SearchBotDeviceInfo = /** @class */ (function () {\n    function SearchBotDeviceInfo(name, version, os, bot) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.bot = bot;\n        this.type = 'bot-device';\n    }\n    return SearchBotDeviceInfo;\n}());\n\nvar BotInfo = /** @class */ (function () {\n    function BotInfo() {\n        this.type = 'bot';\n        this.bot = true; // NOTE: deprecated test name instead\n        this.name = 'bot';\n        this.version = null;\n        this.os = null;\n    }\n    return BotInfo;\n}());\n\nvar ReactNativeInfo = /** @class */ (function () {\n    function ReactNativeInfo() {\n        this.type = 'react-native';\n        this.name = 'react-native';\n        this.version = null;\n        this.os = null;\n    }\n    return ReactNativeInfo;\n}());\n\n// tslint:disable-next-line:max-line-length\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nvar SEARCHBOT_OS_REGEX = /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\\ Jeeves\\/Teoma|ia_archiver)/;\nvar REQUIRED_VERSION_PARTS = 3;\nvar userAgentRules = [\n    ['aol', /AOLShield\\/([0-9\\._]+)/],\n    ['edge', /Edge\\/([0-9\\._]+)/],\n    ['edge-ios', /EdgiOS\\/([0-9\\._]+)/],\n    ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\n    ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\n    ['samsung', /SamsungBrowser\\/([0-9\\.]+)/],\n    ['silk', /\\bSilk\\/([0-9._-]+)\\b/],\n    ['miui', /MiuiBrowser\\/([0-9\\.]+)$/],\n    ['beaker', /BeakerBrowser\\/([0-9\\.]+)/],\n    ['edge-chromium', /EdgA?\\/([0-9\\.]+)/],\n    [\n        'chromium-webview',\n        /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/,\n    ],\n    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n    ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\n    ['fxios', /FxiOS\\/([0-9\\.]+)/],\n    ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/],\n    ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\n    ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/],\n    ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\n    ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\n    ['ie', /MSIE\\s(7\\.0)/],\n    ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\n    ['android', /Android\\s([0-9\\.]+)/],\n    ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\n    ['safari', /Version\\/([0-9\\._]+).*Safari/],\n    ['facebook', /FBAV\\/([0-9\\.]+)/],\n    ['instagram', /Instagram\\s([0-9\\.]+)/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],\n    ['searchbot', SEARCHBOX_UA_REGEX],\n];\nvar operatingSystemRules = [\n    ['iOS', /iP(hone|od|ad)/],\n    ['Android OS', /Android/],\n    ['BlackBerry OS', /BlackBerry|BB10/],\n    ['Windows Mobile', /IEMobile/],\n    ['Amazon OS', /Kindle/],\n    ['Windows 3.11', /Win16/],\n    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\n    ['Windows 98', /(Windows 98)|(Win98)/],\n    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\n    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\n    ['Windows Server 2003', /(Windows NT 5.2)/],\n    ['Windows Vista', /(Windows NT 6.0)/],\n    ['Windows 7', /(Windows NT 6.1)/],\n    ['Windows 8', /(Windows NT 6.2)/],\n    ['Windows 8.1', /(Windows NT 6.3)/],\n    ['Windows 10', /(Windows NT 10.0)/],\n    ['Windows ME', /Windows ME/],\n    ['Open BSD', /OpenBSD/],\n    ['Sun OS', /SunOS/],\n    ['Chrome OS', /CrOS/],\n    ['Linux', /(Linux)|(X11)/],\n    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\n    ['QNX', /QNX/],\n    ['BeOS', /BeOS/],\n    ['OS/2', /OS\\/2/],\n];\nfunction detect(userAgent) {\n    if (!!userAgent) {\n        return parseUserAgent(userAgent);\n    }\n    if (typeof document === 'undefined' &&\n        typeof navigator !== 'undefined' &&\n        navigator.product === 'ReactNative') {\n        return new ReactNativeInfo();\n    }\n    if (typeof navigator !== 'undefined') {\n        return parseUserAgent(navigator.userAgent);\n    }\n    return getNodeVersion();\n}\nfunction matchUserAgent(ua) {\n    // opted for using reduce here rather than Array#first with a regex.test call\n    // this is primarily because using the reduce we only perform the regex\n    // execution once rather than once for the test and for the exec again below\n    // probably something that needs to be benchmarked though\n    return (ua !== '' &&\n        userAgentRules.reduce(function (matched, _a) {\n            var browser = _a[0], regex = _a[1];\n            if (matched) {\n                return matched;\n            }\n            var uaMatch = regex.exec(ua);\n            return !!uaMatch && [browser, uaMatch];\n        }, false));\n}\nfunction browserName(ua) {\n    var data = matchUserAgent(ua);\n    return data ? data[0] : null;\n}\nfunction parseUserAgent(ua) {\n    var matchedRule = matchUserAgent(ua);\n    if (!matchedRule) {\n        return null;\n    }\n    var name = matchedRule[0], match = matchedRule[1];\n    if (name === 'searchbot') {\n        return new BotInfo();\n    }\n    var versionParts = match[1] && match[1].split(/[._]/).slice(0, 3);\n    if (versionParts) {\n        if (versionParts.length < REQUIRED_VERSION_PARTS) {\n            versionParts = __spreadArrays(versionParts, createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length));\n        }\n    }\n    else {\n        versionParts = [];\n    }\n    var version = versionParts.join('.');\n    var os = detectOS(ua);\n    var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);\n    if (searchBotMatch && searchBotMatch[1]) {\n        return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);\n    }\n    return new BrowserInfo(name, version, os);\n}\nfunction detectOS(ua) {\n    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];\n        var match = regex.exec(ua);\n        if (match) {\n            return os;\n        }\n    }\n    return null;\n}\nfunction getNodeVersion() {\n    var isNode = typeof process !== 'undefined' && process.version;\n    return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\nfunction createVersionParts(count) {\n    var output = [];\n    for (var ii = 0; ii < count; ii++) {\n        output.push('0');\n    }\n    return output;\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/detect-browser/es/index.js\n");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/process/browser.js\n");

/***/ }),

/***/ "./node_modules/react-is-mounted-hook/lib/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/react-is-mounted-hook/lib/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar use_is_mounted_1 = __importDefault(__webpack_require__(/*! ./use-is-mounted */ \"./node_modules/react-is-mounted-hook/lib/use-is-mounted.js\"));\nexports.default = use_is_mounted_1.default;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TY3JvbGxlci8uL25vZGVfbW9kdWxlcy9yZWFjdC1pcy1tb3VudGVkLWhvb2svbGliL2luZGV4LmpzPzVjOGIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDRDQUE0QztBQUM1QztBQUNBLDhDQUE4QyxjQUFjO0FBQzVELHVDQUF1QyxtQkFBTyxDQUFDLG9GQUFrQjtBQUNqRTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzLW1vdW50ZWQtaG9vay9saWIvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciB1c2VfaXNfbW91bnRlZF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL3VzZS1pcy1tb3VudGVkXCIpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IHVzZV9pc19tb3VudGVkXzEuZGVmYXVsdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-is-mounted-hook/lib/index.js\n");

/***/ }),

/***/ "./node_modules/react-is-mounted-hook/lib/use-is-mounted.js":
/*!******************************************************************!*\
  !*** ./node_modules/react-is-mounted-hook/lib/use-is-mounted.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __webpack_require__(/*! react */ \"react\");\nfunction useIsMounted() {\n    var ref = react_1.useRef(false);\n    react_1.useEffect(function () {\n        ref.current = true;\n        return function () {\n            ref.current = false;\n        };\n    }, []);\n    return react_1.useCallback(function () { return ref.current; }, [ref]);\n}\nexports.default = useIsMounted;\n//# sourceMappingURL=use-is-mounted.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TY3JvbGxlci8uL25vZGVfbW9kdWxlcy9yZWFjdC1pcy1tb3VudGVkLWhvb2svbGliL3VzZS1pcy1tb3VudGVkLmpzPzkzMjEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RCxjQUFjLG1CQUFPLENBQUMsb0JBQU87QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsNENBQTRDLG9CQUFvQixFQUFFO0FBQ2xFO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9yZWFjdC1pcy1tb3VudGVkLWhvb2svbGliL3VzZS1pcy1tb3VudGVkLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgcmVhY3RfMSA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmZ1bmN0aW9uIHVzZUlzTW91bnRlZCgpIHtcbiAgICB2YXIgcmVmID0gcmVhY3RfMS51c2VSZWYoZmFsc2UpO1xuICAgIHJlYWN0XzEudXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmVmLmN1cnJlbnQgPSB0cnVlO1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmVmLmN1cnJlbnQgPSBmYWxzZTtcbiAgICAgICAgfTtcbiAgICB9LCBbXSk7XG4gICAgcmV0dXJuIHJlYWN0XzEudXNlQ2FsbGJhY2soZnVuY3Rpb24gKCkgeyByZXR1cm4gcmVmLmN1cnJlbnQ7IH0sIFtyZWZdKTtcbn1cbmV4cG9ydHMuZGVmYXVsdCA9IHVzZUlzTW91bnRlZDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVzZS1pcy1tb3VudGVkLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-is-mounted-hook/lib/use-is-mounted.js\n");

/***/ }),

/***/ "./src/cradle.tsx":
/*!************************!*\
  !*** ./src/cradle.tsx ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" // cradle.tsx\n// copyright (c) 2020 Henrik Bechmann, Toronto, Licence: MIT\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n    TODO:\n\n    add scroller name for debugging\n\n    fold shift only happens after delay\n\n    nested horizontal tail boundary is wrong - underlying structure; head bottom boundary is wrong\n\n    for resize, preserve cache for reload\n\n    can't mount error in nested lists\n\n    Debug scrollToItem callback (including setting scrollforward on first action).\n        motion takes place but gets close rather than exact. Position is off by runwaycount\n\n    Make sure item shell triggers are only fired at the leading, not trailing, edge\n\n    Inconsistency in viewportrows, sometimes Math.ceil, sometimes Math.floor\n\n    change height to 0px from auto for spine in vertical\n    \n    update scrollforward logic to take into account rapid opposite scrolling.\n    Use differences in scrollTop?\n\n    ==>> check getShift logic. !scrollforward should select next calculated index\n    to be above the fold if possible.\n\n    QA defend against butterfly getting intersections from opposite scroll direction\n        as the result of a short viewport\n\n    implement sessionid scheme for cell content\n\n    deal with spine being notified by bottom border rather than top\n\n    test ITEM_OBSERVER_THRESHOLD at various levels\n    think through management of items larger than viewport\n\n    Add ITEM_OBSERVER_THRESHOLD to test parameters\n\n    Add show fold to test parameters\n\n */\n\n/*\n    Description\n    -----------\n    The GridSroller provides the illusion of infinite scrolling through the use of a data 'cradle' inside a viewport.\n    The illusion is maintained by synchronizing changes in cradle content with cradle location inside a scrollblock, such\n    that as the scrollblock is moved, the cradle moves oppositely in the scrollblock (to stay visible within the viewport).\n    The scrollblock is sized to approximate the list being viewed, so as to have a scroll thumb size and position which\n    realistically reflects the size of the list being shown.\n\n    The position of the cradle is controlled by a 'spine' which is a 0px height/width (along the medial - ScrollBlock can be\n    verticsl or horizontal). The purpose of the spine is to act as a 'fold', above which cell content expands 'upwards', and\n    below which the cell content expands  'downwards'. GridScroller can be viewed vertically or horizontally. When horizontal,\n    the spine has a 0px width, so that the 'fold' is vertical, and cells expand to the left and right.\n\n    The spine is controlled to always be in the at the leading edge of the leading cellrow of the viewport. Thus\n    in vertical orientation, the spine 'top' css attribute is always equal to the 'scrollTop' position of the scrollblock,\n    plus an adjustment. The adjustment is the result of the alignment of the spine in relation to the top-(or left-)most cell\n    in the viewport (the 'reference' row). The spine can only be placed at the leading edge of the first visible\n    cell in the viewport. Therefore the spine offset from the leading edge of the viewport can be anywhere from minus to\n    plus the length of the leading row. The exact amount depends on where the 'breakpoint' of transition notification is set for\n    cells crossing the viewport threshold (and can be configured). The default of the breakpoint is .5 (half the length of the cell).\n\n    Technically, there are several reference points tracked by the GridScroller. These are:\n        - spineReferenceIndex (the virtual index of the item controlling the location of the spine)\n            The spineReferenceIndex is also used to allocate items above (lower index value) and below (same or higher index value)\n            the fold\n        - cradleReferenceIndex (the virtual index of the item defining the leading bound of the cradle content)\n        - spineOffset (pixels - plus or minus - that the spine is placed in relation to the viewport's leading edge)\n    \n    These reference points are applied to the following structures:\n        - the viewport\n        - the scrollblock\n        - the cradle, consisting of\n            - the spine (contains cradle head and tail)\n            - the head (contains leading items)\n            - the tail (contains trailing items)\n\n    Structure details:\n        the cradle content consists of\n        - the number of rows that are visible in the viewport (according to the default parameters)\n            - this typically includes one partially visible row\n        - the number of runway rows specified in the parameters, times 2 (one et for the head; one for the tail)\n        - the number of items is the number of rows times the 'crosscount' the lateral number of cells.\n        - the last row might consist of fewer items than crosscount, to match the maximum listsize\n        - the cradleRowcount (visible default rows + runwaycount * 2) and viewpointRowcount (visble rows;typicall one partial)\n\n    Item containers:\n        Client cell content is contained in ItemShell's, which are configured according to GridScroller's input parameters.\n        The ItemCell's are in turn contained in CSS grid structures. There are two grid structures - one in the cradle head,\n        and one in the cradle tail. Each grid structure is allowed uniform padding and gaps - identical between the two.\n\n    Overscroll handling:\n        Owing to the weight of the code, and potential rapidity of scrolling, there is an overscroll protocol.\n        if the overscroll is such that part of the cradle is still within the viewport boundaries, then the overscroll\n        is calculated as the number of cell rows that would fit (completely or partially) in the space between the edge of\n        the cradle that is receding from a viewport edge.\n\n        If the overshoot is such that the cradle has entirely passed out of the viewport, the GridScroller goes into 'Repositoining'\n        mode, meaning that it tracks relative location of the spine edge of the viewport, and repaints the cradle accroding to\n        this position when the scrolling stops.\n*/\n\nvar react_1 = __importStar(__webpack_require__(/*! react */ \"react\"));\n\nvar viewport_1 = __webpack_require__(/*! ./viewport */ \"./src/viewport.tsx\");\n\nvar react_is_mounted_hook_1 = __importDefault(__webpack_require__(/*! react-is-mounted-hook */ \"./node_modules/react-is-mounted-hook/lib/index.js\")); // import ResizeObserverPolyfill from 'resize-observer-polyfill'\n\n\nvar resize_observer_1 = __webpack_require__(/*! @juggle/resize-observer */ \"./node_modules/@juggle/resize-observer/lib/exports/resize-observer.js\");\n\nvar portalmanager_1 = __webpack_require__(/*! ./portalmanager */ \"./src/portalmanager.tsx\");\n\nvar LocalResizeObserver = window['ResizeObserver'] || resize_observer_1.ResizeObserver;\nvar ITEM_OBSERVER_THRESHOLD = 0;\n\nvar cradlefunctions_1 = __webpack_require__(/*! ./cradlefunctions */ \"./src/cradlefunctions.tsx\");\n\nvar scrolltracker_1 = __importDefault(__webpack_require__(/*! ./scrolltracker */ \"./src/scrolltracker.tsx\"));\n\nvar SCROLL_TIMEOUT_FOR_ONAFTERSCROLL = 200;\n\nvar Cradle = function Cradle(_a) {\n  var gap = _a.gap,\n      padding = _a.padding,\n      // runwaylength,\n  runwaycount = _a.runwaycount,\n      listsize = _a.listsize,\n      indexOffset = _a.indexOffset,\n      orientation = _a.orientation,\n      cellHeight = _a.cellHeight,\n      cellWidth = _a.cellWidth,\n      getItem = _a.getItem,\n      placeholder = _a.placeholder,\n      functions = _a.functions,\n      styles = _a.styles,\n      scrollerName = _a.scrollerName,\n      scrollerID = _a.scrollerID; // functions and styles handled separately\n\n  var cradlePropsRef = react_1.useRef(null); // access by closures\n\n  cradlePropsRef.current = react_1.useMemo(function () {\n    return {\n      gap: gap,\n      padding: padding,\n      // runwaylength,\n      runwaycount: runwaycount,\n      listsize: listsize,\n      indexOffset: indexOffset,\n      orientation: orientation,\n      cellHeight: cellHeight,\n      cellWidth: cellWidth,\n      getItem: getItem,\n      placeholder: placeholder,\n      scrollerName: scrollerName,\n      scrollerID: scrollerID\n    };\n  }, [gap, padding, // runwaylength,\n  runwaycount, listsize, indexOffset, orientation, cellHeight, cellWidth, getItem, placeholder]); // =============================================================================================\n  // --------------------------------------[ INITIALIZATION ]-------------------------------------\n  // =============================================================================================\n\n  var contentmanager = react_1.useContext(portalmanager_1.PortalContext); // -----------------------------------------------------------------------\n  // -----------------------------------[ utilites ]------------------------\n\n  var contentManager = react_1.useContext(portalmanager_1.PortalContext);\n  var isMounted = react_is_mounted_hook_1[\"default\"]();\n  var referenceIndexCallbackRef = react_1.useRef(functions === null || functions === void 0 ? void 0 : functions.referenceIndexCallback);\n  var itemObserverRef = react_1.useRef(null); // IntersectionObserver\n\n  var cradleIntersectionObserverRef = react_1.useRef(null);\n  var cradleResizeObserverRef = react_1.useRef(null); // -----------------------------------------------------------------------\n  // ---------------------------[ context data ]----------------------------\n\n  var viewportData = react_1.useContext(viewport_1.ViewportContext);\n  var viewportDataRef = react_1.useRef(null);\n  viewportDataRef.current = viewportData;\n\n  var _b = react_1.useState('setup'),\n      cradleState = _b[0],\n      saveCradleState = _b[1];\n\n  var cradleStateRef = react_1.useRef(null); // access by closures\n\n  cradleStateRef.current = cradleState; // console.log('scrollerID, cradleState', scrollerID, cradleState)\n  // -----------------------------------------------------------------------\n  // -------------------------[ control flags ]-----------------\n\n  var controlFlagsRef = react_1.useRef({\n    pauseItemObserver: true,\n    pauseCradleIntersectionObserver: true,\n    pauseCradleResizeObserver: true,\n    pauseScrollingEffects: true,\n    isTailCradleInView: true,\n    isHeadCradleInView: true,\n    isCradleInView: true\n  }); // ------------------------------------------------------------------------\n  // -----------------------[ initialization effects ]-----------------------\n  //initialize host functions properties\n\n  react_1.useEffect(function () {\n    if (functions === null || functions === void 0 ? void 0 : functions.hasOwnProperty('scrollToItem')) {\n      functions.scrollToItem = scrollToItem;\n    }\n\n    if (functions === null || functions === void 0 ? void 0 : functions.hasOwnProperty('getVisibleList')) {\n      functions.getVisibleList = getVisibleList;\n    }\n\n    if (functions === null || functions === void 0 ? void 0 : functions.hasOwnProperty('getContentList')) {\n      functions.getContentList = getContentList;\n    }\n\n    if (functions === null || functions === void 0 ? void 0 : functions.hasOwnProperty('reload')) {\n      functions.reload = reload;\n    }\n\n    referenceIndexCallbackRef.current = functions === null || functions === void 0 ? void 0 : functions.referenceIndexCallback;\n  }, [functions]); // initialize window scroll listener\n\n  react_1.useEffect(function () {\n    var viewportData = viewportDataRef.current;\n    viewportData.elementref.current.addEventListener('scroll', onScroll);\n    contentManager.createScrollerPortalRepository(cradlePropsRef.current.scrollerID);\n    return function () {\n      // console.log('unmounting cradle:scrollerName, portals',\n      //     scrollerName,cradleContentRef.current.portalData)\n      viewportData.elementref.current && viewportData.elementref.current.removeEventListener('scroll', onScroll);\n    };\n  }, []); // -----------------------------------------------------------------------\n  // -----------------------[ reconfiguration effects ]---------------------\n  // trigger resizing based on viewport state\n\n  react_1.useEffect(function () {\n    // console.log('viewportData.isResizing', viewportData.isResizing)\n    if (cradleStateRef.current == 'setup') return;\n\n    if (viewportData.isResizing) {\n      callingReferenceIndexDataRef.current = __assign({}, stableReferenceIndexDataRef.current); // console.log('calling resizing with', callingReferenceIndexDataRef.current)\n\n      controlFlagsRef.current.pauseItemObserver = true;\n      controlFlagsRef.current.pauseCradleIntersectionObserver = true;\n      controlFlagsRef.current.pauseCradleResizeObserver = true;\n      controlFlagsRef.current.pauseScrollingEffects = true;\n      saveCradleState('resizing');\n    } // complete resizing mode\n\n\n    if (!viewportData.isResizing && cradleStateRef.current == 'resizing') {\n      saveCradleState('resize');\n    }\n  }, [viewportData.isResizing]); // reload for changed parameters\n\n  react_1.useEffect(function () {\n    if (cradleStateRef.current == 'setup') return; // let spineoffset\n    // if (cradlePropsRef.current.orientation == 'vertical') {\n    //     spineoffset = spineCradleElementRef.current.offsetTop - viewportDataRef.current.elementref.current.scrollTop\n    // } else {\n    //     spineoffset = spineCradleElementRef.current.offsetLeft - viewportDataRef.current.elementref.current.scrollLeft\n    // }\n\n    callingReferenceIndexDataRef.current = __assign({}, stableReferenceIndexDataRef.current);\n    controlFlagsRef.current.pauseItemObserver = true; // pauseCradleIntersectionObserverRef.current = true\n\n    controlFlagsRef.current.pauseScrollingEffects = true;\n    saveCradleState('reload');\n  }, [listsize, cellHeight, cellWidth, gap, padding]); // trigger pivot on change in orientation\n\n  react_1.useEffect(function () {\n    if (cradleStateRef.current != 'setup') {\n      callingReferenceIndexDataRef.current = __assign({}, stableReferenceIndexDataRef.current); // let orientation = cradlePropsRef.current.orientation\n      // get previous ration\n\n      var previousCellPixelLength = orientation == 'vertical' ? cradlePropsRef.current.cellWidth : cradlePropsRef.current.cellHeight;\n      var previousSpineOffset = callingReferenceIndexDataRef.current.spineoffset;\n      var previousratio = previousSpineOffset / previousCellPixelLength;\n      var currentCellPixelLength = orientation == 'vertical' ? cradlePropsRef.current.cellHeight : cradlePropsRef.current.cellWidth;\n      var currentSpineOffset = previousratio * currentCellPixelLength; // scrollReferenceIndexDataRef.current.spineoffset = \n\n      callingReferenceIndexDataRef.current.spineoffset = Math.round(currentSpineOffset);\n      controlFlagsRef.current.pauseItemObserver = true; // pauseCradleIntersectionObserverRef.current = true\n\n      controlFlagsRef.current.pauseScrollingEffects = true;\n      saveCradleState('pivot');\n    }\n\n    var cradleContent = cradleContentRef.current;\n    cradleContent.headModel = [];\n    cradleContent.tailModel = [];\n    cradleContent.headView = [];\n    cradleContent.tailView = [];\n  }, [orientation]); // =======================================================================\n  // -------------------------[ OPERATION ]---------------------------------\n  // =======================================================================\n  // -----------------------------------------------------------------------\n  // ------------------------[ session data ]-------------------------------\n  // ------------------ current location -- first tail visible item -------------\n\n  var instanceIdCounterRef = react_1.useRef(0);\n  var instanceIdMapRef = react_1.useRef(new Map());\n  var scrollReferenceIndexDataRef = react_1.useRef({\n    index: Math.min(indexOffset, listsize - 1) || 0,\n    spineoffset: padding\n  }); // access by closures\n  // set by onScroll at the end of scroll sessions\n\n  var stableReferenceIndexDataRef = react_1.useRef(scrollReferenceIndexDataRef.current); // anticipate calling of operation which requires ReferenceIndex data\n\n  var callingReferenceIndexDataRef = react_1.useRef(stableReferenceIndexDataRef.current); // anticipate reposition\n  // -------------------------------[ cradle data ]-------------------------------------\n  // TODO: create a datamodel object for this?\n  // cradle butterfly html components\n\n  var headCradleElementRef = react_1.useRef(null);\n  var tailCradleElementRef = react_1.useRef(null);\n  var spineCradleElementRef = react_1.useRef(null);\n  var cradleElementsRef = react_1.useRef({\n    head: headCradleElementRef,\n    tail: tailCradleElementRef,\n    spine: spineCradleElementRef\n  });\n  react_1.useEffect(function () {\n    if (scrollerID == 0 || !spineCradleElementRef.current) return;\n    var parentscrollerid;\n    var parentindex;\n    var el = spineCradleElementRef.current;\n\n    while (el) {\n      // console.log('dataset',el.dataset, el)\n      if (el.dataset && el.dataset.type == 'portalcontainer') {\n        parentindex = parseInt(el.dataset.index);\n        parentscrollerid = parseInt(el.dataset.scrollerid);\n        break;\n      } else {\n        el = el.parentElement;\n      }\n    }\n\n    if (!el) {\n      console.log('ERROR: parent portalcontainer not found');\n      return;\n    }\n\n    portalRef.current = contentmanager.getPortalListItem(parentscrollerid, parentindex); // console.log('viewport of scrollerID has parentscrollerid and parentindex for portal', \n    //     scrollerID, parentscrollerid, parentindex,portalRef.current)\n    // portalIndexRef.current = el.dataset.index\n  }, [spineCradleElementRef.current]);\n  var cradleContentRef = react_1.useRef({\n    cradleModel: null,\n    headModel: null,\n    tailModel: null,\n    headView: [],\n    tailView: [] // portalData: new Map()\n\n  }); // item elements cache...\n\n  var itemElementsRef = react_1.useRef(new Map()); // items register their element\n  // ------------------------------[ cradle configuration ]---------------------------\n\n  var viewportDimensions = viewportData.viewportDimensions;\n  var viewportheight = viewportDimensions.height,\n      viewportwidth = viewportDimensions.width;\n  var crosscount = react_1.useMemo(function () {\n    var crosscount;\n    var size = orientation == 'horizontal' ? viewportheight : viewportwidth;\n    var crossLength = orientation == 'horizontal' ? cellHeight : cellWidth;\n    var lengthforcalc = size - padding * 2 + gap; // length of viewport\n\n    var tilelengthforcalc = crossLength + gap;\n    tilelengthforcalc = Math.min(tilelengthforcalc, lengthforcalc); // result cannot be less than 1\n\n    crosscount = Math.floor(lengthforcalc / tilelengthforcalc);\n    return crosscount;\n  }, [orientation, cellWidth, cellHeight, gap, padding, viewportheight, viewportwidth]); // const crosscountRef = useRef(crosscount) // for easy reference by observer\n  // crosscountRef.current = crosscount // available for observer closure\n\n  var _c = react_1.useMemo(function () {\n    var viewportLength, cellLength;\n\n    if (orientation == 'vertical') {\n      viewportLength = viewportheight;\n      cellLength = cellHeight;\n    } else {\n      viewportLength = viewportwidth;\n      cellLength = cellWidth;\n    }\n\n    cellLength += gap;\n    var viewportrowcount = Math.ceil(viewportLength / cellLength);\n    var cradleRowcount = viewportrowcount + runwaycount * 2;\n    var itemcount = cradleRowcount * crosscount;\n\n    if (itemcount > listsize) {\n      itemcount = listsize;\n      cradleRowcount = Math.ceil(itemcount / crosscount);\n    }\n\n    return [cradleRowcount, viewportrowcount];\n  }, [orientation, cellWidth, cellHeight, gap, listsize, // padding,\n  viewportheight, viewportwidth, runwaycount, crosscount]),\n      cradleRowcount = _c[0],\n      viewportRowcount = _c[1]; // const cradleRowcountRef = useRef(null)\n  // cradleRowcountRef.current = cradleRowcount\n  // const viewportRowcountRef = useRef(null)\n  // viewportRowcountRef.current = viewportRowcount\n\n\n  var cradleConfigRef = react_1.useRef({\n    crosscount: crosscount,\n    cradleRowcount: cradleRowcount,\n    viewportRowcount: viewportRowcount,\n    itemObserverThreshold: ITEM_OBSERVER_THRESHOLD,\n    listRowcount: Math.ceil(listsize / crosscount)\n  });\n  cradleConfigRef.current = {\n    crosscount: crosscount,\n    cradleRowcount: cradleRowcount,\n    viewportRowcount: viewportRowcount,\n    itemObserverThreshold: ITEM_OBSERVER_THRESHOLD,\n    listRowcount: Math.ceil(listsize / crosscount)\n  }; // ----------------------------------[ cradle default styles]----------------------------------\n  // base styles\n\n  var cradleHeadStyle = react_1.useMemo(function () {\n    var bottom, left, top, right;\n\n    if (orientation == 'vertical') {\n      bottom = 0;\n      left = 0;\n      right = 0;\n      top = 'auto';\n    } else {\n      bottom = 0;\n      left = 'auto';\n      right = 0;\n      top = 0;\n    }\n\n    return __assign(__assign({}, {\n      position: 'absolute',\n      backgroundColor: 'blue',\n      display: 'grid',\n      gridGap: gap + 'px',\n      padding: padding + 'px',\n      justifyContent: 'start',\n      alignContent: 'start',\n      boxSizing: 'border-box',\n      bottom: bottom,\n      left: left,\n      right: right,\n      top: top\n    }), styles === null || styles === void 0 ? void 0 : styles.cradle);\n  }, [gap, padding, styles, orientation]);\n  var cradleTailStyle = react_1.useMemo(function () {\n    var bottom, left, top, right;\n\n    if (orientation == 'vertical') {\n      bottom = 'auto';\n      left = 0;\n      right = 0;\n      top = 0;\n    } else {\n      bottom = 0;\n      left = 0;\n      right = 'auto';\n      top = 0;\n    }\n\n    return __assign(__assign({}, {\n      position: 'absolute',\n      backgroundColor: 'blue',\n      display: 'grid',\n      gridGap: gap + 'px',\n      padding: padding + 'px',\n      justifyContent: 'start',\n      alignContent: 'start',\n      boxSizing: 'border-box',\n      top: top,\n      left: left,\n      right: right,\n      bottom: bottom\n    }), styles === null || styles === void 0 ? void 0 : styles.cradle);\n  }, [gap, padding, styles, orientation]); // redundant\n\n  var cradleSpineStyle = react_1.useMemo(function () {\n    var styleobj = {\n      position: 'relative'\n    };\n    return styleobj;\n  }, [padding, orientation]); // enhanced styles for grid\n\n  var _d = react_1.useMemo(function () {\n    // merge base style and revisions (by observer)\n    var headCradleStyles = __assign({}, cradleHeadStyle);\n\n    var tailCradleStyles = __assign({}, cradleTailStyle);\n\n    var _a = cradlefunctions_1.setCradleGridStyles({\n      orientation: orientation,\n      headCradleStyles: headCradleStyles,\n      tailCradleStyles: tailCradleStyles,\n      cellHeight: cellHeight,\n      cellWidth: cellWidth,\n      gap: gap,\n      padding: padding,\n      crosscount: crosscount,\n      viewportheight: viewportheight,\n      viewportwidth: viewportwidth\n    }),\n        headstyles = _a[0],\n        tailstyles = _a[1];\n\n    var top, left, width, height;\n\n    if (orientation == 'vertical') {\n      top = padding + 'px';\n      left = 'auto';\n      width = '100%';\n      height = 'auto';\n    } else {\n      top = 'auto';\n      left = padding + 'px';\n      width = 0;\n      height = '100%';\n    }\n\n    var spinestyle = {\n      position: 'relative',\n      top: top,\n      left: left,\n      width: width,\n      height: height\n    };\n    return [headstyles, tailstyles, spinestyle];\n  }, [orientation, cellHeight, cellWidth, gap, padding, viewportheight, viewportwidth, crosscount]),\n      headstyle = _d[0],\n      tailstyle = _d[1],\n      spinestyle = _d[2];\n\n  cradleHeadStyle = headstyle;\n  cradleTailStyle = tailstyle;\n  cradleSpineStyle = spinestyle; // =================================================================================\n  // -------------------------[ IntersectionObserver support]-------------------------\n  // =================================================================================\n\n  /*\n      There are two interection observers, one for the cradle, and another for itemShells;\n          both against the viewport.\n      There is also a resize observer for the cradle wings, to respond to size changes of\n          variable cells.\n  */\n  // --------------------------[ cradle observers ]-----------------------------------\n  // set up cradle resizeobserver\n\n  react_1.useEffect(function () {\n    // ResizeObserver\n    cradleResizeObserverRef.current = new LocalResizeObserver(cradleresizeobservercallback);\n    var cradleElements = cradleElementsRef.current;\n    cradleResizeObserverRef.current.observe(cradleElements.head.current);\n    cradleResizeObserverRef.current.observe(cradleElements.tail.current);\n    return function () {\n      cradleResizeObserverRef.current.disconnect();\n    };\n  }, []);\n  var cradleresizeobservercallback = react_1.useCallback(function (entries) {\n    if (controlFlagsRef.current.pauseCradleResizeObserver) return;\n  }, []); // this sets up an IntersectionObserver of the cradle against the viewport. When the\n  // cradle goes out of the observer scope, the \"repositioning\" cradle state is triggerd.\n\n  react_1.useEffect(function () {\n    var viewportData = viewportDataRef.current; // IntersectionObserver\n\n    cradleIntersectionObserverRef.current = new IntersectionObserver(cradleintersectionobservercallback, {\n      root: viewportData.elementref.current,\n      threshold: 0\n    });\n    var cradleElements = cradleElementsRef.current;\n    cradleIntersectionObserverRef.current.observe(cradleElements.head.current);\n    cradleIntersectionObserverRef.current.observe(cradleElements.tail.current);\n    return function () {\n      cradleIntersectionObserverRef.current.disconnect();\n    };\n  }, []);\n  var cradleintersectionobservercallback = react_1.useCallback(function (entries) {\n    var controlFlags = controlFlagsRef.current;\n    if (controlFlags.pauseCradleIntersectionObserver) return;\n\n    for (var i = 0; i < entries.length; i++) {\n      var entry = entries[i];\n\n      if (entry.target.dataset.name == 'head') {\n        controlFlags.isHeadCradleInView = entry.isIntersecting;\n      } else {\n        controlFlags.isTailCradleInView = entry.isIntersecting;\n      }\n    }\n\n    controlFlags.isCradleInView = controlFlags.isHeadCradleInView || controlFlags.isTailCradleInView;\n\n    if (!controlFlags.isCradleInView) {\n      // console.log('inside cradleintersectionobservercallback portalRef',portalRef)\n      var cradleState_1 = cradleStateRef.current;\n\n      if (!viewportDataRef.current.isResizing && !(cradleState_1 == 'resize') && !(cradleState_1 == 'repositioning') && !(cradleState_1 == 'reposition') && !(cradleState_1 == 'pivot') && !(portalRef.current && portalRef.current.reparenting)) {\n        var rect = viewportDataRef.current.elementref.current.getBoundingClientRect();\n        var top_1 = rect.top,\n            right = rect.right,\n            bottom = rect.bottom,\n            left = rect.left;\n        var width = right - left,\n            height = bottom - top_1;\n        viewportDataRef.current.viewportDimensions = {\n          top: top_1,\n          right: right,\n          bottom: bottom,\n          left: left,\n          width: width,\n          height: height\n        }; // update for scrolltracker\n\n        controlFlags.pauseItemObserver = true; // pauseCradleIntersectionObserverRef.current = true\n        // console.log('REPOSITIONING scrollerID', scrollerID, portalRef.current)\n\n        var cradleContent_1 = cradleContentRef.current;\n        cradleContent_1.headModel = [];\n        cradleContent_1.tailModel = [];\n        cradleContent_1.headView = [];\n        cradleContent_1.tailView = [];\n        saveCradleState('repositioning');\n      }\n    }\n  }, []); // --------------------------[ item shell observer ]-----------------------------\n\n  /*\n      The cradle content is driven by notifications from the IntersectionObserver.\n      - as the user scrolls the cradle, which has a runwaycount at both the leading\n          and trailing edges, itemShells scroll into or out of the scope of the observer\n          (defined by the width/height of the viewport + the lengths of the runways). The observer\n          notifies the app (through itemobservercallback() below) at the crossings of the itemshells\n          of the defined observer cradle boundaries.\n           The no-longer-intersecting notifications trigger dropping of that number of affected items from\n          the cradle contentlist. The dropping of items from the trailing end of the content list\n          triggers the addition of an equal number of items at the leading edge of the cradle content.\n           Technically, the opposite end position spec is set (top or left depending on orientation),\n          and the matching end position spec is set to 'auto' when items are added. This causes items to be\n          \"squeezed\" into the leading or trailing ends of the ui content (out of view) as appropriate.\n           There are exceptions for setup and edge cases.\n  */\n  // change orientation\n\n  react_1.useEffect(function () {\n    if (itemObserverRef.current) itemObserverRef.current.disconnect();\n    itemObserverRef.current = new IntersectionObserver(itemobservercallback, {\n      root: viewportDataRef.current.elementref.current,\n      threshold: cradleConfigRef.current.itemObserverThreshold\n    });\n    return function () {\n      itemObserverRef.current.disconnect();\n    };\n  }, [orientation]); // the async callback from IntersectionObserver.\n\n  var itemobservercallback = react_1.useCallback(function (entries) {\n    var movedentries = [];\n\n    for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\n      var entry = entries_1[_i];\n\n      if (entry.target.dataset.initialized) {\n        movedentries.push(entry);\n      } else {\n        entry.target.dataset.initialized = true;\n      }\n    }\n\n    if (controlFlagsRef.current.pauseItemObserver) {\n      return;\n    } // isMounted = useIsMounted()\n\n\n    isMounted() && updateCradleContent(movedentries);\n  }, []);\n  var previousScrollForwardRef = react_1.useRef(undefined);\n\n  var updateCradleContent = function updateCradleContent(entries, source) {\n    // console.log('updating cradle content: entries.length, source', entries.length, source)\n    if (source === void 0) {\n      source = 'notifications';\n    }\n\n    var viewportData = viewportDataRef.current;\n    var viewportElement = viewportData.elementref.current;\n    var cradleProps = cradlePropsRef.current;\n    var scrollOffset;\n\n    if (cradleProps.orientation == 'vertical') {\n      scrollOffset = viewportElement.scrollTop;\n    } else {\n      scrollOffset = viewportElement.scrollLeft;\n    }\n\n    if (scrollOffset < 0) {\n      // for Safari elastic bounce at top of scroll\n      return;\n    } // console.log('updateCradleContent scrollOffset', scrollOffset)\n    // ----------------------------[ 1. initialize ]----------------------------\n\n\n    var scrollPositions = scrollPositionsRef.current;\n    var scrollforward;\n\n    if (scrollPositions.current == scrollPositions.previous) {\n      // edge case \n      scrollforward = previousScrollForwardRef.current;\n    } else {\n      scrollforward = scrollPositions.current > scrollPositions.previous;\n      previousScrollForwardRef.current = scrollforward;\n    }\n\n    if (scrollforward === undefined) {\n      return; // init call\n    }\n\n    var cradleElements = cradleElementsRef.current;\n    var cradleContent = cradleContentRef.current;\n    var cradleConfig = cradleConfigRef.current;\n    var itemElements = itemElementsRef.current;\n    var modelcontentlist = cradleContent.cradleModel;\n    var cradleReferenceIndex = modelcontentlist[0].props.index; // let cradleConfig = cradleConfigRef.current\n    // --------------------[ 2. filter intersections list ]-----------------------\n    // filter out inapplicable intersection entries\n    // we're only interested in intersections proximal to the spine\n\n    var intersections = cradlefunctions_1.isolateRelevantIntersections({\n      scrollforward: scrollforward,\n      intersections: entries,\n      cradleContent: cradleContent,\n      itemObserverThreshold: cradleConfig.itemObserverThreshold\n    }); // console.log('intersections', intersections)\n    // --------------------------------[ 3. Calculate shifts ]-------------------------------\n\n    var _a = cradlefunctions_1.calcContentShifts({\n      cradleProps: cradleProps,\n      cradleConfig: cradleConfig,\n      cradleElements: cradleElements,\n      cradleContent: cradleContent,\n      viewportElement: viewportElement,\n      itemElements: itemElements,\n      intersections: intersections,\n      scrollforward: scrollforward // source,\n\n    }),\n        cradleindex = _a[0],\n        cradleitemshift = _a[1],\n        spineReferenceIndex = _a[2],\n        referenceitemshift = _a[3],\n        spineOffset = _a[4],\n        contentCount = _a[5]; // console.log('in updateCradleContent: cradleindex, cradleitemshift, spineReferenceIndex, referenceitemshift, spineOffset, contentCount',\n    //     cradleindex, cradleitemshift, spineReferenceIndex, referenceitemshift, spineOffset, contentCount)\n\n\n    if (referenceitemshift == 0 && cradleitemshift == 0) return; // ------------------[ 4. calculate head and tail consolidated cradle content changes ]-----------------\n\n    var _b = cradlefunctions_1.calcHeadAndTailChanges({\n      cradleProps: cradleProps,\n      cradleConfig: cradleConfig,\n      cradleContent: cradleContent,\n      cradleshiftcount: cradleitemshift,\n      scrollforward: scrollforward,\n      cradleReferenceIndex: cradleReferenceIndex\n    }),\n        headchangecount = _b[0],\n        tailchangecount = _b[1]; // console.log('headchangecount,tailchangecount',headchangecount,tailchangecount)\n    // ----------------------------------[ 5. reconfigure cradle content ]--------------------------\n    // collect modified content\n\n\n    var localContentList;\n\n    if (headchangecount || tailchangecount) {\n      localContentList = cradlefunctions_1.getUIContentList({\n        cradleProps: cradleProps,\n        cradleConfig: cradleConfig,\n        contentCount: contentCount,\n        localContentList: modelcontentlist,\n        headchangecount: headchangecount,\n        tailchangecount: tailchangecount,\n        cradleReferenceIndex: cradleReferenceIndex,\n        observer: itemObserverRef.current,\n        callbacks: callbacksRef.current,\n        instanceIdCounterRef: instanceIdCounterRef\n      });\n    } else {\n      localContentList = modelcontentlist;\n    } // console.log('localContentList.length', localContentList.length)\n    // ----------------------------------[ 7. allocate cradle content ]--------------------------\n\n\n    var _c = cradlefunctions_1.allocateContentList({\n      contentlist: localContentList,\n      spineReferenceIndex: spineReferenceIndex\n    }),\n        headcontent = _c[0],\n        tailcontent = _c[1]; // console.log('headcontent.length, tailcontent.length',headcontent.length, tailcontent.length)\n\n\n    cradleContent.cradleModel = localContentList;\n    cradleContent.headView = cradleContent.headModel = headcontent;\n    cradleContent.tailView = cradleContent.tailModel = tailcontent; // -------------------------------[ 8. set css changes ]-------------------------\n\n    if (spineOffset !== undefined) {\n      var cradleElements_1 = cradleElementsRef.current;\n\n      if (cradleProps.orientation == 'vertical') {\n        scrollPositionDataRef.current = {\n          property: 'scrollTop',\n          value: viewportElement.scrollTop\n        };\n        cradleElements_1.spine.current.style.top = viewportElement.scrollTop + spineOffset + 'px';\n        cradleElements_1.spine.current.style.left = 'auto';\n        cradleElements_1.head.current.style.paddingBottom = headcontent.length ? cradleProps.gap + 'px' : 0;\n      } else {\n        scrollPositionDataRef.current = {\n          property: 'scrollLeft',\n          value: viewportElement.scrollLeft\n        };\n        cradleElements_1.spine.current.style.top = 'auto';\n        cradleElements_1.spine.current.style.left = viewportElement.scrollLeft + spineOffset + 'px';\n        cradleElements_1.head.current.style.paddingRight = headcontent.length ? cradleProps.gap + 'px' : 0;\n      }\n    }\n\n    scrollReferenceIndexDataRef.current = {\n      index: spineReferenceIndex,\n      spineoffset: spineOffset\n    };\n    saveCradleState('updatecontent');\n  }; // End of IntersectionObserver support\n  // ========================================================================================\n  // -------------------------------[ Assembly of content]-----------------------------------\n  // ========================================================================================\n  // reset cradle, including allocation between head and tail parts of the cradle\n\n\n  var setCradleContent = function setCradleContent(cradleState, referenceIndexData) {\n    // console.log('setCradleContent start: cradleState, referenceIndexData',cradleState, referenceIndexData)\n    var cradleProps = cradlePropsRef.current;\n    var visibletargetindexoffset = referenceIndexData.index,\n        visibletargetscrolloffset = referenceIndexData.spineoffset;\n    var cellHeight = cradleProps.cellHeight,\n        cellWidth = cradleProps.cellWidth,\n        orientation = cradleProps.orientation,\n        runwaycount = cradleProps.runwaycount,\n        gap = cradleProps.gap,\n        padding = cradleProps.padding,\n        listsize = cradleProps.listsize;\n    var cradleConfig = cradleConfigRef.current;\n    var cradleRowcount = cradleConfig.cradleRowcount,\n        crosscount = cradleConfig.crosscount,\n        viewportRowcount = cradleConfig.viewportRowcount;\n\n    if (cradleState == 'reposition') {\n      visibletargetscrolloffset = visibletargetindexoffset == 0 ? padding : gap;\n    }\n\n    var localContentList = [];\n    var cradleContent = cradleContentRef.current; // cradleContent.portalData.clear()\n\n    var _a = cradlefunctions_1.getContentListRequirements({\n      cradleProps: cradleProps,\n      cradleConfig: cradleConfig,\n      visibletargetindexoffset: visibletargetindexoffset,\n      targetViewportOffset: visibletargetscrolloffset,\n      viewportElement: viewportDataRef.current.elementref.current\n    }),\n        cradleReferenceIndex = _a.cradleReferenceIndex,\n        referenceoffset = _a.referenceoffset,\n        contentCount = _a.contentCount,\n        scrollblockoffset = _a.scrollblockoffset,\n        spineOffset = _a.spineOffset,\n        spineadjustment = _a.spineadjustment; // console.log('setCradleContent getContentListRequirements: cradleReferenceIndex, referenceoffset, contentCount, scrollblockoffset, spineOffset, spineadjustment',\n    //     cradleReferenceIndex, referenceoffset, contentCount, scrollblockoffset, spineOffset, spineadjustment)\n    // returns content constrained by cradleRowcount\n\n\n    var childlist = cradlefunctions_1.getUIContentList({\n      cradleProps: cradleProps,\n      cradleConfig: cradleConfig,\n      contentCount: contentCount,\n      cradleReferenceIndex: cradleReferenceIndex,\n      headchangecount: 0,\n      tailchangecount: contentCount,\n      localContentList: localContentList,\n      callbacks: callbacksRef.current,\n      observer: itemObserverRef.current,\n      instanceIdCounterRef: instanceIdCounterRef\n    }); // console.log('childlist.length, contentCount, rows from setContent', childlist.length, contentCount, Math.ceil(contentCount/crosscount))\n\n    var _b = cradlefunctions_1.allocateContentList({\n      contentlist: childlist,\n      spineReferenceIndex: referenceoffset\n    }),\n        headcontentlist = _b[0],\n        tailcontentlist = _b[1]; // console.log('headcontentlist.length, tailcontentlist.length',headcontentlist.length, tailcontentlist.length)\n\n\n    if (headcontentlist.length == 0) {\n      spineOffset = padding;\n    }\n\n    cradleContent.cradleModel = childlist;\n    cradleContent.headModel = headcontentlist;\n    cradleContent.tailModel = tailcontentlist;\n    scrollReferenceIndexDataRef.current = stableReferenceIndexDataRef.current = {\n      index: referenceoffset,\n      spineoffset: spineOffset\n    }; // console.log('setting referenceindexdata in setCradleContent',stableReferenceIndexDataRef.current)\n\n    if (referenceIndexCallbackRef.current) {\n      var cstate = cradleState;\n      if (cstate == 'setreload') cstate = 'reload';\n      referenceIndexCallbackRef.current(stableReferenceIndexDataRef.current.index, 'setCradleContent', cstate);\n    } // console.log('scrollblockoffset, spineOffset, spineadjustment, headcontentlist.length',\n    //     scrollblockoffset, spineOffset, spineadjustment, headcontentlist.length)\n\n\n    var cradleElements = cradleElementsRef.current;\n\n    if (orientation == 'vertical') {\n      scrollPositionDataRef.current = {\n        property: 'scrollTop',\n        value: scrollblockoffset - spineOffset\n      };\n      cradleElements.spine.current.style.top = scrollblockoffset + spineadjustment + 'px';\n      cradleElements.spine.current.style.left = 'auto';\n      cradleElements.head.current.style.paddingBottom = headcontentlist.length ? cradleProps.gap + 'px' : 0; // console.log('CSS adjustments: scrollTop, scrollblockoffset, spineOffset, top, spineadjustment, headcontentlist.length','\\n',\n      //     scrollblockoffset  - spineOffset, scrollblockoffset, spineOffset, \n      //     scrollblockoffset + spineadjustment, spineadjustment, headcontentlist.length )\n    } else {\n      // orientation = 'horizontal'\n      scrollPositionDataRef.current = {\n        property: 'scrollLeft',\n        value: scrollblockoffset - spineOffset\n      };\n      cradleElements.spine.current.style.top = 'auto';\n      cradleElements.spine.current.style.left = scrollblockoffset + spineadjustment + 'px';\n      cradleElements.head.current.style.paddingRight = headcontentlist.length ? cradleProps.gap + 'px' : 0;\n    }\n  }; // =====================================================================================\n  // ----------------------------------[ state management ]-------------------------------\n  // =====================================================================================\n\n\n  var scrollTimeridRef = react_1.useRef(null);\n  var scrollPositionsRef = react_1.useRef({\n    current: 0,\n    previous: 0\n  }); // callback for scrolling\n\n  var onScroll = react_1.useCallback(function (e) {\n    var _a;\n\n    if (controlFlagsRef.current.pauseScrollingEffects) {\n      // console.log('returning from onScroll with pauseScrollingEffects true', \n      //     viewportDataRef.current.elementref.current.scrollTop)\n      return;\n    }\n\n    var viewportElement = viewportDataRef.current.elementref.current;\n    var scrollPositions = scrollPositionsRef.current;\n    var scrollPositioncurrent = cradlePropsRef.current.orientation == 'vertical' ? viewportElement.scrollTop : viewportElement.scrollLeft;\n\n    if (scrollPositioncurrent < 0) {\n      // for Safari\n      return;\n    }\n\n    scrollPositions.previous = scrollPositions.current;\n    scrollPositions.current = //scrollPositioncurrent\n    cradlePropsRef.current.orientation == 'vertical' ? viewportElement.scrollTop : viewportElement.scrollLeft;\n    clearTimeout(scrollTimeridRef.current);\n    var cradleState = cradleStateRef.current;\n    var cradleContent = cradleContentRef.current;\n\n    if (!viewportDataRef.current.isResizing) {\n      if (cradleState == 'ready' || cradleState == 'repositioning') {\n        if (cradleState == 'ready') {\n          var itemindex = (_a = cradleContent.tailModel[0]) === null || _a === void 0 ? void 0 : _a.props.index;\n\n          if (itemindex === undefined) {\n            console.log('ERROR: scroll encountered undefined tailcontent lead');\n          }\n\n          var spineoffset = void 0;\n          var cradleElements = cradleElementsRef.current;\n\n          if (cradlePropsRef.current.orientation == 'vertical') {\n            spineoffset = cradleElements.spine.current.offsetTop - viewportDataRef.current.elementref.current.scrollTop;\n          } else {\n            spineoffset = cradleElements.spine.current.offsetLeft - viewportDataRef.current.elementref.current.scrollLeft;\n          }\n\n          scrollReferenceIndexDataRef.current = {\n            index: itemindex,\n            spineoffset: spineoffset\n          };\n        } else {\n          scrollReferenceIndexDataRef.current = cradlefunctions_1.getScrollReferenceIndexData({\n            viewportData: viewportDataRef.current,\n            cradleProps: cradlePropsRef.current,\n            cradleConfig: cradleConfigRef.current\n          });\n          saveCradleState('updatereposition');\n        }\n\n        referenceIndexCallbackRef.current && referenceIndexCallbackRef.current(scrollReferenceIndexDataRef.current.index, 'scrolling', cradleState);\n      }\n    }\n\n    scrollTimeridRef.current = setTimeout(function () {\n      // isMounted = useIsMounted()\n      if (!isMounted()) return; // console.log('scrollerName, portalData after SCROLL:',scrollerName, cradleContentRef.current.portalData)\n\n      var spineoffset;\n      var cradleElements = cradleElementsRef.current;\n\n      if (cradlePropsRef.current.orientation == 'vertical') {\n        spineoffset = cradleElements.spine.current.offsetTop - viewportDataRef.current.elementref.current.scrollTop;\n      } else {\n        spineoffset = cradleElements.spine.current.offsetLeft - viewportDataRef.current.elementref.current.scrollLeft;\n      }\n\n      scrollReferenceIndexDataRef.current.spineoffset = spineoffset;\n      var cradleState = cradleStateRef.current;\n\n      if (!viewportDataRef.current.isResizing) {\n        var localrefdata = __assign({}, scrollReferenceIndexDataRef.current);\n\n        stableReferenceIndexDataRef.current = localrefdata;\n      }\n\n      switch (cradleState) {\n        case 'repositioning':\n          {\n            callingReferenceIndexDataRef.current = __assign({}, stableReferenceIndexDataRef.current);\n            saveCradleState('reposition');\n            break;\n          }\n\n        default:\n          {\n            // console.log('------- [ calling endofscroll ]-----------')\n            updateCradleContent([], 'endofscroll'); // for Safari to compensate for overscroll\n          }\n      }\n    }, SCROLL_TIMEOUT_FOR_ONAFTERSCROLL);\n  }, []); // data for state processing\n\n  var callingCradleState = react_1.useRef(cradleStateRef.current);\n  var headlayoutDataRef = react_1.useRef(null);\n  var scrollPositionDataRef = react_1.useRef(null); // this is the core state engine\n  // useLayout for suppressing flashes\n\n  react_1.useLayoutEffect(function () {\n    var viewportData = viewportDataRef.current;\n    var cradleContent = cradleContentRef.current;\n\n    switch (cradleState) {\n      case 'reload':\n        // cradleContent.portalData.clear()\n        saveCradleState('setreload');\n        break;\n\n      case 'updatereposition':\n        saveCradleState('repositioning');\n\n      case 'repositioning':\n        break;\n\n      case 'setscrolloffset':\n        {\n          viewportData.elementref.current[scrollPositionDataRef.current.property] = scrollPositionDataRef.current.value;\n          saveCradleState('normalize');\n          break;\n        }\n\n      case 'updatecontent':\n        {\n          // scroll\n          saveCradleState('ready');\n          break;\n        }\n\n      case 'content':\n        {\n          var cradleContent_2 = cradleContentRef.current;\n          cradleContent_2.headView = cradleContent_2.headModel;\n          cradleContent_2.tailView = cradleContent_2.tailModel;\n          saveCradleState('setscrolloffset'); //'normalize')\n\n          break;\n        }\n    }\n  }, [cradleState]); // standard processing stages\n\n  react_1.useEffect(function () {\n    var viewportData = viewportDataRef.current;\n\n    switch (cradleState) {\n      case 'setup':\n      case 'resize':\n      case 'pivot':\n      case 'setreload':\n      case 'reposition':\n        callingCradleState.current = cradleState;\n        saveCradleState('settle');\n        break;\n\n      case 'settle':\n        {\n          // console.log('settle (setCradleContent): state, refIndex',callingCradleState.current, callingReferenceIndexDataRef.current)\n          cradleContent.headModel = [];\n          cradleContent.tailModel = [];\n          cradleContent.headView = [];\n          cradleContent.tailView = [];\n          contentManager.resetScrollerPortalRepository(scrollerID);\n          setCradleContent(callingCradleState.current, callingReferenceIndexDataRef.current);\n          saveCradleState('content'); //'setscrolloffset')\n\n          break;\n        }\n\n      case 'normalize':\n        {\n          setTimeout(function () {\n            // isMounted = useIsMounted()\n            if (!isMounted()) return; // console.log('inside normalize: viewportData.isResizing', viewportData.isResizing)\n\n            if (!viewportData.isResizing) {\n              // redundant scroll position to avoid accidental positioning at tail end of reposition\n              if (viewportData.elementref.current) {\n                // already unmounted if fails\n                var controlFlags = controlFlagsRef.current; // console.log('clearing control Flags', controlFlags)\n\n                controlFlags.pauseItemObserver && (controlFlags.pauseItemObserver = false);\n                controlFlags.pauseScrollingEffects && (controlFlags.pauseScrollingEffects = false);\n                controlFlags.pauseCradleIntersectionObserver && (controlFlags.pauseCradleIntersectionObserver = false);\n                controlFlags.pauseCradleResizeObserver && (controlFlags.pauseCradleResizeObserver = false);\n              }\n\n              if (controlFlagsRef.current.isCradleInView) {\n                saveCradleState('ready');\n              } else {\n                saveCradleState('repositioning');\n              }\n            } else {\n              saveCradleState('resizing');\n            } // console.log('portalData after set, scrollerName',cradleContentRef.current.portalData, scrollerName)\n\n          }, 100);\n          break;\n        }\n\n      case 'ready':\n        break;\n    }\n  }, [cradleState]); // =============================================================================\n  // ------------------------------[ callbacks ]----------------------------------\n  // =============================================================================\n  // on host demand\n\n  var getVisibleList = react_1.useCallback(function () {\n    // let cradleElements = cradleElementsRef.current\n    var cradleContent = cradleContentRef.current;\n    return cradlefunctions_1.calcVisibleItems({\n      itemElementMap: itemElementsRef.current,\n      viewportElement: viewportDataRef.current.elementref.current,\n      cradleElements: cradleElementsRef.current,\n      // tailElement:cradlePropsRef.current.orientation,\n      // spineElement:cradleElements.spine.current,\n      cradleProps: cradlePropsRef.current,\n      // orientation:cradlePropsRef.current.orientation,\n      cradleContent: cradleContentRef.current // headlist:cradleContent.headView,\n\n    });\n  }, []);\n  var getContentList = react_1.useCallback(function () {\n    var contentlist = Array.from(itemElementsRef.current);\n    contentlist.sort(function (a, b) {\n      return a[0] < b[0] ? -1 : 1;\n    });\n    return contentlist;\n  }, []);\n  var reload = react_1.useCallback(function () {\n    controlFlagsRef.current.pauseItemObserver = true;\n    controlFlagsRef.current.pauseScrollingEffects = true;\n    var spineoffset;\n    var cradleElements = cradleElementsRef.current;\n\n    if (cradlePropsRef.current.orientation == 'vertical') {\n      spineoffset = cradleElements.spine.current.offsetTop - viewportDataRef.current.elementref.current.scrollTop;\n    } else {\n      spineoffset = cradleElements.spine.current.offsetLeft - viewportDataRef.current.elementref.current.scrollLeft;\n    }\n\n    callingReferenceIndexDataRef.current = __assign({}, stableReferenceIndexDataRef.current);\n    saveCradleState('reload');\n  }, []);\n  var portalRef = react_1.useRef(null); // content item registration callback; called from item\n\n  var getItemElementData = react_1.useCallback(function (itemElementData, reportType) {\n    var index = itemElementData[0],\n        shellref = itemElementData[1],\n        portalDataRef = itemElementData[2]; // console.log('getItemElementData: index, shellref, portalDataRef', index, shellref, portalDataRef)\n    // portalRef.current = portalDataRef\n\n    if (reportType == 'register') {\n      itemElementsRef.current.set(index, shellref); // cradleContentRef.current.portalData.set(index,portalDataRef)\n    } else if (reportType == 'unregister') {\n      itemElementsRef.current[\"delete\"](index);\n    }\n  }, []);\n  var scrollToItem = react_1.useCallback(function (index) {\n    controlFlagsRef.current.pauseItemObserver = true;\n    controlFlagsRef.current.pauseScrollingEffects = true;\n    callingReferenceIndexDataRef.current = {\n      index: index,\n      spineoffset: 0\n    };\n    saveCradleState('reposition');\n  }, []);\n  var callbacksRef = react_1.useRef({\n    getElementData: getItemElementData\n  }); // =============================================================================\n  // ------------------------------[ RENDER... ]----------------------------------\n  // =============================================================================\n\n  var scrollTrackerArgs = react_1.useMemo(function () {\n    return {\n      top: viewportDimensions.top + 3,\n      left: viewportDimensions.left + 3,\n      indexOffset: scrollReferenceIndexDataRef.current.index,\n      listsize: cradlePropsRef.current.listsize,\n      styles: cradlePropsRef.current.styles\n    };\n  }, [viewportDimensions, scrollReferenceIndexDataRef.current, cradlePropsRef]);\n  var cradleContent = cradleContentRef.current;\n  return react_1[\"default\"].createElement(react_1[\"default\"].Fragment, null, cradleStateRef.current == 'updatereposition' || cradleStateRef.current == 'repositioning' ? react_1[\"default\"].createElement(scrolltracker_1[\"default\"], {\n    top: scrollTrackerArgs.top,\n    left: scrollTrackerArgs.left,\n    offset: scrollTrackerArgs.indexOffset,\n    listsize: scrollTrackerArgs.listsize,\n    styles: scrollTrackerArgs.styles\n  }) : null, react_1[\"default\"].createElement(\"div\", {\n    style: cradleSpineStyle,\n    ref: spineCradleElementRef,\n    \"data-name\": 'spine'\n  }, true ? react_1[\"default\"].createElement(\"div\", {\n    style: {\n      zIndex: 1,\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      boxShadow: '0 0 5px 3px red'\n    }\n  }) : undefined, react_1[\"default\"].createElement(\"div\", {\n    \"data-name\": 'head',\n    ref: headCradleElementRef,\n    style: cradleHeadStyle\n  }, cradleStateRef.current != 'setup' ? cradleContent.headView : null), react_1[\"default\"].createElement(\"div\", {\n    \"data-name\": 'tail',\n    ref: tailCradleElementRef,\n    style: cradleTailStyle\n  }, cradleStateRef.current != 'setup' ? cradleContent.tailView : null)));\n}; // Cradle\n\n\nexports[\"default\"] = Cradle;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/cradle.tsx\n");

/***/ }),

/***/ "./src/cradlefunctions.tsx":
/*!*********************************!*\
  !*** ./src/cradlefunctions.tsx ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" // cradlefunctions.tsx\n// copyright (c) 2020 Henrik Bechmann, Toronto, Licence: MIT\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {\n    to[j] = from[i];\n  }\n\n  return to;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setCradleGridStyles = exports.allocateContentList = exports.getUIContentList = exports.calcHeadAndTailChanges = exports.calcContentShifts = exports.isolateRelevantIntersections = exports.getContentListRequirements = exports.getScrollReferenceIndexData = exports.calcVisibleItems = void 0;\n/******************************************************************************************\n ------------------------------------[ SUPPORTING FUNCTIONS ]------------------------------\n*******************************************************************************************/\n\nvar react_1 = __importDefault(__webpack_require__(/*! react */ \"react\"));\n\nvar itemshell_1 = __importDefault(__webpack_require__(/*! ./itemshell */ \"./src/itemshell.tsx\"));\n\nvar detect_browser_1 = __webpack_require__(/*! detect-browser */ \"./node_modules/detect-browser/es/index.js\");\n\nvar browser = detect_browser_1.detect();\n\nvar calcVisibleItems = function calcVisibleItems(_a) {\n  var itemElementMap = _a.itemElementMap,\n      viewportElement = _a.viewportElement,\n      cradleElements = _a.cradleElements,\n      cradleProps = _a.cradleProps,\n      cradleContent = _a.cradleContent;\n  var headElement = cradleElements.head.current;\n  var spineElement = cradleElements.spine.current;\n  var orientation = cradleProps.orientation;\n  var headlist = cradleContent.headView;\n  var itemlistindexes = Array.from(itemElementMap.keys());\n  itemlistindexes.sort(function (a, b) {\n    return a < b ? -1 : 1;\n  });\n  var headlistindexes = [];\n\n  for (var _i = 0, headlist_1 = headlist; _i < headlist_1.length; _i++) {\n    var item = headlist_1[_i];\n    headlistindexes.push(parseInt(item.props.index));\n  }\n\n  var list = [];\n  var cradleTop = headElement.offsetTop + spineElement.offsetTop,\n      cradleLeft = headElement.offsetLeft + spineElement.offsetLeft;\n  var scrollblockTopOffset = -viewportElement.scrollTop,\n      scrollblockLeftOffset = -viewportElement.scrollLeft,\n      viewportHeight = viewportElement.offsetHeight,\n      viewportWidth = viewportElement.offsetWidth,\n      viewportTopOffset = -scrollblockTopOffset,\n      viewportBottomOffset = -scrollblockTopOffset + viewportHeight;\n\n  for (var _b = 0, itemlistindexes_1 = itemlistindexes; _b < itemlistindexes_1.length; _b++) {\n    var index = itemlistindexes_1[_b];\n    var element = itemElementMap.get(index).current;\n    var inheadlist = headlistindexes.includes(index);\n    var top_1 = inheadlist ? element.offsetTop : (orientation == 'vertical' ? headElement.offsetHeight : 0) + element.offsetTop,\n        left = inheadlist ? element.offsetLeft : (orientation == 'horizontal' ? headElement.offsetWidth : 0) + element.offsetLeft,\n        width = element.offsetWidth,\n        height = element.offsetHeight,\n        right = left + width,\n        bottom = top_1 + height;\n    var itemTopOffset = scrollblockTopOffset + cradleTop + top_1,\n        // offset from top of viewport\n    itemBottomOffset = scrollblockTopOffset + cradleTop + bottom,\n        // offset from top of viewport\n    itemLeftOffset = scrollblockLeftOffset + cradleLeft + left,\n        itemRightOffset = scrollblockLeftOffset + cradleLeft + right;\n    var isVisible = false; // default\n\n    var topPortion = void 0,\n        bottomPortion = void 0,\n        leftPortion = void 0,\n        rightPortion = void 0;\n\n    if (itemTopOffset < 0 && itemBottomOffset > 0) {\n      orientation == 'vertical' && (isVisible = true);\n      bottomPortion = itemBottomOffset;\n      topPortion = bottomPortion - height;\n    } else if (itemTopOffset >= 0 && itemBottomOffset < viewportHeight) {\n      orientation == 'vertical' && (isVisible = true);\n      topPortion = height;\n      bottomPortion = 0;\n    } else if (itemTopOffset > 0 && itemTopOffset - viewportHeight < 0) {\n      orientation == 'vertical' && (isVisible = true);\n      topPortion = viewportHeight - itemTopOffset;\n      bottomPortion = topPortion - height;\n    } else {\n      if (orientation == 'vertical') continue;\n    }\n\n    if (itemLeftOffset < 0 && itemRightOffset > 0) {\n      orientation == 'horizontal' && (isVisible = true);\n      rightPortion = itemRightOffset;\n      leftPortion = rightPortion - width;\n    } else if (itemLeftOffset >= 0 && itemRightOffset < viewportWidth) {\n      orientation == 'horizontal' && (isVisible = true);\n      leftPortion = width;\n      rightPortion = 0;\n    } else if (itemLeftOffset > 0 && itemLeftOffset - viewportWidth < 0) {\n      orientation == 'horizontal' && (isVisible = true);\n      leftPortion = viewportWidth - itemLeftOffset;\n      rightPortion = leftPortion - width;\n    } else {\n      if (orientation == 'horizontal') continue;\n    }\n\n    var verticalRatio = topPortion > 0 ? topPortion / height : bottomPortion / height,\n        horizontalRatio = leftPortion > 0 ? leftPortion / width : rightPortion / height;\n    var itemData = {\n      index: index,\n      isVisible: isVisible,\n      top: top_1,\n      right: right,\n      bottom: bottom,\n      left: left,\n      width: width,\n      height: height,\n      itemTopOffset: itemTopOffset,\n      itemBottomOffset: itemBottomOffset,\n      topPortion: topPortion,\n      bottomPortion: bottomPortion,\n      itemLeftOffset: itemLeftOffset,\n      itemRightOffset: itemRightOffset,\n      leftPortion: leftPortion,\n      rightPortion: rightPortion,\n      verticalRatio: verticalRatio,\n      horizontalRatio: horizontalRatio\n    };\n    list.push(itemData);\n  }\n\n  return list;\n};\n\nexports.calcVisibleItems = calcVisibleItems;\n\nvar getScrollReferenceIndexData = function getScrollReferenceIndexData(_a) {\n  var viewportData = _a.viewportData,\n      cradleProps = _a.cradleProps,\n      cradleConfig = _a.cradleConfig;\n  var crosscount = cradleConfig.crosscount;\n  var viewportElement = viewportData.elementref.current;\n  var orientation = cradleProps.orientation,\n      listsize = cradleProps.listsize;\n  var scrollPos, cellLength;\n\n  if (orientation == 'vertical') {\n    scrollPos = viewportElement.scrollTop;\n    cellLength = cradleProps.cellHeight + cradleProps.gap;\n  } else {\n    scrollPos = viewportElement.scrollLeft;\n    cellLength = cradleProps.cellWidth + cradleProps.gap;\n  }\n\n  var referencescrolloffset = cellLength - scrollPos % cellLength;\n\n  if (referencescrolloffset == cellLength + cradleProps.padding) {\n    referencescrolloffset = 0;\n  }\n\n  var referencerowindex = Math.ceil((scrollPos - cradleProps.padding) / cellLength);\n  var spineReferenceIndex = referencerowindex * crosscount;\n  spineReferenceIndex = Math.min(spineReferenceIndex, listsize - 1);\n  var diff = spineReferenceIndex % crosscount;\n  spineReferenceIndex -= diff;\n  var referenceIndexData = {\n    index: spineReferenceIndex,\n    spineoffset: referencescrolloffset\n  };\n  if (referenceIndexData.index == 0) referenceIndexData.spineoffset = 0; // defensive\n\n  return referenceIndexData;\n};\n\nexports.getScrollReferenceIndexData = getScrollReferenceIndexData;\n\nvar getContentListRequirements = function getContentListRequirements(_a) {\n  var _b;\n\n  var // called from setCradleContent only\n  cradleProps = _a.cradleProps,\n      cradleConfig = _a.cradleConfig,\n      referenceoffset = _a.visibletargetindexoffset,\n      targetViewportOffset = _a.targetViewportOffset,\n      viewportElement = _a.viewportElement;\n  var orientation = cradleProps.orientation,\n      cellHeight = cradleProps.cellHeight,\n      cellWidth = cradleProps.cellWidth,\n      runwaycount = cradleProps.runwaycount,\n      gap = cradleProps.gap,\n      padding = cradleProps.padding,\n      listsize = cradleProps.listsize;\n  var crosscount = cradleConfig.crosscount,\n      cradleRowcount = cradleConfig.cradleRowcount,\n      viewportRowcount = cradleConfig.viewportRowcount; // reconcile spineReferenceIndex to crosscount context\n\n  var diff = referenceoffset % crosscount;\n  referenceoffset -= diff; // -------------[ calc basic inputs: cellLength, contentCount. ]----------\n\n  var cellLength, viewportlength;\n\n  if (orientation == 'vertical') {\n    cellLength = cellHeight + gap;\n    viewportlength = viewportElement.offsetHeight;\n  } else {\n    cellLength = cellWidth + gap;\n    viewportlength = viewportElement.offsetWidth;\n  } // let viewportrows = Math.floor(viewportlength / cellLength)\n\n\n  var viewportrows = viewportRowcount;\n  var contentCount = cradleRowcount * crosscount; // -----------------------[ calc leadingitemcount, referenceoffset ]-----------------------\n\n  var runwayitemcount = runwaycount * crosscount;\n  runwayitemcount = Math.min(runwayitemcount, referenceoffset); // for list head\n  // -----------------------[ calc cradleReferenceIndex ]------------------------\n  // leading edge\n\n  var cradleReferenceIndex = referenceoffset - runwayitemcount; // ------------[ adjust cradleReferenceIndex for underflow ]------------\n\n  diff = 0; // reset\n\n  var indexshift = 0; // adjustment if overshoot head\n\n  if (cradleReferenceIndex < 0) {\n    diff = cradleReferenceIndex;\n    indexshift = Math.floor(cradleReferenceIndex / crosscount) * crosscount;\n    cradleReferenceIndex += indexshift;\n  } // ------------[ adjust cradleReferenceIndex and contentCount for listsize overflow ]------------\n\n\n  var spineOffset = targetViewportOffset % cellLength; // if (spineOffset < 0) { // TODO: this shouldn't happen - reproduce from wide botton to narrow\n  //     spineOffset += (orientation == 'vertical'?cellHeight:cellWidth)\n  //     referenceoffset += crosscount\n  //     cradleReferenceIndex += crosscount\n  // }\n  // --------------------[ calc css positioning ]-----------------------\n\n  var targetrowoffset = Math.ceil(referenceoffset / crosscount);\n  var scrollblockoffset = targetrowoffset * cellLength + padding; // gap\n\n  var spineadjustment;\n\n  if (targetrowoffset == 0) {\n    scrollblockoffset = 0;\n    spineOffset = 0; // padding\n\n    spineadjustment = padding;\n  } else {\n    spineadjustment = 0; //gap;\n\n    _b = adjustSpineOffsetForMaxRefindex({\n      referenceoffset: referenceoffset,\n      spineOffset: spineOffset,\n      scrollblockoffset: scrollblockoffset,\n      targetrowoffset: targetrowoffset,\n      viewportlength: viewportlength,\n      listsize: listsize,\n      viewportrows: viewportrows,\n      crosscount: crosscount,\n      cellLength: cellLength,\n      padding: padding,\n      gap: gap,\n      cradleReferenceIndex: cradleReferenceIndex,\n      contentCount: contentCount\n    }), cradleReferenceIndex = _b[0], contentCount = _b[1], referenceoffset = _b[2], scrollblockoffset = _b[3], spineOffset = _b[4];\n  } // debugger\n  // console.log('cradleReferenceIndex, referenceoffset, contentCount, scrollblockoffset, spineOffset, spineadjustment',\n  //     cradleReferenceIndex, referenceoffset, contentCount, scrollblockoffset, spineOffset, spineadjustment)\n\n\n  return {\n    cradleReferenceIndex: cradleReferenceIndex,\n    referenceoffset: referenceoffset,\n    contentCount: contentCount,\n    scrollblockoffset: scrollblockoffset,\n    spineOffset: spineOffset,\n    spineadjustment: spineadjustment\n  }; // summarize requirements message\n};\n\nexports.getContentListRequirements = getContentListRequirements;\n\nvar adjustSpineOffsetForMaxRefindex = function adjustSpineOffsetForMaxRefindex(_a) {\n  // debugger\n  var listsize = _a.listsize,\n      crosscount = _a.crosscount,\n      contentCount = _a.contentCount,\n      cradleReferenceIndex = _a.cradleReferenceIndex,\n      referenceoffset = _a.referenceoffset,\n      targetrowoffset = _a.targetrowoffset,\n      scrollblockoffset = _a.scrollblockoffset,\n      spineOffset = _a.spineOffset,\n      viewportlength = _a.viewportlength,\n      viewportrows = _a.viewportrows,\n      cellLength = _a.cellLength,\n      padding = _a.padding,\n      gap = _a.gap;\n  var activelistitemcount = cradleReferenceIndex + contentCount;\n  var activelistrowcount = Math.ceil(activelistitemcount / crosscount);\n  var listRowcount = Math.ceil(listsize / crosscount); // memos\n  // let originalcradleoffset = cradleReferenceIndex\n  // let originalreferenceoffset = referenceoffset\n  // let originalspineOffset = spineOffset\n\n  if (activelistrowcount > listRowcount) {\n    var diffrows = activelistrowcount - listRowcount;\n    var diff = diffrows * crosscount;\n    cradleReferenceIndex -= diff;\n    activelistrowcount -= diffrows; // console.log('adjusting cradleReferemcicradlereference original, adjustment, rows, items, result', \n    //     originalcradleoffset, diff, diffrows, cradleReferenceIndex)\n  } // let testlistrowcount = Math.ceil((cradleReferenceIndex + contentCount + 1)/crosscount)\n\n\n  if (activelistrowcount == listRowcount) {\n    var diff = listsize % crosscount;\n\n    if (diff) {\n      contentCount -= crosscount - diff;\n    } // console.log('final row adjustment through activelistrowcount, listRowcount, listsize, contentCount, crosscount, diff',\n    // activelistrowcount, listRowcount, listsize, contentCount, crosscount, diff)\n\n  }\n\n  var maxrefindexrowoffset = Math.ceil(listsize / crosscount) - viewportrows + 1; // console.log('targetrowoffset, maxrefindexrowoffset', targetrowoffset, maxrefindexrowoffset)\n\n  if (targetrowoffset > maxrefindexrowoffset) {\n    var diff = targetrowoffset - maxrefindexrowoffset;\n    targetrowoffset -= diff; // maxrefindexrowoffset\n    // cradleReferenceIndex -= (diff * crosscount)\n\n    referenceoffset = targetrowoffset * crosscount;\n    scrollblockoffset = targetrowoffset * cellLength + padding;\n    spineOffset = viewportlength - (viewportrows - 1) * cellLength - gap; // console.log('targetrow adjustment: targetrowoffset, cradleReferenceIndex, referenceoffset, scrollblockoffset, spineOffset',\n    //     targetrowoffset, cradleReferenceIndex, referenceoffset, scrollblockoffset, spineOffset)\n  } // debugger\n\n\n  return [cradleReferenceIndex, contentCount, referenceoffset, scrollblockoffset, spineOffset];\n}; // filter out items that not proximate to the spine\n\n\nvar isolateRelevantIntersections = function isolateRelevantIntersections(_a) {\n  var intersections = _a.intersections,\n      cradleContent = _a.cradleContent,\n      itemObserverThreshold = _a.itemObserverThreshold,\n      scrollforward = _a.scrollforward;\n  var headcontent = cradleContent.headModel;\n  var tailcontent = cradleContent.tailModel;\n  var headindexes = [],\n      tailindexes = [],\n      headintersectionindexes = [],\n      headintersections = [],\n      tailintersectionindexes = [],\n      tailintersections = [],\n      intersecting = {},\n      filteredintersections = []; // collect lists of indexes...\n  // headindexes, tailindexes\n\n  for (var _i = 0, headcontent_1 = headcontent; _i < headcontent_1.length; _i++) {\n    var component = headcontent_1[_i];\n    headindexes.push(component.props.index);\n  }\n\n  for (var _b = 0, tailcontent_1 = tailcontent; _b < tailcontent_1.length; _b++) {\n    var component = tailcontent_1[_b];\n    tailindexes.push(component.props.index);\n  }\n\n  var duplicates = {};\n  var intersectionsptr = 0;\n\n  for (var _c = 0, intersections_1 = intersections; _c < intersections_1.length; _c++) {\n    var entry = intersections_1[_c];\n    var index = parseInt(entry.target.dataset.index);\n    var headptr_1 = void 0,\n        tailptr_1 = void 0;\n\n    if (tailindexes.includes(index)) {\n      tailintersectionindexes.push(index);\n      tailintersections.push(entry);\n      tailptr_1 = tailintersections.length - 1; // used for duplicate resolution\n    } else if (headindexes.includes(index)) {\n      headintersectionindexes.push(index);\n      headintersections.push(entry);\n      headptr_1 = headintersections.length - 1; // used for duplicate resolution\n    } else {\n      console.log('error: unknown intersection element, aborting isolateRelevantIntersections', entry);\n      return; // shouldn't happen; give up\n    }\n\n    var ratio = void 0;\n\n    if (browser && browser.name == 'safari') {\n      ratio = entry.intersectionRatio;\n    } else {\n      ratio = Math.round(entry.intersectionRatio * 1000) / 1000;\n    }\n\n    var calcintersecting = ratio >= itemObserverThreshold;\n    var iobj = {\n      index: index,\n      intersecting: calcintersecting,\n      isIntersecting: entry.isIntersecting,\n      ratio: ratio,\n      originalratio: entry.intersectionRatio,\n      time: entry.time,\n      headptr: headptr_1,\n      tailptr: tailptr_1,\n      intersectionsptr: intersectionsptr\n    };\n\n    if (!intersecting[index]) {\n      // new item\n      intersecting[index] = iobj;\n    } else {\n      // duplicate item\n      if (!Array.isArray(intersecting[index])) {\n        var arr = [intersecting[index]];\n        intersecting[index] = arr;\n      }\n\n      intersecting[index].push(iobj);\n\n      if (!duplicates[index]) {\n        duplicates[index] = [];\n        duplicates[index].push(intersecting[index][0]);\n      }\n\n      duplicates[index].push(iobj);\n    }\n\n    intersectionsptr++;\n  } // resolve duplicates. For uneven number, keep the most recent\n  // otherwise delete them, they cancel each other out.\n\n\n  var duplicateslength = Object.keys(duplicates).length;\n\n  if (duplicateslength > 0) {\n    // console.log('DUPLICATES found', duplicateslength, duplicates)\n    var headintersectionsdelete_1 = [],\n        tailintersectionsdelete_1 = [];\n\n    for (var duplicateindex in duplicates) {\n      var duplicate = duplicates[duplicateindex];\n\n      if (duplicate.length % 2) {\n        duplicate.sort(duplicatecompare);\n        var entry = duplicate.slice(duplicate.length - 1, 1);\n        intersecting[entry.index] = entry;\n      } else {\n        delete intersecting[duplicate[0].index]; // intersectingdelete.push(duplicate[0].index)\n      }\n\n      for (var _d = 0, duplicate_1 = duplicate; _d < duplicate_1.length; _d++) {\n        var entryobj = duplicate_1[_d];\n        var headptr_2 = entryobj.headptr;\n        var tailptr_2 = entryobj.tailptr;\n\n        if (headptr_2 !== undefined) {\n          headintersectionsdelete_1.push(headptr_2);\n        }\n\n        if (tailptr_2 !== undefined) {\n          tailintersectionsdelete_1.push(tailptr_2);\n        }\n      }\n    }\n\n    if (headintersectionsdelete_1.length) {\n      headintersectionindexes = headintersectionindexes.filter(function (value, index) {\n        return !headintersectionsdelete_1.includes(index);\n      });\n      headintersections = headintersections.filter(function (value, index) {\n        return !headintersectionsdelete_1.includes(index);\n      });\n    }\n\n    if (tailintersectionsdelete_1.length) {\n      tailintersectionindexes = tailintersectionindexes.filter(function (value, index) {\n        return !tailintersectionsdelete_1.includes(index);\n      });\n      tailintersections = tailintersections.filter(function (value, index) {\n        return !tailintersectionsdelete_1.includes(index);\n      });\n    }\n  }\n\n  headintersectionindexes.sort(indexcompare);\n  tailintersectionindexes.sort(indexcompare);\n  headintersections.sort(entrycompare);\n  tailintersections.sort(entrycompare); // set reference points in relation to the spine\n\n  var headindex = headindexes[headindexes.length - 1];\n  var tailindex = tailindexes[0];\n  var headptr = headintersectionindexes.indexOf(headindex);\n  var tailptr = tailintersectionindexes.indexOf(tailindex); // filter out items that register only because they have just been moved\n\n  if (headptr !== headintersectionindexes.length - 1) {\n    headptr = -1;\n  }\n\n  if (tailptr !== 0) {\n    tailptr = -1;\n  }\n\n  if (headptr > -1 && tailptr > -1) {\n    // edge case\n    if (scrollforward) {\n      headptr = -1;\n    } else {\n      tailptr = -1;\n    }\n  } // collect notifications to main thread (filtered intersections)\n  // for scrollbackward\n\n\n  var headrefindex, tailrefindex; // for return\n\n  if (!scrollforward && headptr >= 0) {\n    headrefindex = headintersectionindexes[headptr];\n    var refindex = headrefindex + 1;\n    var refintersecting = intersecting[refindex - 1].intersecting;\n\n    for (var ptr = headptr; ptr >= 0; ptr--) {\n      var index = headintersectionindexes[ptr]; // test for continuity and consistency\n\n      if (index + 1 == refindex && intersecting[index].intersecting == refintersecting) {\n        filteredintersections.push(headintersections[ptr]);\n      } else {\n        break;\n      }\n\n      refindex = index;\n      refintersecting = intersecting[refindex].intersecting;\n    }\n  } // for scrollforward\n\n\n  if (scrollforward && tailptr >= 0) {\n    tailrefindex = tailintersectionindexes[tailptr];\n    var refindex = tailrefindex - 1;\n    var refintersecting = intersecting[refindex + 1].intersecting;\n\n    for (var ptr = tailptr; ptr < tailintersectionindexes.length; ptr++) {\n      var index = tailintersectionindexes[ptr]; // test for continuity and consistency\n\n      if (index - 1 == refindex && intersecting[index].intersecting == refintersecting) {\n        filteredintersections.push(tailintersections[ptr]);\n      } else {\n        break;\n      }\n\n      refindex = index;\n      refintersecting = intersecting[index].intersecting;\n    }\n  }\n\n  filteredintersections.sort(entrycompare); // TODO this should be integrated into the code above\n\n  return filteredintersections;\n};\n\nexports.isolateRelevantIntersections = isolateRelevantIntersections;\n\nvar indexcompare = function indexcompare(a, b) {\n  var retval = a < b ? -1 : 1;\n  return retval;\n};\n\nvar entrycompare = function entrycompare(a, b) {\n  var retval = parseInt(a.target.dataset.index) < parseInt(b.target.dataset.index) ? -1 : 1;\n  return retval;\n};\n\nvar duplicatecompare = function duplicatecompare(a, b) {\n  var retval = a.time < b.time ? -1 : 1;\n};\n\nvar calcContentShifts = function calcContentShifts(_a) {\n  // ------------------------[ initialize ]--------------\n  var // called only from updateCradleContent\n  cradleProps = _a.cradleProps,\n      cradleElements = _a.cradleElements,\n      cradleContent = _a.cradleContent,\n      cradleConfig = _a.cradleConfig,\n      viewportElement = _a.viewportElement,\n      itemElements = _a.itemElements,\n      intersections = _a.intersections,\n      scrollforward = _a.scrollforward;\n  var gap = cradleProps.gap,\n      orientation = cradleProps.orientation,\n      cellHeight = cradleProps.cellHeight,\n      cellWidth = cradleProps.cellWidth,\n      listsize = cradleProps.listsize,\n      padding = cradleProps.padding,\n      runwaycount = cradleProps.runwaycount;\n  var spineElement = cradleElements.spine.current;\n  var headElement = cradleElements.head.current;\n  var tailElement = cradleElements.tail.current;\n  var cradlecontentlist = cradleContent.cradleModel;\n  var headcontentlist = cradleContent.headModel;\n  var tailcontentlist = cradleContent.tailModel;\n  var crosscount = cradleConfig.crosscount,\n      cradleRowcount = cradleConfig.cradleRowcount,\n      listRowcount = cradleConfig.listRowcount,\n      viewportRowcount = cradleConfig.viewportRowcount,\n      itemObserverThreshold = cradleConfig.itemObserverThreshold;\n  var BOD = false,\n      EOD = false; // beginning-of-data, end-of-data\n  // -------[ 1. calculate head overshoot row count, if any ]-------\n\n  var startingspineoffset, headblockoffset, tailblockoffset, viewportlength;\n  var viewportvisiblegaplength = 0;\n  var cellLength = orientation == 'vertical' ? cellHeight + gap : cellWidth + gap;\n\n  if (orientation == 'vertical') {\n    startingspineoffset = spineElement.offsetTop - viewportElement.scrollTop;\n    viewportlength = viewportElement.offsetHeight; // measure any gap between the cradle and the top viewport boundary\n\n    if (!scrollforward) {\n      // if startingspineoffset is below the top by more than the height of the headElment then a gap will be visible\n      viewportvisiblegaplength = startingspineoffset - headElement.offsetHeight;\n    }\n  } else {\n    // horizontal\n    startingspineoffset = spineElement.offsetLeft - viewportElement.scrollLeft;\n    viewportlength = viewportElement.offsetWidth;\n\n    if (!scrollforward) {\n      viewportvisiblegaplength = startingspineoffset - headElement.offsetWidth;\n    }\n  }\n\n  if (viewportvisiblegaplength < 0 || viewportvisiblegaplength > viewportlength) viewportvisiblegaplength = 0; // no visible gap, or reposition should have kicked in\n  // viewportvisiblegaplength is always positive\n\n  var overshootrowcount = viewportvisiblegaplength == 0 ? 0 : Math.ceil(viewportvisiblegaplength / cellLength); // rows to fill viewport\n  // extra rows for runway\n\n  if (overshootrowcount) {\n    overshootrowcount += runwaycount;\n  }\n\n  var overshootitemcount = overshootrowcount * crosscount;\n\n  if (overshootitemcount) {\n    // (!scrollforward && overshootitemcount) { // negation of values for scroll backward\n    overshootitemcount = -overshootitemcount;\n    overshootrowcount = -overshootrowcount;\n  } // ----------------------[ 2. calculate itemshiftcount includng overshoot ]------------------------\n  // shift item count is the number of items the virtual cradle shifts, according to observer notices\n\n\n  var forwardcount = 0,\n      backwardcount = 0;\n\n  if (scrollforward) {\n    backwardcount = intersections.length;\n  } else {\n    forwardcount = intersections.length;\n  }\n\n  var cradleshiftcount = backwardcount - forwardcount + overshootitemcount;\n  var referenceshiftcount = cradleshiftcount;\n  var cradlerowshift = Math.ceil(cradleshiftcount / crosscount);\n  var referencerowshift = cradlerowshift; // --------------------------[ 3. calc cradleindex and referenceindex ]--------------------------\n\n  var previouscradleindex = cradlecontentlist[0].props.index;\n  var previouscradlerowoffset = previouscradleindex / crosscount;\n  var previousreferenceindex = tailcontentlist[0].props.index;\n  var previousreferencerowoffset = previousreferenceindex / crosscount;\n  var diff;\n\n  if (scrollforward) {\n    if (previouscradlerowoffset + cradleRowcount + cradlerowshift >= listRowcount) {\n      EOD = true;\n    }\n\n    diff = previouscradlerowoffset + cradleRowcount + cradlerowshift - listRowcount;\n\n    if (diff > 0) {\n      cradlerowshift -= diff;\n      cradleshiftcount -= diff * crosscount;\n    }\n  } else {\n    if (previouscradlerowoffset + cradlerowshift <= 0) {\n      BOD = true;\n    }\n\n    diff = previouscradlerowoffset + cradlerowshift;\n\n    if (diff < 0) {\n      cradlerowshift -= diff;\n      cradleshiftcount -= diff * crosscount;\n    }\n  }\n\n  var newcradleindex = previouscradleindex + cradleshiftcount;\n  var newreferenceindex = previousreferenceindex + referenceshiftcount;\n\n  if (newreferenceindex < 0) {\n    referenceshiftcount += newreferenceindex;\n    newreferenceindex = 0;\n  } // -------------[ 4. calculate spineAdjustment and spineOffset ]------------------\n\n\n  var referenceitemshiftcount = newreferenceindex - previousreferenceindex;\n  var cradleitemshiftcount = newcradleindex - previouscradleindex;\n  referencerowshift = referenceitemshiftcount / crosscount;\n  var referencepixelshift = referencerowshift * cellLength;\n  var spineOffset = startingspineoffset + referencepixelshift;\n  var spineOffsetTarget = spineOffset;\n  var spineAdjustment = 0;\n\n  if (Math.abs(spineOffset) > cellLength) {\n    spineOffsetTarget = spineOffset % cellLength;\n    spineAdjustment = -(Math.ceil((spineOffset - spineOffsetTarget) / cellLength) * crosscount);\n  }\n\n  if (spineOffsetTarget < 0) {\n    spineOffsetTarget += cellLength;\n    spineAdjustment += crosscount;\n  }\n\n  if (spineAdjustment && (BOD || EOD)) {\n    newreferenceindex += spineAdjustment;\n    referenceitemshiftcount += spineAdjustment;\n    spineOffset = spineOffsetTarget;\n  } else if (spineAdjustment) {\n    newcradleindex += spineAdjustment;\n    cradleitemshiftcount += spineAdjustment;\n    newreferenceindex += spineAdjustment;\n    referenceitemshiftcount += spineAdjustment;\n    spineOffset = spineOffsetTarget;\n  }\n\n  spineOffset = spineOffsetTarget; // ---------------------[ 5. return required values ]-------------------\n\n  var cradleitemcount = cradleRowcount * crosscount;\n  return [newcradleindex, cradleitemshiftcount, newreferenceindex, referenceitemshiftcount, spineOffset, cradleitemcount];\n};\n\nexports.calcContentShifts = calcContentShifts;\n\nvar calcHeadAndTailChanges = function calcHeadAndTailChanges(_a) {\n  var cradleProps = _a.cradleProps,\n      cradleConfig = _a.cradleConfig,\n      cradleContent = _a.cradleContent,\n      cradleshiftcount = _a.cradleshiftcount,\n      scrollforward = _a.scrollforward,\n      cradleReferenceIndex = _a.cradleReferenceIndex;\n  var listsize = cradleProps.listsize;\n  var headcontent = cradleContent.headModel;\n  var tailcontent = cradleContent.tailModel;\n  var crosscount = cradleConfig.crosscount,\n      cradleRowcount = cradleConfig.cradleRowcount;\n  cradleshiftcount = Math.abs(cradleshiftcount);\n  var rowshiftcount = Math.ceil(cradleshiftcount / crosscount); //+ boundaryrowcount\n\n  var headrowcount, tailrowcount;\n  headrowcount = Math.ceil(headcontent.length / crosscount);\n  tailrowcount = Math.ceil(tailcontent.length / crosscount);\n  var pendingcontentoffset; // lookahead to new cradleReferenceIndex\n\n  var headchangecount, tailchangecount; // the output instructions for getUIContentList\n  // anticipaate add to one end, clip from the other        \n\n  var additemcount = 0;\n  var cliprowcount = 0,\n      clipitemcount = 0;\n\n  if (scrollforward) {\n    // clip from head; add to tail; scroll forward head is direction of scroll\n    // adjust clipitemcount\n    if (headrowcount + rowshiftcount > cradleProps.runwaycount) {\n      var rowdiff = headrowcount + rowshiftcount - cradleProps.runwaycount;\n      cliprowcount = rowdiff;\n      clipitemcount = cliprowcount * crosscount;\n    }\n\n    additemcount = clipitemcount; // maintain constant cradle count\n\n    pendingcontentoffset = cradleReferenceIndex + clipitemcount; // after clip\n\n    var proposedtailindex = pendingcontentoffset + cradleRowcount * crosscount - 1; // modelcontentlist.length - 1\n    // adkjust changes for list boundaries\n\n    if (proposedtailindex > listsize - 1) {\n      var diffitemcount = proposedtailindex - (listsize - 1); // items outside range\n\n      additemcount -= diffitemcount; // adjust the addcontent accordingly\n\n      var diffrows = Math.floor(diffitemcount / crosscount); // number of full rows to leave in place\n\n      var diffrowitems = diffrows * crosscount; // derived number of items to leave in place\n\n      clipitemcount -= diffrowitems; // apply adjustment to netshift\n\n      if (additemcount <= 0) {\n        // nothing to do\n        additemcount = 0;\n      }\n\n      if (clipitemcount <= 0) {\n        clipitemcount = 0;\n      }\n    }\n\n    headchangecount = -clipitemcount;\n    tailchangecount = additemcount;\n  } else {\n    // scroll backward, in direction of tail; clip from tail, add to head\n    var intersectionindexes = []; // headcount will be less than minimum (runwaycount), so a shift can be accomplished[]\n\n    if (headrowcount - rowshiftcount < cradleProps.runwaycount) {\n      // calculate clip for tail\n      var rowshortfall = cradleProps.runwaycount - (headrowcount - rowshiftcount);\n      cliprowcount = rowshortfall;\n      var tailrowitemcount = tailcontent.length % crosscount;\n      if (tailrowitemcount == 0) tailrowitemcount = crosscount;\n      clipitemcount = tailrowitemcount;\n\n      if (tailrowcount > 1) {\n        if (cliprowcount > tailrowcount) {\n          cliprowcount = tailrowcount;\n        }\n\n        if (cliprowcount > 1) {\n          clipitemcount += (cliprowcount - 1) * crosscount;\n        }\n      } // compenstate with additemcount\n\n\n      additemcount = cliprowcount * crosscount;\n    }\n\n    var proposedindexoffset = cradleReferenceIndex - additemcount;\n\n    if (proposedindexoffset < 0) {\n      var diffitemcount = -proposedindexoffset;\n      var diffrows = Math.ceil(diffitemcount / crosscount); // number of full rows to leave in place\n\n      var diffrowitems = diffrows * crosscount;\n      additemcount -= diffitemcount;\n      clipitemcount -= diffrowitems;\n\n      if (additemcount <= 0) {\n        additemcount = 0;\n      }\n\n      if (clipitemcount <= 0) {\n        clipitemcount = 0;\n      }\n    }\n\n    headchangecount = additemcount;\n    tailchangecount = -clipitemcount;\n  }\n\n  return [headchangecount, tailchangecount];\n};\n\nexports.calcHeadAndTailChanges = calcHeadAndTailChanges; // update content\n// adds itemshells at end of contentlist according to headindexcount and tailindescount,\n// or if indexcount values are <0 removes them.\n\nvar getUIContentList = function getUIContentList(_a) {\n  var cradleProps = _a.cradleProps,\n      cradleConfig = _a.cradleConfig,\n      contentCount = _a.contentCount,\n      cradleReferenceIndex = _a.cradleReferenceIndex,\n      headchangecount = _a.headchangecount,\n      tailchangecount = _a.tailchangecount,\n      contentlist = _a.localContentList,\n      callbacks = _a.callbacks,\n      observer = _a.observer,\n      instanceIdCounterRef = _a.instanceIdCounterRef;\n  var crosscount = cradleConfig.crosscount,\n      cradleRowcount = cradleConfig.cradleRowcount;\n\n  var localContentlist = __spreadArray([], contentlist);\n\n  var tailindexoffset = cradleReferenceIndex + contentlist.length; // let headindexoffset = cradleReferenceIndex\n\n  var returnContentlist;\n  var headContentlist = [];\n  var topconstraint = cradleReferenceIndex - headchangecount,\n      bottomconstraint = cradleReferenceIndex - headchangecount + (contentCount + 1); // TODO: validate \"+1\"\n  // console.log('topconstraint, bottomconstraint, cradleReferenceIndex, contentCount, headchangecount, tailchangecount', \n  //     topconstraint, bottomconstraint, cradleReferenceIndex, contentCount, headchangecount, tailchangecount)\n\n  if (headchangecount >= 0) {\n    for (var index = cradleReferenceIndex - headchangecount; index < cradleReferenceIndex; index++) {\n      if (!(index >= topconstraint && index <= bottomconstraint)) {\n        continue;\n      }\n\n      headContentlist.push(acquireItem({\n        index: index,\n        cradleProps: cradleProps,\n        observer: observer,\n        callbacks: callbacks,\n        instanceIdCounterRef: instanceIdCounterRef\n      }));\n    }\n  } else {\n    localContentlist.splice(0, -headchangecount);\n  }\n\n  var tailContentlist = [];\n\n  if (tailchangecount >= 0) {\n    for (var index = tailindexoffset; index < tailindexoffset + tailchangecount; index++) {\n      if (!(index >= topconstraint && index <= bottomconstraint)) {\n        continue;\n      }\n\n      tailContentlist.push(acquireItem({\n        index: index,\n        cradleProps: cradleProps,\n        observer: observer,\n        callbacks: callbacks,\n        instanceIdCounterRef: instanceIdCounterRef\n      }));\n    }\n  } else {\n    localContentlist.splice(tailchangecount, -tailchangecount);\n  }\n\n  returnContentlist = headContentlist.concat(localContentlist, tailContentlist); // console.log('components of getcontentlist: returnContentList, headContentlist, localContentlist, tailContentlist', \n  //     returnContentlist, headContentlist, localContentlist, tailContentlist)\n\n  return returnContentlist;\n};\n\nexports.getUIContentList = getUIContentList; // butterfly model. Leading (head) all or partially hidden; tail, visible plus following hidden\n\nvar allocateContentList = function allocateContentList(_a) {\n  var contentlist = _a.contentlist,\n      // of cradle, in items (React components)\n  spineReferenceIndex = _a.spineReferenceIndex;\n  var offsetindex = contentlist[0].props.index;\n  var headitemcount;\n  headitemcount = spineReferenceIndex - offsetindex;\n  var headlist = contentlist.slice(0, headitemcount);\n  var taillist = contentlist.slice(headitemcount);\n  return [headlist, taillist];\n};\n\nexports.allocateContentList = allocateContentList;\n\nvar acquireItem = function acquireItem(_a) {\n  var index = _a.index,\n      cradleProps = _a.cradleProps,\n      observer = _a.observer,\n      callbacks = _a.callbacks,\n      instanceIdCounterRef = _a.instanceIdCounterRef;\n  var instanceID = instanceIdCounterRef.current++;\n  return emitItem({\n    index: index,\n    cradleProps: cradleProps,\n    observer: observer,\n    callbacks: callbacks,\n    instanceID: instanceID\n  });\n};\n\nvar emitItem = function emitItem(_a) {\n  var index = _a.index,\n      cradleProps = _a.cradleProps,\n      observer = _a.observer,\n      callbacks = _a.callbacks,\n      instanceID = _a.instanceID;\n  var orientation = cradleProps.orientation,\n      cellHeight = cradleProps.cellHeight,\n      cellWidth = cradleProps.cellWidth,\n      getItem = cradleProps.getItem,\n      placeholder = cradleProps.placeholder,\n      listsize = cradleProps.listsize,\n      scrollerName = cradleProps.scrollerName,\n      scrollerID = cradleProps.scrollerID;\n  return react_1[\"default\"].createElement(itemshell_1[\"default\"], {\n    key: index,\n    orientation: orientation,\n    cellHeight: cellHeight,\n    cellWidth: cellWidth,\n    index: index,\n    observer: observer,\n    callbacks: callbacks,\n    getItem: getItem,\n    listsize: listsize,\n    placeholder: placeholder,\n    instanceID: instanceID,\n    scrollerName: scrollerName,\n    scrollerID: scrollerID\n  });\n}; // ========================================================================================\n// ------------------------------------[ styles ]------------------------------------------\n// ========================================================================================\n\n\nvar setCradleGridStyles = function setCradleGridStyles(_a) {\n  var orientation = _a.orientation,\n      headstylesobject = _a.headCradleStyles,\n      tailstylesobject = _a.tailCradleStyles,\n      cellHeight = _a.cellHeight,\n      cellWidth = _a.cellWidth,\n      gap = _a.gap,\n      padding = _a.padding,\n      crosscount = _a.crosscount,\n      viewportheight = _a.viewportheight,\n      viewportwidth = _a.viewportwidth;\n\n  var headstyles = __assign({}, headstylesobject);\n\n  var tailstyles = __assign({}, tailstylesobject);\n\n  headstyles.gridGap = gap + 'px';\n  tailstyles.gridGap = gap + 'px';\n\n  if (orientation == 'horizontal') {\n    headstyles.padding = padding + \"px 0 \" + padding + \"px \" + padding + \"px\";\n    headstyles.width = 'auto';\n    headstyles.height = '100%';\n    headstyles.gridAutoFlow = 'column'; // explict crosscount next line as workaround for FF problem - \n    //     sets length of horiz cradle items in one line (row), not multi-row config\n\n    headstyles.gridTemplateRows = cellHeight ? \"repeat(\" + crosscount + \", minmax(\" + cellHeight + \"px, 1fr))\" : 'auto';\n    headstyles.gridTemplateColumns = 'none';\n    tailstyles.padding = padding + \"px \" + padding + \"px \" + padding + \"px 0\";\n    tailstyles.width = 'auto';\n    tailstyles.height = '100%';\n    tailstyles.gridAutoFlow = 'column'; // explict crosscount next line as workaround for FF problem - \n    //     sets length of horiz cradle items in one line (row), not multi-row config\n\n    tailstyles.gridTemplateRows = cellHeight ? \"repeat(\" + crosscount + \", minmax(\" + cellHeight + \"px, 1fr))\" : 'auto';\n    tailstyles.gridTemplateColumns = 'none';\n  } else if (orientation == 'vertical') {\n    headstyles.padding = padding + \"px \" + padding + \"px 0 \" + padding + \"px\";\n    headstyles.width = '100%';\n    headstyles.height = 'auto';\n    headstyles.gridAutoFlow = 'row';\n    headstyles.gridTemplateRows = 'none';\n    headstyles.gridTemplateColumns = cellWidth ? \"repeat(auto-fit, minmax(\" + cellWidth + \"px, 1fr))\" : 'auto';\n    tailstyles.padding = \"0 \" + padding + \"px \" + padding + \"px \" + padding + \"px\";\n    tailstyles.width = '100%';\n    tailstyles.height = 'auto';\n    tailstyles.gridAutoFlow = 'row';\n    tailstyles.gridTemplateRows = 'none';\n    tailstyles.gridTemplateColumns = cellWidth ? \"repeat(auto-fit, minmax(\" + cellWidth + \"px, 1fr))\" : 'auto';\n  }\n\n  return [headstyles, tailstyles];\n};\n\nexports.setCradleGridStyles = setCradleGridStyles;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/cradlefunctions.tsx\n");

/***/ }),

/***/ "./src/infinitegridscroller.tsx":
/*!**************************************!*\
  !*** ./src/infinitegridscroller.tsx ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" // infinitegridscroller.tsx\n// copyright (c) 2019 Henrik Bechmann, Toronto, Licence: MIT\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importStar(__webpack_require__(/*! react */ \"react\"));\n\nvar viewport_1 = __importDefault(__webpack_require__(/*! ./viewport */ \"./src/viewport.tsx\"));\n\nvar scrollblock_1 = __importDefault(__webpack_require__(/*! ./scrollblock */ \"./src/scrollblock.tsx\"));\n\nvar cradle_1 = __importDefault(__webpack_require__(/*! ./cradle */ \"./src/cradle.tsx\"));\n\nvar portalmanager_1 = __webpack_require__(/*! ./portalmanager */ \"./src/portalmanager.tsx\");\n\nvar scrollerID = 0;\n\nvar getScrollerID = function getScrollerID() {\n  // console.log('fetching scrollerID', scrollerID)\n  return scrollerID++;\n};\n/*\n    BACKLOG:\n    - cache: none/preload/keepload\n*/\n// ===================================[ INITIALIZE ]===========================\n\n/*\n    The job of InfiniteGridScroller is to pass parameters to dependents.\n    Viewport contains the scrollblock, which in turn contains the cradle\n        - a component that contains displayed (or nearly displayed) items.\n    The items are skeletons which contain the host content components.\n\n    Scrollblock virtually represents the entirety of the list, and of course scrolls\n    Cradle contains the list items, and is 'virtualiized' -- it appears as\n      though it is the full scrollblock, but in fact it is only slightly larger than\n      the viewport.\n    - individual items are framed by ItemShell, managed by Cradle\n\n    Overall the infinitegridscroller manages the often asynchronous interactions of the\n    components of the mechanism\n*/\n\n\nvar InfiniteGridScroller = function InfiniteGridScroller(props) {\n  var _a, _b, _c, _d, _e, _f, _g;\n\n  var orientation = props.orientation,\n      // vertical or horizontal\n  gap = props.gap,\n      // space between grid cells, not including the leading and trailing edges\n  padding = props.padding,\n      // the space between the items and the viewport, applied to the cradle\n  cellHeight = props.cellHeight,\n      // the outer pixel height - literal for vertical; approximate for horizontal\n  cellWidth = props.cellWidth,\n      // the outer pixel width - literal for horizontal; approximate for vertical\n  runway = props.runway,\n      // the number of items outside the view of each side of the viewport \n  // -- gives time to assemble before display\n  listsize = props.listsize,\n      // the exact number of the size of the virtual list\n  indexOffset = props.indexOffset,\n      // the 0-based starting index of the list, when first loaded\n  getItem = props.getItem,\n      // function provided by host - parameter is index number, set by system; return value is \n  // host-selected component or promise of a component\n  functions = props.functions,\n      // properties with direct access to some component utilites, optional\n  placeholder = props.placeholder,\n      // a sparse component to stand in for content until the content arrives; \n  // optional, replaces default\n  styles = props.styles,\n      // passive style over-rides (eg. color, opacity) for viewport, scrollblock, cradle, or scrolltracker\n  // to come...\n  // cache = \"preload\", \"keepload\", \"none\"\n  // dense, // boolean (only with preload)\n  layout = props.layout,\n      // uniform, variable\n  scrollerName = props.scrollerName;\n  var globalScrollerID = react_1.useMemo(function () {\n    return getScrollerID();\n  }, []);\n  var scrollerIDRef = react_1.useRef(globalScrollerID); // console.log('scrollerIDRef, scrollerID',scrollerIDRef, scrollerID)\n  // defaults\n\n  (_a = functions) !== null && _a !== void 0 ? _a : functions = {};\n  (_b = gap) !== null && _b !== void 0 ? _b : gap = 0;\n  (_c = padding) !== null && _c !== void 0 ? _c : padding = 0;\n  (_d = runway) !== null && _d !== void 0 ? _d : runway = 3;\n  (_e = indexOffset) !== null && _e !== void 0 ? _e : indexOffset = 0;\n  (_f = listsize) !== null && _f !== void 0 ? _f : listsize = 0;\n  (_g = layout) !== null && _g !== void 0 ? _g : layout = 'uniform'; // constraints\n\n  indexOffset = Math.max(0, indexOffset); // non-negative\n\n  indexOffset = Math.min(listsize, indexOffset); // not larger than list\n\n  if (!['horizontal', 'vertical'].includes(orientation)) {\n    orientation = 'vertical';\n  }\n\n  return react_1[\"default\"].createElement(react_1[\"default\"].Fragment, null, // activate portals by placing them in React Tree at root scroller\n  scrollerIDRef.current == 0 ? react_1[\"default\"].createElement(portalmanager_1.PortalTree, null) : null, react_1[\"default\"].createElement(viewport_1[\"default\"], {\n    orientation: orientation,\n    cellWidth: cellHeight,\n    cellHeight: cellHeight,\n    gap: gap,\n    padding: padding,\n    functions: functions,\n    styles: styles,\n    scrollerID: scrollerIDRef.current\n  }, react_1[\"default\"].createElement(scrollblock_1[\"default\"], {\n    listsize: listsize,\n    cellWidth: cellWidth,\n    cellHeight: cellHeight,\n    gap: gap,\n    padding: padding,\n    orientation: orientation,\n    functions: functions,\n    styles: styles\n  }, react_1[\"default\"].createElement(cradle_1[\"default\"], {\n    gap: gap,\n    padding: padding,\n    cellWidth: cellWidth,\n    cellHeight: cellHeight,\n    listsize: listsize,\n    indexOffset: indexOffset,\n    orientation: orientation,\n    // runwaylength = { runwaylength } \n    getItem: getItem,\n    functions: functions,\n    placeholder: placeholder,\n    styles: styles,\n    runwaycount: runway,\n    scrollerName: scrollerName,\n    scrollerID: scrollerIDRef.current\n  }))));\n};\n\nexports[\"default\"] = InfiniteGridScroller;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TY3JvbGxlci8uL3NyYy9pbmZpbml0ZWdyaWRzY3JvbGxlci50c3g/NjNlMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQ0FBQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUE7O0FBR0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUEsSUFBSSxVQUFVLEdBQUcsQ0FBakI7O0FBQ0EsSUFBTSxhQUFhLEdBQUcsU0FBaEIsYUFBZ0I7QUFDbEI7QUFDQSxTQUFPLFVBQVUsRUFBakI7QUFDSCxDQUhEO0FBSUE7OztBQUdFO0FBRUY7O0FBRUE7Ozs7Ozs7Ozs7Ozs7O0FBY0U7OztBQUNGLElBQU0sb0JBQW9CLEdBQUcsU0FBdkIsb0JBQXVCLENBQUMsS0FBRCxFQUFNOzs7QUFFM0IsaUJBQVcsR0FvQlgsS0FBSyxDQXBCTSxXQUFYO0FBQUEsTUFBYTtBQUNiLEtBQUcsR0FtQkgsS0FBSyxDQW5CRixHQURIO0FBQUEsTUFDSztBQUNMLFNBQU8sR0FrQlAsS0FBSyxDQWxCRSxPQUZQO0FBQUEsTUFFUztBQUNULFlBQVUsR0FpQlYsS0FBSyxDQWpCSyxVQUhWO0FBQUEsTUFHWTtBQUNaLFdBQVMsR0FnQlQsS0FBSyxDQWhCSSxTQUpUO0FBQUEsTUFJVztBQUNYLFFBQU0sR0FlTixLQUFLLENBZkMsTUFMTjtBQUFBLE1BS1E7QUFDSjtBQUNKLFVBQVEsR0FhUixLQUFLLENBYkcsUUFQUjtBQUFBLE1BT1U7QUFDVixhQUFXLEdBWVgsS0FBSyxDQVpNLFdBUlg7QUFBQSxNQVFhO0FBQ2IsU0FBTyxHQVdQLEtBQUssQ0FYRSxPQVRQO0FBQUEsTUFTUztBQUNMO0FBQ0osV0FBUyxHQVNULEtBQUssQ0FUSSxTQVhUO0FBQUEsTUFXVztBQUNYLGFBQVcsR0FRWCxLQUFLLENBUk0sV0FaWDtBQUFBLE1BWWE7QUFDVDtBQUNKLFFBQU0sR0FNTixLQUFLLENBTkMsTUFkTjtBQUFBLE1BY1E7QUFDUjtBQUNBO0FBQ0E7QUFDQSxRQUFNLEdBRU4sS0FBSyxDQUZDLE1BbEJOO0FBQUEsTUFrQlE7QUFDUixjQUFZLEdBQ1osS0FBSyxDQURPLFlBbkJaO0FBc0JKLE1BQU0sZ0JBQWdCLEdBQUcsZ0JBQVE7QUFDN0IsV0FBTyxhQUFhLEVBQXBCO0FBQ0gsR0FGd0IsRUFFdkIsRUFGdUIsQ0FBekI7QUFJQSxNQUFNLGFBQWEsR0FBRyxlQUFPLGdCQUFQLENBQXRCLENBNUIrQixDQThCL0I7QUFFQTs7QUFDQSx1QkFBVyxJQUFYLElBQVcsYUFBWCxHQUFXLEVBQVgsR0FBZSxTQUFTLEdBQUcsRUFBM0I7QUFDQSxpQkFBSyxJQUFMLElBQUssYUFBTCxHQUFLLEVBQUwsR0FBUyxHQUFHLEdBQUcsQ0FBZjtBQUNBLHFCQUFTLElBQVQsSUFBUyxhQUFULEdBQVMsRUFBVCxHQUFhLE9BQU8sR0FBRyxDQUF2QjtBQUNBLG9CQUFRLElBQVIsSUFBUSxhQUFSLEdBQVEsRUFBUixHQUFZLE1BQU0sR0FBRyxDQUFyQjtBQUNBLHlCQUFhLElBQWIsSUFBYSxhQUFiLEdBQWEsRUFBYixHQUFpQixXQUFXLEdBQUcsQ0FBL0I7QUFDQSxzQkFBVSxJQUFWLElBQVUsYUFBVixHQUFVLEVBQVYsR0FBYyxRQUFRLEdBQUcsQ0FBekI7QUFDQSxvQkFBUSxJQUFSLElBQVEsYUFBUixHQUFRLEVBQVIsR0FBWSxNQUFNLEdBQUcsU0FBckIsQ0F2QytCLENBd0MvQjs7QUFDQSxhQUFXLEdBQUcsSUFBSSxDQUFDLEdBQUwsQ0FBUyxDQUFULEVBQVcsV0FBWCxDQUFkLENBekMrQixDQXlDTzs7QUFDdEMsYUFBVyxHQUFHLElBQUksQ0FBQyxHQUFMLENBQVMsUUFBVCxFQUFtQixXQUFuQixDQUFkLENBMUMrQixDQTBDZTs7QUFDOUMsTUFBSSxDQUFDLENBQUMsWUFBRCxFQUFjLFVBQWQsRUFBMEIsUUFBMUIsQ0FBbUMsV0FBbkMsQ0FBTCxFQUFzRDtBQUNsRCxlQUFXLEdBQUcsVUFBZDtBQUNIOztBQUNELFNBQU8sb0VBRUg7QUFDQSxlQUFhLENBQUMsT0FBZCxJQUF5QixDQUF6QixHQUEyQixpQ0FBQywwQkFBRCxFQUFXLElBQVgsQ0FBM0IsR0FBeUMsSUFIdEMsRUFLUCxpQ0FBQyxxQkFBRCxFQUFTO0FBRUwsZUFBVyxFQUFLLFdBRlg7QUFHTCxhQUFTLEVBQUssVUFIVDtBQUlMLGNBQVUsRUFBSyxVQUpWO0FBS0wsT0FBRyxFQUFLLEdBTEg7QUFNTCxXQUFPLEVBQUssT0FOUDtBQU9MLGFBQVMsRUFBSyxTQVBUO0FBUUwsVUFBTSxFQUFLLE1BUk47QUFTTCxjQUFVLEVBQUksYUFBYSxDQUFDO0FBVHZCLEdBQVQsRUFZSSxpQ0FBQyx3QkFBRCxFQUFZO0FBRVIsWUFBUSxFQUFLLFFBRkw7QUFHUixhQUFTLEVBQUssU0FITjtBQUlSLGNBQVUsRUFBSyxVQUpQO0FBS1IsT0FBRyxFQUFLLEdBTEE7QUFNUixXQUFPLEVBQUssT0FOSjtBQU9SLGVBQVcsRUFBSyxXQVBSO0FBUVIsYUFBUyxFQUFLLFNBUk47QUFTUixVQUFNLEVBQUs7QUFUSCxHQUFaLEVBWUksaUNBQUMsbUJBQUQsRUFBTztBQUVILE9BQUcsRUFBSyxHQUZMO0FBR0gsV0FBTyxFQUFLLE9BSFQ7QUFJSCxhQUFTLEVBQUssU0FKWDtBQUtILGNBQVUsRUFBSyxVQUxaO0FBTUgsWUFBUSxFQUFLLFFBTlY7QUFPSCxlQUFXLEVBQUssV0FQYjtBQVFILGVBQVcsRUFBSyxXQVJiO0FBU0g7QUFDQSxXQUFPLEVBQUssT0FWVDtBQVdILGFBQVMsRUFBSyxTQVhYO0FBWUgsZUFBVyxFQUFLLFdBWmI7QUFhSCxVQUFNLEVBQUssTUFiUjtBQWNILGVBQVcsRUFBSyxNQWRiO0FBZUgsZ0JBQVksRUFBSSxZQWZiO0FBZ0JILGNBQVUsRUFBSSxhQUFhLENBQUM7QUFoQnpCLEdBQVAsQ0FaSixDQVpKLENBTE8sQ0FBUDtBQW1ESCxDQWpHRDs7QUFtR0EscUJBQWUsb0JBQWYiLCJmaWxlIjoiLi9zcmMvaW5maW5pdGVncmlkc2Nyb2xsZXIudHN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW5maW5pdGVncmlkc2Nyb2xsZXIudHN4XG4vLyBjb3B5cmlnaHQgKGMpIDIwMTkgSGVucmlrIEJlY2htYW5uLCBUb3JvbnRvLCBMaWNlbmNlOiBNSVRcblxuaW1wb3J0IFJlYWN0LCB7dXNlUmVmLCB1c2VNZW1vfSBmcm9tICdyZWFjdCdcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nXG5cbmltcG9ydCBWaWV3cG9ydCBmcm9tICcuL3ZpZXdwb3J0J1xuaW1wb3J0IFNjcm9sbGJsb2NrIGZyb20gJy4vc2Nyb2xsYmxvY2snXG5pbXBvcnQgQ3JhZGxlIGZyb20gJy4vY3JhZGxlJ1xuaW1wb3J0IHsgUG9ydGFsVHJlZSB9IGZyb20gJy4vcG9ydGFsbWFuYWdlcidcblxubGV0IHNjcm9sbGVySUQgPSAwXG5jb25zdCBnZXRTY3JvbGxlcklEID0gKCkgPT4ge1xuICAgIC8vIGNvbnNvbGUubG9nKCdmZXRjaGluZyBzY3JvbGxlcklEJywgc2Nyb2xsZXJJRClcbiAgICByZXR1cm4gc2Nyb2xsZXJJRCsrXG59XG4vKlxuICAgIEJBQ0tMT0c6IFxuICAgIC0gY2FjaGU6IG5vbmUvcHJlbG9hZC9rZWVwbG9hZFxuKi9cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1bIElOSVRJQUxJWkUgXT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vKlxuICAgIFRoZSBqb2Igb2YgSW5maW5pdGVHcmlkU2Nyb2xsZXIgaXMgdG8gcGFzcyBwYXJhbWV0ZXJzIHRvIGRlcGVuZGVudHMuXG4gICAgVmlld3BvcnQgY29udGFpbnMgdGhlIHNjcm9sbGJsb2NrLCB3aGljaCBpbiB0dXJuIGNvbnRhaW5zIHRoZSBjcmFkbGUgXG4gICAgICAgIC0gYSBjb21wb25lbnQgdGhhdCBjb250YWlucyBkaXNwbGF5ZWQgKG9yIG5lYXJseSBkaXNwbGF5ZWQpIGl0ZW1zLiBcbiAgICBUaGUgaXRlbXMgYXJlIHNrZWxldG9ucyB3aGljaCBjb250YWluIHRoZSBob3N0IGNvbnRlbnQgY29tcG9uZW50cy5cblxuICAgIFNjcm9sbGJsb2NrIHZpcnR1YWxseSByZXByZXNlbnRzIHRoZSBlbnRpcmV0eSBvZiB0aGUgbGlzdCwgYW5kIG9mIGNvdXJzZSBzY3JvbGxzXG4gICAgQ3JhZGxlIGNvbnRhaW5zIHRoZSBsaXN0IGl0ZW1zLCBhbmQgaXMgJ3ZpcnR1YWxpaXplZCcgLS0gaXQgYXBwZWFycyBhc1xuICAgICAgdGhvdWdoIGl0IGlzIHRoZSBmdWxsIHNjcm9sbGJsb2NrLCBidXQgaW4gZmFjdCBpdCBpcyBvbmx5IHNsaWdodGx5IGxhcmdlciB0aGFuXG4gICAgICB0aGUgdmlld3BvcnQuXG4gICAgLSBpbmRpdmlkdWFsIGl0ZW1zIGFyZSBmcmFtZWQgYnkgSXRlbVNoZWxsLCBtYW5hZ2VkIGJ5IENyYWRsZVxuXG4gICAgT3ZlcmFsbCB0aGUgaW5maW5pdGVncmlkc2Nyb2xsZXIgbWFuYWdlcyB0aGUgb2Z0ZW4gYXN5bmNocm9ub3VzIGludGVyYWN0aW9ucyBvZiB0aGUgXG4gICAgY29tcG9uZW50cyBvZiB0aGUgbWVjaGFuaXNtXG4qL1xuY29uc3QgSW5maW5pdGVHcmlkU2Nyb2xsZXIgPSAocHJvcHMpID0+IHtcbiAgICBsZXQgeyBcbiAgICAgICAgb3JpZW50YXRpb24sIC8vIHZlcnRpY2FsIG9yIGhvcml6b250YWxcbiAgICAgICAgZ2FwLCAvLyBzcGFjZSBiZXR3ZWVuIGdyaWQgY2VsbHMsIG5vdCBpbmNsdWRpbmcgdGhlIGxlYWRpbmcgYW5kIHRyYWlsaW5nIGVkZ2VzXG4gICAgICAgIHBhZGRpbmcsIC8vIHRoZSBzcGFjZSBiZXR3ZWVuIHRoZSBpdGVtcyBhbmQgdGhlIHZpZXdwb3J0LCBhcHBsaWVkIHRvIHRoZSBjcmFkbGVcbiAgICAgICAgY2VsbEhlaWdodCwgLy8gdGhlIG91dGVyIHBpeGVsIGhlaWdodCAtIGxpdGVyYWwgZm9yIHZlcnRpY2FsOyBhcHByb3hpbWF0ZSBmb3IgaG9yaXpvbnRhbFxuICAgICAgICBjZWxsV2lkdGgsIC8vIHRoZSBvdXRlciBwaXhlbCB3aWR0aCAtIGxpdGVyYWwgZm9yIGhvcml6b250YWw7IGFwcHJveGltYXRlIGZvciB2ZXJ0aWNhbFxuICAgICAgICBydW53YXksIC8vIHRoZSBudW1iZXIgb2YgaXRlbXMgb3V0c2lkZSB0aGUgdmlldyBvZiBlYWNoIHNpZGUgb2YgdGhlIHZpZXdwb3J0IFxuICAgICAgICAgICAgLy8gLS0gZ2l2ZXMgdGltZSB0byBhc3NlbWJsZSBiZWZvcmUgZGlzcGxheVxuICAgICAgICBsaXN0c2l6ZSwgLy8gdGhlIGV4YWN0IG51bWJlciBvZiB0aGUgc2l6ZSBvZiB0aGUgdmlydHVhbCBsaXN0XG4gICAgICAgIGluZGV4T2Zmc2V0LCAvLyB0aGUgMC1iYXNlZCBzdGFydGluZyBpbmRleCBvZiB0aGUgbGlzdCwgd2hlbiBmaXJzdCBsb2FkZWRcbiAgICAgICAgZ2V0SXRlbSwgLy8gZnVuY3Rpb24gcHJvdmlkZWQgYnkgaG9zdCAtIHBhcmFtZXRlciBpcyBpbmRleCBudW1iZXIsIHNldCBieSBzeXN0ZW07IHJldHVybiB2YWx1ZSBpcyBcbiAgICAgICAgICAgIC8vIGhvc3Qtc2VsZWN0ZWQgY29tcG9uZW50IG9yIHByb21pc2Ugb2YgYSBjb21wb25lbnRcbiAgICAgICAgZnVuY3Rpb25zLCAvLyBwcm9wZXJ0aWVzIHdpdGggZGlyZWN0IGFjY2VzcyB0byBzb21lIGNvbXBvbmVudCB1dGlsaXRlcywgb3B0aW9uYWxcbiAgICAgICAgcGxhY2Vob2xkZXIsIC8vIGEgc3BhcnNlIGNvbXBvbmVudCB0byBzdGFuZCBpbiBmb3IgY29udGVudCB1bnRpbCB0aGUgY29udGVudCBhcnJpdmVzOyBcbiAgICAgICAgICAgIC8vIG9wdGlvbmFsLCByZXBsYWNlcyBkZWZhdWx0XG4gICAgICAgIHN0eWxlcywgLy8gcGFzc2l2ZSBzdHlsZSBvdmVyLXJpZGVzIChlZy4gY29sb3IsIG9wYWNpdHkpIGZvciB2aWV3cG9ydCwgc2Nyb2xsYmxvY2ssIGNyYWRsZSwgb3Igc2Nyb2xsdHJhY2tlclxuICAgICAgICAvLyB0byBjb21lLi4uXG4gICAgICAgIC8vIGNhY2hlID0gXCJwcmVsb2FkXCIsIFwia2VlcGxvYWRcIiwgXCJub25lXCJcbiAgICAgICAgLy8gZGVuc2UsIC8vIGJvb2xlYW4gKG9ubHkgd2l0aCBwcmVsb2FkKVxuICAgICAgICBsYXlvdXQsIC8vIHVuaWZvcm0sIHZhcmlhYmxlXG4gICAgICAgIHNjcm9sbGVyTmFtZSwgLy8gZm9yIGRlYnVnZ2luZ1xuICAgIH0gPSBwcm9wc1xuXG4gICAgY29uc3QgZ2xvYmFsU2Nyb2xsZXJJRCA9IHVzZU1lbW8oKCk9PntcbiAgICAgICAgcmV0dXJuIGdldFNjcm9sbGVySUQoKVxuICAgIH0sW10pXG5cbiAgICBjb25zdCBzY3JvbGxlcklEUmVmID0gdXNlUmVmKGdsb2JhbFNjcm9sbGVySUQpXG5cbiAgICAvLyBjb25zb2xlLmxvZygnc2Nyb2xsZXJJRFJlZiwgc2Nyb2xsZXJJRCcsc2Nyb2xsZXJJRFJlZiwgc2Nyb2xsZXJJRClcblxuICAgIC8vIGRlZmF1bHRzXG4gICAgZnVuY3Rpb25zICE/PyAoZnVuY3Rpb25zID0ge30pXG4gICAgZ2FwICE/PyAoZ2FwID0gMClcbiAgICBwYWRkaW5nICE/PyAocGFkZGluZyA9IDApXG4gICAgcnVud2F5ICE/PyAocnVud2F5ID0gMylcbiAgICBpbmRleE9mZnNldCAhPz8gKGluZGV4T2Zmc2V0ID0gMClcbiAgICBsaXN0c2l6ZSAhPz8gKGxpc3RzaXplID0gMClcbiAgICBsYXlvdXQgIT8/IChsYXlvdXQgPSAndW5pZm9ybScpXG4gICAgLy8gY29uc3RyYWludHNcbiAgICBpbmRleE9mZnNldCA9IE1hdGgubWF4KDAsaW5kZXhPZmZzZXQpIC8vIG5vbi1uZWdhdGl2ZVxuICAgIGluZGV4T2Zmc2V0ID0gTWF0aC5taW4obGlzdHNpemUsIGluZGV4T2Zmc2V0KSAvLyBub3QgbGFyZ2VyIHRoYW4gbGlzdFxuICAgIGlmICghWydob3Jpem9udGFsJywndmVydGljYWwnXS5pbmNsdWRlcyhvcmllbnRhdGlvbikpIHtcbiAgICAgICAgb3JpZW50YXRpb24gPSAndmVydGljYWwnXG4gICAgfVxuICAgIHJldHVybiA8PlxuICAgIHtcbiAgICAgICAgLy8gYWN0aXZhdGUgcG9ydGFscyBieSBwbGFjaW5nIHRoZW0gaW4gUmVhY3QgVHJlZSBhdCByb290IHNjcm9sbGVyXG4gICAgICAgIHNjcm9sbGVySURSZWYuY3VycmVudCA9PSAwPzxQb3J0YWxUcmVlLz46bnVsbCBcbiAgICB9XG4gICAgPFZpZXdwb3J0IFxuXG4gICAgICAgIG9yaWVudGF0aW9uID0geyBvcmllbnRhdGlvbiB9IFxuICAgICAgICBjZWxsV2lkdGggPSB7IGNlbGxIZWlnaHQgfVxuICAgICAgICBjZWxsSGVpZ2h0ID0geyBjZWxsSGVpZ2h0IH1cbiAgICAgICAgZ2FwID0geyBnYXAgfVxuICAgICAgICBwYWRkaW5nID0geyBwYWRkaW5nIH1cbiAgICAgICAgZnVuY3Rpb25zID0geyBmdW5jdGlvbnMgfVxuICAgICAgICBzdHlsZXMgPSB7IHN0eWxlcyB9XG4gICAgICAgIHNjcm9sbGVySUQgPSB7c2Nyb2xsZXJJRFJlZi5jdXJyZW50fVxuICAgID5cbiAgICBcbiAgICAgICAgPFNjcm9sbGJsb2NrXG5cbiAgICAgICAgICAgIGxpc3RzaXplID0geyBsaXN0c2l6ZSB9XG4gICAgICAgICAgICBjZWxsV2lkdGggPSB7IGNlbGxXaWR0aCB9XG4gICAgICAgICAgICBjZWxsSGVpZ2h0ID0geyBjZWxsSGVpZ2h0IH1cbiAgICAgICAgICAgIGdhcCA9IHsgZ2FwfVxuICAgICAgICAgICAgcGFkZGluZyA9IHsgcGFkZGluZyB9XG4gICAgICAgICAgICBvcmllbnRhdGlvbiA9IHsgb3JpZW50YXRpb24gfVxuICAgICAgICAgICAgZnVuY3Rpb25zID0geyBmdW5jdGlvbnMgfVxuICAgICAgICAgICAgc3R5bGVzID0geyBzdHlsZXMgfVxuXG4gICAgICAgID5cbiAgICAgICAgICAgIDxDcmFkbGUgXG5cbiAgICAgICAgICAgICAgICBnYXAgPSB7IGdhcCB9XG4gICAgICAgICAgICAgICAgcGFkZGluZyA9IHsgcGFkZGluZyB9XG4gICAgICAgICAgICAgICAgY2VsbFdpZHRoID0geyBjZWxsV2lkdGggfVxuICAgICAgICAgICAgICAgIGNlbGxIZWlnaHQgPSB7IGNlbGxIZWlnaHQgfVxuICAgICAgICAgICAgICAgIGxpc3RzaXplID0geyBsaXN0c2l6ZSB9XG4gICAgICAgICAgICAgICAgaW5kZXhPZmZzZXQgPSB7IGluZGV4T2Zmc2V0IH1cbiAgICAgICAgICAgICAgICBvcmllbnRhdGlvbiA9IHsgb3JpZW50YXRpb24gfVxuICAgICAgICAgICAgICAgIC8vIHJ1bndheWxlbmd0aCA9IHsgcnVud2F5bGVuZ3RoIH0gXG4gICAgICAgICAgICAgICAgZ2V0SXRlbSA9IHsgZ2V0SXRlbSB9XG4gICAgICAgICAgICAgICAgZnVuY3Rpb25zID0geyBmdW5jdGlvbnMgfVxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyID0geyBwbGFjZWhvbGRlciB9XG4gICAgICAgICAgICAgICAgc3R5bGVzID0geyBzdHlsZXMgfVxuICAgICAgICAgICAgICAgIHJ1bndheWNvdW50ID0geyBydW53YXkgfVxuICAgICAgICAgICAgICAgIHNjcm9sbGVyTmFtZSA9IHtzY3JvbGxlck5hbWV9XG4gICAgICAgICAgICAgICAgc2Nyb2xsZXJJRCA9IHtzY3JvbGxlcklEUmVmLmN1cnJlbnR9XG5cbiAgICAgICAgICAgIC8+XG4gICAgICAgIDwvU2Nyb2xsYmxvY2s+XG4gICAgPC9WaWV3cG9ydD5cbiAgICA8Lz5cbn1cblxuZXhwb3J0IGRlZmF1bHQgSW5maW5pdGVHcmlkU2Nyb2xsZXJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/infinitegridscroller.tsx\n");

/***/ }),

/***/ "./src/itemshell.tsx":
/*!***************************!*\
  !*** ./src/itemshell.tsx ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" // itemframe.tsx\n// copyright (c) 2020 Henrik Bechmann, Toronto, Licence: MIT\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importStar(__webpack_require__(/*! react */ \"react\")); // import {requestIdleCallback, cancelIdleCallback} from 'requestidlecallback'\n\n\nvar react_is_mounted_hook_1 = __importDefault(__webpack_require__(/*! react-is-mounted-hook */ \"./node_modules/react-is-mounted-hook/lib/index.js\"));\n\nvar placeholder_1 = __importDefault(__webpack_require__(/*! ./placeholder */ \"./src/placeholder.tsx\"));\n\nvar portalmanager_1 = __webpack_require__(/*! ./portalmanager */ \"./src/portalmanager.tsx\");\n\nvar ItemShell = function ItemShell(_a) {\n  var orientation = _a.orientation,\n      cellHeight = _a.cellHeight,\n      cellWidth = _a.cellWidth,\n      index = _a.index,\n      observer = _a.observer,\n      callbacks = _a.callbacks,\n      getItem = _a.getItem,\n      listsize = _a.listsize,\n      placeholder = _a.placeholder,\n      instanceID = _a.instanceID,\n      scrollerName = _a.scrollerName,\n      scrollerID = _a.scrollerID;\n  var portalManager = react_1.useContext(portalmanager_1.PortalContext); // const linkedContentRef = useRef(false)\n  // const portalRef = useRef(null)\n\n  var _b = react_1.useState(null),\n      error = _b[0],\n      saveError = _b[1];\n\n  var _c = react_1.useState({\n    overflow: 'hidden'\n  }),\n      styles = _c[0],\n      saveStyles = _c[1];\n\n  var _d = react_1.useState('setup'),\n      itemstate = _d[0],\n      setItemstate = _d[1];\n\n  var shellRef = react_1.useRef(undefined);\n  var instanceIDRef = react_1.useRef(instanceID);\n  var isMounted = react_is_mounted_hook_1[\"default\"]();\n  var itemrequestRef = react_1.useRef(null);\n\n  var _e = react_1.useState(null),\n      content = _e[0],\n      saveContent = _e[1];\n\n  var _f = react_1.useState(false),\n      hasportal = _f[0],\n      saveHasPortal = _f[1]; // console.log('index itemstate', index, itemstate)\n  // initialize\n\n\n  react_1.useLayoutEffect(function () {\n    console.log('fetching item scrollerName-scrollerID:index', scrollerName, '-', scrollerID, index); // let requestidlecallback = window['requestIdleCallback']?window['requestIdleCallback']:requestIdleCallback\n    // let cancelidlecallback = window['cancelIdleCallback']?window['cancelIdleCallback']:cancelIdleCallback\n\n    if (portalManager.hasPortalListItem(scrollerID, index)) {\n      console.log('fetching PORTAL CACHE item');\n      var portalitem = portalManager.getPortalListItem(scrollerID, index);\n      console.log('saving cache usercontent', portalitem);\n      saveContent(portalitem.content);\n      return;\n    } else {\n      if (getItem) {\n        console.log('fetching NEW item (queue)'); // itemrequestRef.current = requestidlecallback(()=> {\n\n        var contentItem = getItem(index);\n\n        if (contentItem && contentItem.then) {\n          contentItem.then(function (usercontent) {\n            if (isMounted()) {\n              console.log('saving new usercontent by promise', scrollerName, scrollerID, index, usercontent);\n              saveContent(usercontent);\n              portalManager.createPortalListItem(scrollerID, index, usercontent);\n              saveError(null);\n            }\n          })[\"catch\"](function (e) {\n            if (isMounted()) {\n              saveContent(null);\n              saveError(e);\n            }\n          });\n        } else {\n          if (isMounted()) {\n            if (contentItem) {\n              var usercontent = contentItem;\n              console.log('saving new usercontent', scrollerName, scrollerID, index, usercontent);\n              saveContent(usercontent);\n              portalManager.createPortalListItem(scrollerID, index, usercontent);\n              saveError(null);\n            } else {\n              saveError(true);\n              saveContent(null);\n            }\n          }\n        } // },{timeout:50})\n\n      }\n    } // return () => {\n    //     let requesthandle = itemrequestRef.current\n    //     cancelidlecallback(requesthandle)\n    // }\n\n  }, []);\n  react_1.useEffect(function () {\n    if (itemstate == 'setup') {\n      setItemstate('ready');\n    }\n  }, [itemstate]); // initialize\n\n  react_1.useEffect(function () {\n    var localcalls = callbacks;\n    localcalls.getElementData && localcalls.getElementData(getElementData(), 'register');\n    return function () {\n      localcalls.getElementData && localcalls.getElementData(getElementData(), 'unregister');\n    };\n  }, [callbacks]);\n  var shellelement;\n  react_1.useEffect(function () {\n    // if (!shellRef.current) return\n    // console.log('shellRef.current',shellRef.current)\n    observer.observe(shellRef.current);\n    shellelement = shellRef.current;\n    return function () {// console.log('unobserving',shellRef.current)\n      // if (!shellRef.current) return // TODO: memory leak?\n      // console.log('unobserve',shellRef.current)\n      // observer.unobserve(shellRef.current)\n      // console.log('unobserving',shellelement)\n      // if (!shellelement) return // TODO: memory leak?\n      // console.log('unobserve',shellRef.current)\n      // observer.unobserve(shellelement)\n    };\n  }, [observer]);\n  react_1.useEffect(function () {\n    var newStyles = getShellStyles(orientation, cellHeight, cellWidth, styles); // isMounted = useIsMounted()\n\n    if (isMounted()) {\n      saveStyles(newStyles);\n    }\n  }, [orientation, cellHeight, cellWidth]); // cradle ondemand callback parameter value\n\n  var getElementData = react_1.useCallback(function () {\n    return [index, shellRef];\n  }, []); // placeholder handling\n\n  var customplaceholderRef = react_1.useRef(placeholder ? react_1[\"default\"].createElement(placeholder, {\n    index: index,\n    listsize: listsize\n  }) : null);\n  react_1.useLayoutEffect(function () {\n    if (!shellRef.current) return;\n    console.log('linking scrollerName, scrollerID, index, shellRef.current, content; ', scrollerName, scrollerID, index, shellRef.current, content);\n\n    if (content) {\n      observer.unobserve(shellRef.current);\n      portalManager.attachPortalListItem(scrollerID, index, shellRef.current);\n      console.log('setting hasportal true for scrollerID, index', scrollerID, index);\n      saveHasPortal(true); // return () => {\n      //     portalManager.detachPortalListItem(scrollerID,index)\n      // }\n    }\n  }, [shellRef.current, content]);\n  var placeholderchild = react_1.useMemo(function () {\n    var child = customplaceholderRef.current ? customplaceholderRef.current : react_1[\"default\"].createElement(placeholder_1[\"default\"], {\n      index: index,\n      listsize: listsize,\n      error: error\n    });\n    return child;\n  }, [index, content, customplaceholderRef.current, listsize, error]);\n  return react_1[\"default\"].createElement(\"div\", {\n    ref: shellRef,\n    \"data-index\": index,\n    \"data-instanceid\": instanceID,\n    style: styles\n  }, !content ? placeholderchild : null);\n}; // ItemShell\n// TODO: memoize this\n\n\nvar getShellStyles = function getShellStyles(orientation, cellHeight, cellWidth, styles) {\n  var styleset = Object.assign({\n    position: 'relative'\n  }, styles);\n\n  if (orientation == 'horizontal') {\n    styleset.width = cellWidth ? cellWidth + 'px' : 'auto';\n    styleset.height = 'auto';\n  } else if (orientation === 'vertical') {\n    styleset.width = 'auto';\n    styleset.height = cellHeight ? cellHeight + 'px' : 'auto';\n  }\n\n  return styleset;\n};\n\nexports[\"default\"] = ItemShell;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/itemshell.tsx\n");

/***/ }),

/***/ "./src/placeholder.tsx":
/*!*****************************!*\
  !*** ./src/placeholder.tsx ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" // placeholder.tsx\n// copyright (c) 2020 Henrik Bechmann, Toronto, Licence: MIT\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importStar(__webpack_require__(/*! react */ \"react\"));\n\nvar Placeholder = function Placeholder(_a) {\n  var index = _a.index,\n      listsize = _a.listsize,\n      error = _a.error;\n  var stylesRef = react_1.useRef({\n    position: 'relative',\n    boxSizing: 'border-box',\n    backgroundColor: 'cyan',\n    border: '2px solid black',\n    height: '100%',\n    width: '100%'\n  });\n  var itemStylesRef = react_1.useRef({\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    padding: '3px',\n    opacity: .5,\n    borderRadius: '8px',\n    backgroundColor: 'white',\n    margin: '3px',\n    fontSize: 'smaller'\n  });\n  return react_1[\"default\"].createElement(\"div\", {\n    style: stylesRef.current\n  }, !error ? react_1[\"default\"].createElement(\"div\", {\n    style: itemStylesRef.current\n  }, index + 1, \"/\", listsize) : react_1[\"default\"].createElement(\"div\", {\n    style: itemStylesRef.current\n  }, \"item is not available at this time\"));\n};\n\nexports[\"default\"] = Placeholder;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TY3JvbGxlci8uL3NyYy9wbGFjZWhvbGRlci50c3g/MTEzMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQ0FBQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUE7O0FBRUEsSUFBTSxXQUFXLEdBQUcsU0FBZCxXQUFjLENBQUMsRUFBRCxFQUF5QjtNQUF2QixLQUFLLFc7TUFBRSxRQUFRLGM7TUFBRSxLQUFLLFc7QUFFeEMsTUFBTSxTQUFTLEdBQUcsZUFBTztBQUNyQixZQUFRLEVBQUMsVUFEWTtBQUVyQixhQUFTLEVBQUMsWUFGVztBQUdyQixtQkFBZSxFQUFDLE1BSEs7QUFJckIsVUFBTSxFQUFDLGlCQUpjO0FBS3JCLFVBQU0sRUFBQyxNQUxjO0FBTXJCLFNBQUssRUFBQztBQU5lLEdBQVAsQ0FBbEI7QUFRQSxNQUFNLGFBQWEsR0FBRyxlQUNsQjtBQUNJLFlBQVEsRUFBQyxVQURiO0FBRUksT0FBRyxFQUFDLENBRlI7QUFHSSxRQUFJLEVBQUMsQ0FIVDtBQUlJLFdBQU8sRUFBQyxLQUpaO0FBS0ksV0FBTyxFQUFDLEVBTFo7QUFNSSxnQkFBWSxFQUFDLEtBTmpCO0FBT0ksbUJBQWUsRUFBQyxPQVBwQjtBQVFJLFVBQU0sRUFBQyxLQVJYO0FBU0ksWUFBUSxFQUFDO0FBVGIsR0FEa0IsQ0FBdEI7QUFjQSxTQUFPO0FBQUssU0FBSyxFQUFJLFNBQVMsQ0FBQztBQUF4QixLQUNELENBQUMsS0FBRCxHQUNFO0FBQUssU0FBSyxFQUFJLGFBQWEsQ0FBQztBQUE1QixLQUFzQyxLQUFLLEdBQUcsQ0FBOUMsRSxHQUFBLEVBQWtELFFBQWxELENBREYsR0FFRTtBQUFLLFNBQUssRUFBSSxhQUFhLENBQUM7QUFBNUIsS0FBbUMsb0NBQW5DLENBSEQsQ0FBUDtBQU9ILENBL0JEOztBQWlDQSxxQkFBZSxXQUFmIiwiZmlsZSI6Ii4vc3JjL3BsYWNlaG9sZGVyLnRzeC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHBsYWNlaG9sZGVyLnRzeFxuLy8gY29weXJpZ2h0IChjKSAyMDIwIEhlbnJpayBCZWNobWFubiwgVG9yb250bywgTGljZW5jZTogTUlUXG5cbmltcG9ydCBSZWFjdCwge3VzZVJlZiwgdXNlRWZmZWN0LCB1c2VTdGF0ZSwgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCdcblxuY29uc3QgUGxhY2Vob2xkZXIgPSAoe2luZGV4LCBsaXN0c2l6ZSwgZXJyb3J9KSA9PiB7XG5cbiAgICBjb25zdCBzdHlsZXNSZWYgPSB1c2VSZWYoe1xuICAgICAgICBwb3NpdGlvbjoncmVsYXRpdmUnLFxuICAgICAgICBib3hTaXppbmc6J2JvcmRlci1ib3gnLFxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6J2N5YW4nLFxuICAgICAgICBib3JkZXI6JzJweCBzb2xpZCBibGFjaycsXG4gICAgICAgIGhlaWdodDonMTAwJScsXG4gICAgICAgIHdpZHRoOicxMDAlJ1xuICAgIH0gYXMgUmVhY3QuQ1NTUHJvcGVydGllcylcbiAgICBjb25zdCBpdGVtU3R5bGVzUmVmID0gdXNlUmVmKFxuICAgICAgICB7XG4gICAgICAgICAgICBwb3NpdGlvbjonYWJzb2x1dGUnLFxuICAgICAgICAgICAgdG9wOjAsXG4gICAgICAgICAgICBsZWZ0OjAsXG4gICAgICAgICAgICBwYWRkaW5nOiczcHgnLFxuICAgICAgICAgICAgb3BhY2l0eTouNSxcbiAgICAgICAgICAgIGJvcmRlclJhZGl1czonOHB4JyxcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjond2hpdGUnLCBcbiAgICAgICAgICAgIG1hcmdpbjonM3B4JyxcbiAgICAgICAgICAgIGZvbnRTaXplOidzbWFsbGVyJyxcbiAgICAgICAgfSBhcyBSZWFjdC5DU1NQcm9wZXJ0aWVzXG4gICAgKVxuXG4gICAgcmV0dXJuIDxkaXYgc3R5bGUgPSB7c3R5bGVzUmVmLmN1cnJlbnR9PlxuICAgICAgICB7ICFlcnJvcj9cbiAgICAgICAgICAgIDxkaXYgc3R5bGUgPSB7aXRlbVN0eWxlc1JlZi5jdXJyZW50fT57aW5kZXggKyAxfS97bGlzdHNpemV9PC9kaXY+OlxuICAgICAgICAgICAgPGRpdiBzdHlsZSA9IHtpdGVtU3R5bGVzUmVmLmN1cnJlbnR9Pml0ZW0gaXMgbm90IGF2YWlsYWJsZSBhdCB0aGlzIHRpbWU8L2Rpdj5cbiAgICAgICAgfVxuICAgICAgICBcbiAgICA8L2Rpdj5cbn1cblxuZXhwb3J0IGRlZmF1bHQgUGxhY2Vob2xkZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/placeholder.tsx\n");

/***/ }),

/***/ "./src/portalmanager.tsx":
/*!*******************************!*\
  !*** ./src/portalmanager.tsx ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" // contentmanager.tsx\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PortalContext = exports.PortalTree = exports.maincachetrigger = void 0;\n\nvar react_1 = __importStar(__webpack_require__(/*! react */ \"react\"));\n\nvar react_dom_1 = __importDefault(__webpack_require__(/*! react-dom */ \"react-dom\"));\n\nvar scrollerPortalMetaMaps = new Map();\nvar scrollerPortalBlockMaps = new Map();\nexports.maincachetrigger = true;\nvar cacheSetTrigger;\nvar portalblockstyles = {\n  visibility: 'hidden'\n};\n\nvar PortalTree = function PortalTree() {\n  var _a = react_1.useState(exports.maincachetrigger),\n      cachetoggle = _a[0],\n      setCachetoggle = _a[1];\n\n  console.log('running PORTALTREE', cachetoggle);\n  var portalSets = [];\n  var portalKeys = [];\n  react_1.useEffect(function () {\n    cacheSetTrigger = setCachetoggle;\n  }, []);\n  scrollerPortalBlockMaps.forEach(function (block, key) {\n    if (block.modified) {\n      block.portalList = Array.from(block.portalMap.values());\n      block.modified = false;\n    }\n\n    portalSets.push(block.portalList);\n    portalKeys.push(key);\n  });\n  var index = 0;\n  var portalTreeBlocksList = [];\n\n  for (var _i = 0, portalKeys_1 = portalKeys; _i < portalKeys_1.length; _i++) {\n    var key = portalKeys_1[_i];\n    portalTreeBlocksList.push(react_1[\"default\"].createElement(\"div\", {\n      key: key\n    }, portalSets[index]));\n    index++;\n  }\n\n  return react_1[\"default\"].createElement(\"div\", {\n    key: 'portalblocks',\n    id: 'portalblocks',\n    style: portalblockstyles\n  }, portalTreeBlocksList);\n};\n\nexports.PortalTree = PortalTree;\n\nvar getPortal = function getPortal(content, container, index) {\n  // console.log('returning from getPortal')\n  return react_dom_1[\"default\"].createPortal(content, container, index);\n};\n\nvar PortalManager =\n/** @class */\nfunction () {\n  function PortalManager() {}\n\n  PortalManager.prototype.createScrollerPortalRepository = function (scrollerID) {\n    if (!scrollerPortalMetaMaps.has(scrollerID)) {\n      scrollerPortalMetaMaps.set(scrollerID, new Map());\n    }\n\n    if (!scrollerPortalBlockMaps.has(scrollerID)) {\n      scrollerPortalBlockMaps.set(scrollerID, {\n        modified: false,\n        portalMap: new Map(),\n        portalList: []\n      });\n    }\n  };\n\n  PortalManager.prototype.clearScrollerPortalRepository = function (scrollerID) {\n    if (scrollerPortalMetaMaps.has(scrollerID)) {\n      scrollerPortalMetaMaps.get(scrollerID).clear();\n    }\n\n    if (scrollerPortalBlockMaps.has(scrollerID)) {\n      scrollerPortalBlockMaps[\"delete\"](scrollerID);\n    }\n  };\n\n  PortalManager.prototype.resetScrollerPortalRepository = function (scrollerID) {\n    this.clearScrollerPortalRepository(scrollerID);\n    this.createScrollerPortalRepository(scrollerID);\n  };\n\n  PortalManager.prototype.deleteScrollerPortalRepository = function (scrollerID) {\n    scrollerPortalMetaMaps[\"delete\"](scrollerID);\n    scrollerPortalBlockMaps[\"delete\"](scrollerID);\n  };\n\n  PortalManager.prototype.createPortalListItem = function (scrollerID, index, usercontent) {\n    // console.log('setting item ScrollerID, index, content', scrollerID, index, content)\n    if (this.hasPortalListItem(scrollerID, index)) {\n      return this.getPortalListItem(scrollerID, index).portal;\n    }\n\n    var container = document.createElement('div'); // container.style.inset = '0px' // not recognized by React\n\n    container.style.top = '0px';\n    container.style.right = '0px';\n    container.style.left = '0px';\n    container.style.bottom = '0px';\n    container.style.position = 'absolute';\n    container.dataset.type = 'portalcontainer';\n    container.dataset.index = index;\n    container.dataset.scrollerid = scrollerID;\n    var portal = getPortal(usercontent, container, index); // portalList.push(<div key = {index}>{portal}</div>)\n\n    var scrollerportals = scrollerPortalBlockMaps.get(scrollerID);\n    scrollerportals.portalMap.set(index, portal);\n    scrollerportals.modified = true;\n    scrollerPortalMetaMaps.get(scrollerID).set(index, {\n      usercontent: usercontent,\n      target: null,\n      container: container,\n      portal: portal,\n      reparenting: false,\n      indexid: index,\n      scrollerid: scrollerID\n    });\n    exports.maincachetrigger = !exports.maincachetrigger;\n    cacheSetTrigger(exports.maincachetrigger);\n  };\n\n  PortalManager.prototype.deletePortalListItem = function (scrollerID, index) {\n    // let itemdata = portalLists.get(scrollerID).get(index)\n    scrollerPortalMetaMaps.get(scrollerID)[\"delete\"](index);\n    var portalitem = scrollerPortalBlockMaps.get(scrollerID);\n    portalitem.portalMap[\"delete\"](index);\n    portalitem.modified = true;\n    exports.maincachetrigger = !exports.maincachetrigger;\n    cacheSetTrigger(exports.maincachetrigger);\n  };\n\n  PortalManager.prototype.attachPortalListItem = function (scrollerID, index, target) {\n    var item = scrollerPortalMetaMaps.get(scrollerID).get(index); // console.log('item to be attached; scrollerID, index',item, scrollerID, index)\n\n    if (!item) return; // console.log('setting reparenting to true: scrollerID, index', scrollerID, index)\n\n    item.reparenting = true; // this.detachContentlistItem(scrollerID, index)\n\n    target.appendChild(item.container); // console.log('scrollerID, index, getBoundingClientRect',scrollerID, index, item.container.getBoundingClientRect())\n\n    item.target = target;\n    setTimeout(function () {\n      item.reparenting = false; // console.log('setting reparenting to false', scrollerID, index)\n    });\n  };\n\n  PortalManager.prototype.detachPortalListItem = function (scrollerID, index) {\n    var item = scrollerPortalMetaMaps.get(scrollerID).get(index);\n\n    if (item) {\n      // console.log('detach child item scrollerID, index',item, scrollerID, index)\n      if (item.target && item.container) {\n        try {\n          item.target.removeChild(item.container);\n        } catch (e) {// noop\n        }\n      }\n    }\n  };\n\n  PortalManager.prototype.hasPortalListItem = function (scrollerID, index) {\n    return scrollerPortalMetaMaps.get(scrollerID).has(index);\n  };\n\n  PortalManager.prototype.getPortalListItem = function (scrollerID, index) {\n    return scrollerPortalMetaMaps.get(scrollerID).get(index);\n  };\n\n  return PortalManager;\n}();\n\nvar portalManager = new PortalManager();\nexports.PortalContext = react_1[\"default\"].createContext(portalManager);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/portalmanager.tsx\n");

/***/ }),

/***/ "./src/scrollblock.tsx":
/*!*****************************!*\
  !*** ./src/scrollblock.tsx ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" // scrollblock.tsx\n// copyright (c) 2020 Henrik Bechmann, Toronto, Licence: MIT\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importStar(__webpack_require__(/*! react */ \"react\"));\n\nvar viewport_1 = __webpack_require__(/*! ./viewport */ \"./src/viewport.tsx\");\n\nvar Scrollblock = function Scrollblock(_a) {\n  var children = _a.children,\n      listsize = _a.listsize,\n      cellHeight = _a.cellHeight,\n      cellWidth = _a.cellWidth,\n      gap = _a.gap,\n      padding = _a.padding,\n      orientation = _a.orientation,\n      functions = _a.functions,\n      styles = _a.styles; // -------------------------[ context and state ]-------------------------\n\n  var viewportData = react_1.useContext(viewport_1.ViewportContext);\n\n  var _b = react_1.useState('prepare'),\n      blockstate = _b[0],\n      setBlockState = _b[1]; // -----------------------------------[ data heap ]-------------------------\n\n\n  var scrollBlockLengthRef = react_1.useRef(null);\n  var scrollblockRef = react_1.useRef(null);\n  var divlinerstyleRef = react_1.useRef(Object.assign({\n    backgroundColor: 'white',\n    position: 'relative'\n  }, styles === null || styles === void 0 ? void 0 : styles.cradle));\n\n  var _c = react_1.useState(divlinerstyleRef.current),\n      divlinerstyle = _c[0],\n      saveDivlinerstyle = _c[1]; // to trigger render\n\n\n  var viewportDimensions = viewportData.viewportDimensions,\n      itemobserver = viewportData.itemobserver,\n      isResizing = viewportData.isResizing;\n  var top = viewportDimensions.top,\n      right = viewportDimensions.right,\n      bottom = viewportDimensions.bottom,\n      left = viewportDimensions.left,\n      width = viewportDimensions.width,\n      height = viewportDimensions.height; // state engine\n\n  react_1.useEffect(function () {\n    switch (blockstate) {\n      case 'prepare':\n        {\n          setBlockState('render');\n          break;\n        }\n    }\n  }, [blockstate]);\n  react_1.useLayoutEffect(function () {\n    updateBlockLength();\n    divlinerstyleRef.current = updateScrollblockStyles(orientation, divlinerstyleRef, scrollBlockLengthRef);\n    saveDivlinerstyle(divlinerstyleRef.current);\n  }, [orientation, height, width, listsize, cellHeight, cellWidth, gap, padding]);\n  var updateBlockLength = react_1.useCallback(function () {\n    var scrollblocklength = calcScrollblockLength({\n      listsize: listsize,\n      cellHeight: cellHeight,\n      cellWidth: cellWidth,\n      gap: gap,\n      padding: padding,\n      orientation: orientation,\n      viewportheight: height,\n      viewportwidth: width\n    });\n    scrollBlockLengthRef.current = scrollblocklength;\n  }, [listsize, cellHeight, cellWidth, gap, padding, orientation, height, width]);\n  return blockstate != 'prepare' ? react_1[\"default\"].createElement(\"div\", {\n    ref: scrollblockRef,\n    style: divlinerstyleRef.current\n  }, children) : null;\n}; // Scrollblock\n// all the parameters affect the length\n\n\nvar calcScrollblockLength = function calcScrollblockLength(_a) {\n  var listsize = _a.listsize,\n      cellHeight = _a.cellHeight,\n      cellWidth = _a.cellWidth,\n      gap = _a.gap,\n      padding = _a.padding,\n      orientation = _a.orientation,\n      viewportheight = _a.viewportheight,\n      viewportwidth = _a.viewportwidth; // dependents of orientation\n\n  var crosslength;\n  var cellLength;\n  var viewportcrosslength;\n\n  if (orientation == 'vertical') {\n    crosslength = cellWidth + gap;\n    cellLength = cellHeight + gap;\n    viewportcrosslength = viewportwidth;\n  } else {\n    crosslength = cellHeight + gap;\n    cellLength = cellWidth + gap;\n    viewportcrosslength = viewportheight;\n  } // adjustments to viewportcrosslength\n\n\n  viewportcrosslength -= padding * 2;\n  viewportcrosslength += gap;\n  if (viewportcrosslength < crosslength) viewportcrosslength = crosslength; // must be at least one\n\n  var crosscount = Math.floor(viewportcrosslength / crosslength);\n  var listlength = Math.ceil(listsize / crosscount);\n  var straightlength = listlength * cellLength - (listlength > 0 ? gap : 0) + padding * 2;\n  return straightlength;\n};\n\nvar updateScrollblockStyles = function updateScrollblockStyles(orientation, stylesRef, scrollblocklengthRef) {\n  var localstyles = Object.assign({}, stylesRef.current);\n  var height;\n  var width;\n\n  if (orientation == 'horizontal') {\n    height = '100%';\n    width = scrollblocklengthRef.current + 'px';\n  } else if (orientation == 'vertical') {\n    height = scrollblocklengthRef.current + 'px';\n    width = '100%';\n  }\n\n  localstyles.height = height;\n  localstyles.width = width;\n  return localstyles;\n};\n\nexports[\"default\"] = Scrollblock;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scrollblock.tsx\n");

/***/ }),

/***/ "./src/scrolltracker.tsx":
/*!*******************************!*\
  !*** ./src/scrolltracker.tsx ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" // scrolltracker.tsx\n// copyright (c) 2020 Henrik Bechmann, Toronto, Licence: MIT\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importStar(__webpack_require__(/*! react */ \"react\"));\n\nvar ScrollTracker = function ScrollTracker(_a) {\n  var top = _a.top,\n      left = _a.left,\n      offset = _a.offset,\n      listsize = _a.listsize,\n      styles = _a.styles;\n  var trackdata = offset + 1 + \"/\" + listsize;\n  var styleRef = react_1.useRef(Object.assign({\n    top: top + 'px',\n    left: left + 'px',\n    position: 'fixed',\n    zIndex: 3,\n    backgroundColor: 'white',\n    border: '1px solid gray',\n    borderRadius: '10px',\n    fontSize: 'smaller',\n    padding: '3px'\n  }, styles === null || styles === void 0 ? void 0 : styles.scrolltracker));\n  return react_1[\"default\"].createElement(\"div\", {\n    \"data-name\": 'scrolltracker',\n    style: styleRef.current\n  }, trackdata);\n};\n\nexports[\"default\"] = ScrollTracker;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TY3JvbGxlci8uL3NyYy9zY3JvbGx0cmFja2VyLnRzeD9mZjgxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJDQUFBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQTs7QUFFQSxJQUFNLGFBQWEsR0FBRyxTQUFoQixhQUFnQixDQUFDLEVBQUQsRUFBd0M7TUFBckMsR0FBRyxTO01BQUUsSUFBSSxVO01BQUUsTUFBTSxZO01BQUUsUUFBUSxjO01BQUUsTUFBTSxZO0FBRXhELE1BQUksU0FBUyxHQUFNLE1BQU0sR0FBRyxDQUFULEdBQVUsR0FBVixHQUFjLFFBQWpDO0FBRUEsTUFBSSxRQUFRLEdBQUcsZUFBTyxNQUFNLENBQUMsTUFBUCxDQUFjO0FBQ2hDLE9BQUcsRUFBRSxHQUFHLEdBQUcsSUFEcUI7QUFFaEMsUUFBSSxFQUFFLElBQUksR0FBRyxJQUZtQjtBQUdoQyxZQUFRLEVBQUMsT0FIdUI7QUFJaEMsVUFBTSxFQUFDLENBSnlCO0FBS2hDLG1CQUFlLEVBQUMsT0FMZ0I7QUFNaEMsVUFBTSxFQUFFLGdCQU53QjtBQU9oQyxnQkFBWSxFQUFDLE1BUG1CO0FBUWhDLFlBQVEsRUFBQyxTQVJ1QjtBQVNoQyxXQUFPLEVBQUM7QUFUd0IsR0FBZCxFQVVHLE1BQU0sU0FBTixVQUFNLFdBQU4sR0FBTSxNQUFOLFNBQU0sQ0FBRSxhQVZYLENBQVAsQ0FBZjtBQVlBLFNBQU87QUFBQSxpQkFBaUIsZUFBakI7QUFBaUMsU0FBSyxFQUFJLFFBQVEsQ0FBQztBQUFuRCxLQUE4RCxTQUE5RCxDQUFQO0FBQ0gsQ0FqQkQ7O0FBbUJBLHFCQUFlLGFBQWYiLCJmaWxlIjoiLi9zcmMvc2Nyb2xsdHJhY2tlci50c3guanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzY3JvbGx0cmFja2VyLnRzeFxuLy8gY29weXJpZ2h0IChjKSAyMDIwIEhlbnJpayBCZWNobWFubiwgVG9yb250bywgTGljZW5jZTogTUlUXG5cbmltcG9ydCBSZWFjdCwge3VzZVJlZn0gZnJvbSAncmVhY3QnXG5cbmNvbnN0IFNjcm9sbFRyYWNrZXIgPSAoeyB0b3AsIGxlZnQsIG9mZnNldCwgbGlzdHNpemUsIHN0eWxlcyB9KSA9PiB7XG5cbiAgICBsZXQgdHJhY2tkYXRhID0gYCR7b2Zmc2V0ICsgMX0vJHtsaXN0c2l6ZX1gXG5cbiAgICBsZXQgc3R5bGVSZWYgPSB1c2VSZWYoT2JqZWN0LmFzc2lnbih7XG4gICAgICAgIHRvcDogdG9wICsgJ3B4JyxcbiAgICAgICAgbGVmdDogbGVmdCArICdweCcsXG4gICAgICAgIHBvc2l0aW9uOidmaXhlZCcsXG4gICAgICAgIHpJbmRleDozLFxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6J3doaXRlJyxcbiAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkIGdyYXknLFxuICAgICAgICBib3JkZXJSYWRpdXM6JzEwcHgnLFxuICAgICAgICBmb250U2l6ZTonc21hbGxlcicsXG4gICAgICAgIHBhZGRpbmc6JzNweCdcbiAgICB9IGFzIFJlYWN0LkNTU1Byb3BlcnRpZXMsc3R5bGVzPy5zY3JvbGx0cmFja2VyKSlcblxuICAgIHJldHVybiA8ZGl2IGRhdGEtbmFtZSA9ICdzY3JvbGx0cmFja2VyJyBzdHlsZSA9IHtzdHlsZVJlZi5jdXJyZW50fSA+e3RyYWNrZGF0YX08L2Rpdj5cbn1cblxuZXhwb3J0IGRlZmF1bHQgU2Nyb2xsVHJhY2tlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scrolltracker.tsx\n");

/***/ }),

/***/ "./src/viewport.tsx":
/*!**************************!*\
  !*** ./src/viewport.tsx ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" // viewport.tsx\n// copyright (c) 2020 Henrik Bechmann, Toronto, Licence: MIT\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ViewportContext = void 0;\n/*\n    The role of viewport is to provide data to its children (scrollblock and cradle),\n    and act as the visible portal of the list being shown\n*/\n\nvar react_1 = __importStar(__webpack_require__(/*! react */ \"react\"));\n\nexports.ViewportContext = react_1[\"default\"].createContext(null);\n\nvar react_is_mounted_hook_1 = __importDefault(__webpack_require__(/*! react-is-mounted-hook */ \"./node_modules/react-is-mounted-hook/lib/index.js\")); // import ResizeObserverPolyfill from 'resize-observer-polyfill'\n\n\nvar resize_observer_1 = __webpack_require__(/*! @juggle/resize-observer */ \"./node_modules/@juggle/resize-observer/lib/exports/resize-observer.js\");\n\nvar portalmanager_1 = __webpack_require__(/*! ./portalmanager */ \"./src/portalmanager.tsx\");\n\nvar LocalResizeObserver = window['ResizeObserver'] || resize_observer_1.ResizeObserver; // control constant\n\nvar RESIZE_TIMEOUT_FOR_ONAFTERSRESIZE = 250;\n\nvar Viewport = function Viewport(_a) {\n  // -----------------------[ initialize ]------------------\n  var children = _a.children,\n      orientation = _a.orientation,\n      cellWidth = _a.cellWidth,\n      cellHeight = _a.cellHeight,\n      gap = _a.gap,\n      padding = _a.padding,\n      functions = _a.functions,\n      styles = _a.styles,\n      scrollerID = _a.scrollerID; // processing state\n\n  var contentmanager = react_1.useContext(portalmanager_1.PortalContext);\n\n  var _b = react_1.useState('prepare'),\n      portstate = _b[0],\n      setPortState = _b[1];\n\n  var portstateRef = react_1.useRef(null);\n  portstateRef.current = portstate;\n  var isMounted = react_is_mounted_hook_1[\"default\"](); // data heap\n\n  var timeoutidRef = react_1.useRef(null);\n  var viewportdivRef = react_1.useRef(undefined);\n  var divlinerstyleRef = react_1.useRef(Object.assign({\n    position: 'absolute',\n    // height:'100%',\n    // width:'100%',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    overflow: 'auto',\n    // WebkitOverflowScrolling:'touch',\n    backgroundColor: 'red'\n  }, styles === null || styles === void 0 ? void 0 : styles.viewport));\n  var resizeTimeridRef = react_1.useRef(null);\n  var isResizingRef = react_1.useRef(false);\n  var viewportDataRef = react_1.useRef(null);\n  var resizeObserverRef = react_1.useRef(null);\n  var portalRef = react_1.useRef(null); // initialize\n\n  react_1.useEffect(function () {\n    resizeObserverRef.current = new LocalResizeObserver(resizeCallback);\n    resizeObserverRef.current.observe(viewportdivRef.current);\n    return function () {\n      resizeObserverRef.current.disconnect();\n    };\n  }, []);\n  react_1.useEffect(function () {\n    if (scrollerID == 0 || !viewportdivRef.current) return;\n    var parentscrollerid;\n    var parentindex;\n    var el = viewportdivRef.current;\n\n    while (el) {\n      // console.log('dataset',el.dataset, el)\n      if (el.dataset && el.dataset.type == 'portalcontainer') {\n        parentindex = parseInt(el.dataset.index);\n        parentscrollerid = parseInt(el.dataset.scrollerid);\n        break;\n      } else {\n        el = el.parentElement;\n      }\n    }\n\n    if (!el) {\n      console.log('ERROR: parent portalcontainer not found');\n      return;\n    }\n\n    portalRef.current = contentmanager.getPortalListItem(parentscrollerid, parentindex); // console.log('viewport of scrollerID has parentscrollerid and parentindex for portal', \n    //     scrollerID, parentscrollerid, parentindex,portalRef.current)\n    // portalIndexRef.current = el.dataset.index\n  }, [viewportdivRef.current]);\n  var resizeCallback = react_1.useCallback(function (entries) {\n    if (portstateRef.current == 'prepare') return; // console.log('checking portal reparenting',portalRef.current)\n\n    if (portalRef.current && portalRef.current.reparenting) {\n      // console.log('returning from viewport resizeCallback')\n      return;\n    }\n\n    var target = entries[0].target;\n\n    if (!target.dataset.initialized) {\n      target.dataset.initialized = true;\n      return;\n    }\n\n    if (!isResizingRef.current) {\n      isResizingRef.current = true; // below is a realtime message to cradle.onScroll\n      // to stop updating the referenceIndexData, and to the item observer to stop\n      // triggering responses (anticipating reset of cradle content based on resize)\n\n      viewportDataRef.current.isResizing = true; // isMounted = useIsMounted()\n\n      if (isMounted()) setPortState('resizing');\n    }\n\n    clearTimeout(resizeTimeridRef.current);\n    resizeTimeridRef.current = setTimeout(function () {\n      isResizingRef.current = false; // isMounted = useIsMounted()\n\n      if (isMounted()) setPortState('resize');\n    }, RESIZE_TIMEOUT_FOR_ONAFTERSRESIZE);\n  }, []); // ----------------------------------[ calculate ]--------------------------------\n  // calculated values\n\n  divlinerstyleRef.current = react_1.useMemo(function () {\n    var mincrosslength = calcMinViewportCrossLength(orientation, cellWidth, cellHeight, padding);\n\n    var styles = __assign({}, divlinerstyleRef.current);\n\n    if (orientation == 'vertical') {\n      styles.minWidth = mincrosslength + 'px';\n      styles.minHeight = 'auto';\n    } else {\n      styles.minWidth = 'auto';\n      styles.minHeight = mincrosslength + 'px';\n    }\n\n    return styles;\n  }, [orientation, cellWidth, cellHeight, padding]); // TODO: gap?\n\n  var viewportClientRect;\n\n  if (viewportdivRef.current) {\n    viewportClientRect = viewportdivRef.current.getBoundingClientRect();\n  } else {\n    viewportClientRect = {};\n  }\n\n  var top = viewportClientRect.top,\n      right = viewportClientRect.right,\n      bottom = viewportClientRect.bottom,\n      left = viewportClientRect.left; // set context data for children\n\n  viewportDataRef.current = react_1.useMemo(function () {\n    var width, height, localViewportData;\n\n    if (!(top === undefined)) {\n      //proxy\n      width = right - left;\n      height = bottom - top;\n      localViewportData = {\n        viewportDimensions: {\n          top: top,\n          right: right,\n          bottom: bottom,\n          left: left,\n          width: width,\n          height: height\n        },\n        elementref: viewportdivRef,\n        isResizing: isResizingRef.current\n      };\n    }\n\n    return localViewportData;\n  }, [orientation, top, right, bottom, left, isResizingRef.current]); // --------------------[ state processing ]---------------------------\n\n  react_1.useEffect(function () {\n    switch (portstate) {\n      case 'prepare':\n      case 'resize':\n        {\n          setPortState('render');\n          break;\n        }\n    }\n  }, [portstate]); // ----------------------[ render ]--------------------------------\n  // console.log('scrollerID, viewportDataRef.current',scrollerID, viewportDataRef.current)\n\n  return react_1[\"default\"].createElement(exports.ViewportContext.Provider, {\n    value: viewportDataRef.current\n  }, react_1[\"default\"].createElement(\"div\", {\n    \"data-type\": 'viewport',\n    \"data-masterscrollerid\": scrollerID,\n    style: divlinerstyleRef.current,\n    ref: viewportdivRef\n  }, portstate != 'prepare' ? children : null));\n}; // Viewport\n// establish minimum width/height for the viewport -- approximately one item\n\n\nvar calcMinViewportCrossLength = function calcMinViewportCrossLength(orientation, cellWidth, cellHeight, padding) {\n  var crosslength, cellLength;\n\n  if (orientation == 'vertical') {\n    cellLength = cellWidth;\n  } else {\n    cellLength = cellHeight;\n  }\n\n  crosslength = cellLength + padding * 2;\n  return crosslength;\n};\n\nexports[\"default\"] = Viewport;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/viewport.tsx\n");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_react__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TY3JvbGxlci9leHRlcm5hbCBcInJlYWN0XCI/NTg4ZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiJyZWFjdC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV9yZWFjdF9fOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///react\n");

/***/ }),

/***/ "react-dom":
/*!****************************!*\
  !*** external "react-dom" ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_react_dom__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TY3JvbGxlci9leHRlcm5hbCBcInJlYWN0LWRvbVwiPzVlOWEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoicmVhY3QtZG9tLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX3JlYWN0X2RvbV9fOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///react-dom\n");

/***/ })

/******/ });
});