/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"), require("react-dom"));
	else if(typeof define === 'function' && define.amd)
		define(["react", "react-dom"], factory);
	else if(typeof exports === 'object')
		exports["react-infinite-grid-scroller"] = factory(require("react"), require("react-dom"));
	else
		root["react-infinite-grid-scroller"] = factory(root["react"], root["react-dom"]);
})(self, (__WEBPACK_EXTERNAL_MODULE_react__, __WEBPACK_EXTERNAL_MODULE_react_dom__) => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DOMRectReadOnly\": () => (/* binding */ DOMRectReadOnly)\n/* harmony export */ });\n/* harmony import */ var _utils_freeze__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/freeze */ \"./node_modules/@juggle/resize-observer/lib/utils/freeze.js\");\n\nvar DOMRectReadOnly = (function () {\n    function DOMRectReadOnly(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.top = this.y;\n        this.left = this.x;\n        this.bottom = this.top + this.height;\n        this.right = this.left + this.width;\n        return (0,_utils_freeze__WEBPACK_IMPORTED_MODULE_0__.freeze)(this);\n    }\n    DOMRectReadOnly.prototype.toJSON = function () {\n        var _a = this, x = _a.x, y = _a.y, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left, width = _a.width, height = _a.height;\n        return { x: x, y: y, top: top, right: right, bottom: bottom, left: left, width: width, height: height };\n    };\n    DOMRectReadOnly.fromRect = function (rectangle) {\n        return new DOMRectReadOnly(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n    };\n    return DOMRectReadOnly;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL0RPTVJlY3RSZWFkT25seS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUscURBQU07QUFDckI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQzBCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtaW5maW5pdGUtZ3JpZC1zY3JvbGxlci8uL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvRE9NUmVjdFJlYWRPbmx5LmpzP2ZkZDQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZnJlZXplIH0gZnJvbSAnLi91dGlscy9mcmVlemUnO1xudmFyIERPTVJlY3RSZWFkT25seSA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gRE9NUmVjdFJlYWRPbmx5KHgsIHksIHdpZHRoLCBoZWlnaHQpIHtcbiAgICAgICAgdGhpcy54ID0geDtcbiAgICAgICAgdGhpcy55ID0geTtcbiAgICAgICAgdGhpcy53aWR0aCA9IHdpZHRoO1xuICAgICAgICB0aGlzLmhlaWdodCA9IGhlaWdodDtcbiAgICAgICAgdGhpcy50b3AgPSB0aGlzLnk7XG4gICAgICAgIHRoaXMubGVmdCA9IHRoaXMueDtcbiAgICAgICAgdGhpcy5ib3R0b20gPSB0aGlzLnRvcCArIHRoaXMuaGVpZ2h0O1xuICAgICAgICB0aGlzLnJpZ2h0ID0gdGhpcy5sZWZ0ICsgdGhpcy53aWR0aDtcbiAgICAgICAgcmV0dXJuIGZyZWV6ZSh0aGlzKTtcbiAgICB9XG4gICAgRE9NUmVjdFJlYWRPbmx5LnByb3RvdHlwZS50b0pTT04gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfYSA9IHRoaXMsIHggPSBfYS54LCB5ID0gX2EueSwgdG9wID0gX2EudG9wLCByaWdodCA9IF9hLnJpZ2h0LCBib3R0b20gPSBfYS5ib3R0b20sIGxlZnQgPSBfYS5sZWZ0LCB3aWR0aCA9IF9hLndpZHRoLCBoZWlnaHQgPSBfYS5oZWlnaHQ7XG4gICAgICAgIHJldHVybiB7IHg6IHgsIHk6IHksIHRvcDogdG9wLCByaWdodDogcmlnaHQsIGJvdHRvbTogYm90dG9tLCBsZWZ0OiBsZWZ0LCB3aWR0aDogd2lkdGgsIGhlaWdodDogaGVpZ2h0IH07XG4gICAgfTtcbiAgICBET01SZWN0UmVhZE9ubHkuZnJvbVJlY3QgPSBmdW5jdGlvbiAocmVjdGFuZ2xlKSB7XG4gICAgICAgIHJldHVybiBuZXcgRE9NUmVjdFJlYWRPbmx5KHJlY3RhbmdsZS54LCByZWN0YW5nbGUueSwgcmVjdGFuZ2xlLndpZHRoLCByZWN0YW5nbGUuaGVpZ2h0KTtcbiAgICB9O1xuICAgIHJldHVybiBET01SZWN0UmVhZE9ubHk7XG59KCkpO1xuZXhwb3J0IHsgRE9NUmVjdFJlYWRPbmx5IH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/ResizeObservation.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/ResizeObservation.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ResizeObservation\": () => (/* binding */ ResizeObservation)\n/* harmony export */ });\n/* harmony import */ var _ResizeObserverBoxOptions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ResizeObserverBoxOptions */ \"./node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js\");\n/* harmony import */ var _algorithms_calculateBoxSize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./algorithms/calculateBoxSize */ \"./node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js\");\n/* harmony import */ var _utils_element__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/element */ \"./node_modules/@juggle/resize-observer/lib/utils/element.js\");\n\n\n\nvar skipNotifyOnElement = function (target) {\n    return !(0,_utils_element__WEBPACK_IMPORTED_MODULE_2__.isSVG)(target)\n        && !(0,_utils_element__WEBPACK_IMPORTED_MODULE_2__.isReplacedElement)(target)\n        && getComputedStyle(target).display === 'inline';\n};\nvar ResizeObservation = (function () {\n    function ResizeObservation(target, observedBox) {\n        this.target = target;\n        this.observedBox = observedBox || _ResizeObserverBoxOptions__WEBPACK_IMPORTED_MODULE_0__.ResizeObserverBoxOptions.CONTENT_BOX;\n        this.lastReportedSize = {\n            inlineSize: 0,\n            blockSize: 0\n        };\n    }\n    ResizeObservation.prototype.isActive = function () {\n        var size = (0,_algorithms_calculateBoxSize__WEBPACK_IMPORTED_MODULE_1__.calculateBoxSize)(this.target, this.observedBox, true);\n        if (skipNotifyOnElement(this.target)) {\n            this.lastReportedSize = size;\n        }\n        if (this.lastReportedSize.inlineSize !== size.inlineSize\n            || this.lastReportedSize.blockSize !== size.blockSize) {\n            return true;\n        }\n        return false;\n    };\n    return ResizeObservation;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL1Jlc2l6ZU9ic2VydmF0aW9uLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBc0U7QUFDTDtBQUNOO0FBQzNEO0FBQ0EsWUFBWSxxREFBSztBQUNqQixZQUFZLGlFQUFpQjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLDJGQUFvQztBQUM5RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsOEVBQWdCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUM0QiIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0LWluZmluaXRlLWdyaWQtc2Nyb2xsZXIvLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL1Jlc2l6ZU9ic2VydmF0aW9uLmpzPzQ0YzkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVzaXplT2JzZXJ2ZXJCb3hPcHRpb25zIH0gZnJvbSAnLi9SZXNpemVPYnNlcnZlckJveE9wdGlvbnMnO1xuaW1wb3J0IHsgY2FsY3VsYXRlQm94U2l6ZSB9IGZyb20gJy4vYWxnb3JpdGhtcy9jYWxjdWxhdGVCb3hTaXplJztcbmltcG9ydCB7IGlzU1ZHLCBpc1JlcGxhY2VkRWxlbWVudCB9IGZyb20gJy4vdXRpbHMvZWxlbWVudCc7XG52YXIgc2tpcE5vdGlmeU9uRWxlbWVudCA9IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICByZXR1cm4gIWlzU1ZHKHRhcmdldClcbiAgICAgICAgJiYgIWlzUmVwbGFjZWRFbGVtZW50KHRhcmdldClcbiAgICAgICAgJiYgZ2V0Q29tcHV0ZWRTdHlsZSh0YXJnZXQpLmRpc3BsYXkgPT09ICdpbmxpbmUnO1xufTtcbnZhciBSZXNpemVPYnNlcnZhdGlvbiA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gUmVzaXplT2JzZXJ2YXRpb24odGFyZ2V0LCBvYnNlcnZlZEJveCkge1xuICAgICAgICB0aGlzLnRhcmdldCA9IHRhcmdldDtcbiAgICAgICAgdGhpcy5vYnNlcnZlZEJveCA9IG9ic2VydmVkQm94IHx8IFJlc2l6ZU9ic2VydmVyQm94T3B0aW9ucy5DT05URU5UX0JPWDtcbiAgICAgICAgdGhpcy5sYXN0UmVwb3J0ZWRTaXplID0ge1xuICAgICAgICAgICAgaW5saW5lU2l6ZTogMCxcbiAgICAgICAgICAgIGJsb2NrU2l6ZTogMFxuICAgICAgICB9O1xuICAgIH1cbiAgICBSZXNpemVPYnNlcnZhdGlvbi5wcm90b3R5cGUuaXNBY3RpdmUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBzaXplID0gY2FsY3VsYXRlQm94U2l6ZSh0aGlzLnRhcmdldCwgdGhpcy5vYnNlcnZlZEJveCwgdHJ1ZSk7XG4gICAgICAgIGlmIChza2lwTm90aWZ5T25FbGVtZW50KHRoaXMudGFyZ2V0KSkge1xuICAgICAgICAgICAgdGhpcy5sYXN0UmVwb3J0ZWRTaXplID0gc2l6ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5sYXN0UmVwb3J0ZWRTaXplLmlubGluZVNpemUgIT09IHNpemUuaW5saW5lU2l6ZVxuICAgICAgICAgICAgfHwgdGhpcy5sYXN0UmVwb3J0ZWRTaXplLmJsb2NrU2l6ZSAhPT0gc2l6ZS5ibG9ja1NpemUpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9O1xuICAgIHJldHVybiBSZXNpemVPYnNlcnZhdGlvbjtcbn0oKSk7XG5leHBvcnQgeyBSZXNpemVPYnNlcnZhdGlvbiB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/ResizeObservation.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/ResizeObserver.js":
/*!********************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/ResizeObserver.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ResizeObserver\": () => (/* binding */ ResizeObserver)\n/* harmony export */ });\n/* harmony import */ var _ResizeObserverController__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ResizeObserverController */ \"./node_modules/@juggle/resize-observer/lib/ResizeObserverController.js\");\n/* harmony import */ var _utils_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/element */ \"./node_modules/@juggle/resize-observer/lib/utils/element.js\");\n\n\nvar ResizeObserver = (function () {\n    function ResizeObserver(callback) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (typeof callback !== 'function') {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\");\n        }\n        _ResizeObserverController__WEBPACK_IMPORTED_MODULE_0__.ResizeObserverController.connect(this, callback);\n    }\n    ResizeObserver.prototype.observe = function (target, options) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!(0,_utils_element__WEBPACK_IMPORTED_MODULE_1__.isElement)(target)) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        _ResizeObserverController__WEBPACK_IMPORTED_MODULE_0__.ResizeObserverController.observe(this, target, options);\n    };\n    ResizeObserver.prototype.unobserve = function (target) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!(0,_utils_element__WEBPACK_IMPORTED_MODULE_1__.isElement)(target)) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        _ResizeObserverController__WEBPACK_IMPORTED_MODULE_0__.ResizeObserverController.unobserve(this, target);\n    };\n    ResizeObserver.prototype.disconnect = function () {\n        _ResizeObserverController__WEBPACK_IMPORTED_MODULE_0__.ResizeObserverController.disconnect(this);\n    };\n    ResizeObserver.toString = function () {\n        return 'function ResizeObserver () { [polyfill code] }';\n    };\n    return ResizeObserver;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL1Jlc2l6ZU9ic2VydmVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFzRTtBQUMxQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1RkFBZ0M7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEseURBQVM7QUFDdEI7QUFDQTtBQUNBLFFBQVEsdUZBQWdDO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHlEQUFTO0FBQ3RCO0FBQ0E7QUFDQSxRQUFRLHlGQUFrQztBQUMxQztBQUNBO0FBQ0EsUUFBUSwwRkFBbUM7QUFDM0M7QUFDQTtBQUNBLDZDQUE2QyxpQkFBaUI7QUFDOUQ7QUFDQTtBQUNBLENBQUM7QUFDeUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFjdC1pbmZpbml0ZS1ncmlkLXNjcm9sbGVyLy4vbm9kZV9tb2R1bGVzL0BqdWdnbGUvcmVzaXplLW9ic2VydmVyL2xpYi9SZXNpemVPYnNlcnZlci5qcz9kMDIwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlc2l6ZU9ic2VydmVyQ29udHJvbGxlciB9IGZyb20gJy4vUmVzaXplT2JzZXJ2ZXJDb250cm9sbGVyJztcbmltcG9ydCB7IGlzRWxlbWVudCB9IGZyb20gJy4vdXRpbHMvZWxlbWVudCc7XG52YXIgUmVzaXplT2JzZXJ2ZXIgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFJlc2l6ZU9ic2VydmVyKGNhbGxiYWNrKSB7XG4gICAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiRmFpbGVkIHRvIGNvbnN0cnVjdCAnUmVzaXplT2JzZXJ2ZXInOiAxIGFyZ3VtZW50IHJlcXVpcmVkLCBidXQgb25seSAwIHByZXNlbnQuXCIpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2YgY2FsbGJhY2sgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJGYWlsZWQgdG8gY29uc3RydWN0ICdSZXNpemVPYnNlcnZlcic6IFRoZSBjYWxsYmFjayBwcm92aWRlZCBhcyBwYXJhbWV0ZXIgMSBpcyBub3QgYSBmdW5jdGlvbi5cIik7XG4gICAgICAgIH1cbiAgICAgICAgUmVzaXplT2JzZXJ2ZXJDb250cm9sbGVyLmNvbm5lY3QodGhpcywgY2FsbGJhY2spO1xuICAgIH1cbiAgICBSZXNpemVPYnNlcnZlci5wcm90b3R5cGUub2JzZXJ2ZSA9IGZ1bmN0aW9uICh0YXJnZXQsIG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJGYWlsZWQgdG8gZXhlY3V0ZSAnb2JzZXJ2ZScgb24gJ1Jlc2l6ZU9ic2VydmVyJzogMSBhcmd1bWVudCByZXF1aXJlZCwgYnV0IG9ubHkgMCBwcmVzZW50LlwiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWlzRWxlbWVudCh0YXJnZXQpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiRmFpbGVkIHRvIGV4ZWN1dGUgJ29ic2VydmUnIG9uICdSZXNpemVPYnNlcnZlcic6IHBhcmFtZXRlciAxIGlzIG5vdCBvZiB0eXBlICdFbGVtZW50XCIpO1xuICAgICAgICB9XG4gICAgICAgIFJlc2l6ZU9ic2VydmVyQ29udHJvbGxlci5vYnNlcnZlKHRoaXMsIHRhcmdldCwgb3B0aW9ucyk7XG4gICAgfTtcbiAgICBSZXNpemVPYnNlcnZlci5wcm90b3R5cGUudW5vYnNlcnZlID0gZnVuY3Rpb24gKHRhcmdldCkge1xuICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkZhaWxlZCB0byBleGVjdXRlICd1bm9ic2VydmUnIG9uICdSZXNpemVPYnNlcnZlcic6IDEgYXJndW1lbnQgcmVxdWlyZWQsIGJ1dCBvbmx5IDAgcHJlc2VudC5cIik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFpc0VsZW1lbnQodGFyZ2V0KSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkZhaWxlZCB0byBleGVjdXRlICd1bm9ic2VydmUnIG9uICdSZXNpemVPYnNlcnZlcic6IHBhcmFtZXRlciAxIGlzIG5vdCBvZiB0eXBlICdFbGVtZW50XCIpO1xuICAgICAgICB9XG4gICAgICAgIFJlc2l6ZU9ic2VydmVyQ29udHJvbGxlci51bm9ic2VydmUodGhpcywgdGFyZ2V0KTtcbiAgICB9O1xuICAgIFJlc2l6ZU9ic2VydmVyLnByb3RvdHlwZS5kaXNjb25uZWN0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBSZXNpemVPYnNlcnZlckNvbnRyb2xsZXIuZGlzY29ubmVjdCh0aGlzKTtcbiAgICB9O1xuICAgIFJlc2l6ZU9ic2VydmVyLnRvU3RyaW5nID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gJ2Z1bmN0aW9uIFJlc2l6ZU9ic2VydmVyICgpIHsgW3BvbHlmaWxsIGNvZGVdIH0nO1xuICAgIH07XG4gICAgcmV0dXJuIFJlc2l6ZU9ic2VydmVyO1xufSgpKTtcbmV4cG9ydCB7IFJlc2l6ZU9ic2VydmVyIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/ResizeObserver.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ResizeObserverBoxOptions\": () => (/* binding */ ResizeObserverBoxOptions)\n/* harmony export */ });\nvar ResizeObserverBoxOptions;\n(function (ResizeObserverBoxOptions) {\n    ResizeObserverBoxOptions[\"BORDER_BOX\"] = \"border-box\";\n    ResizeObserverBoxOptions[\"CONTENT_BOX\"] = \"content-box\";\n    ResizeObserverBoxOptions[\"DEVICE_PIXEL_CONTENT_BOX\"] = \"device-pixel-content-box\";\n})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL1Jlc2l6ZU9ic2VydmVyQm94T3B0aW9ucy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNERBQTREO0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtaW5maW5pdGUtZ3JpZC1zY3JvbGxlci8uL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvUmVzaXplT2JzZXJ2ZXJCb3hPcHRpb25zLmpzP2U1NTYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIFJlc2l6ZU9ic2VydmVyQm94T3B0aW9ucztcbihmdW5jdGlvbiAoUmVzaXplT2JzZXJ2ZXJCb3hPcHRpb25zKSB7XG4gICAgUmVzaXplT2JzZXJ2ZXJCb3hPcHRpb25zW1wiQk9SREVSX0JPWFwiXSA9IFwiYm9yZGVyLWJveFwiO1xuICAgIFJlc2l6ZU9ic2VydmVyQm94T3B0aW9uc1tcIkNPTlRFTlRfQk9YXCJdID0gXCJjb250ZW50LWJveFwiO1xuICAgIFJlc2l6ZU9ic2VydmVyQm94T3B0aW9uc1tcIkRFVklDRV9QSVhFTF9DT05URU5UX0JPWFwiXSA9IFwiZGV2aWNlLXBpeGVsLWNvbnRlbnQtYm94XCI7XG59KShSZXNpemVPYnNlcnZlckJveE9wdGlvbnMgfHwgKFJlc2l6ZU9ic2VydmVyQm94T3B0aW9ucyA9IHt9KSk7XG5leHBvcnQgeyBSZXNpemVPYnNlcnZlckJveE9wdGlvbnMgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/ResizeObserverController.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/ResizeObserverController.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ResizeObserverController\": () => (/* binding */ ResizeObserverController)\n/* harmony export */ });\n/* harmony import */ var _utils_scheduler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/scheduler */ \"./node_modules/@juggle/resize-observer/lib/utils/scheduler.js\");\n/* harmony import */ var _ResizeObservation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ResizeObservation */ \"./node_modules/@juggle/resize-observer/lib/ResizeObservation.js\");\n/* harmony import */ var _ResizeObserverDetail__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ResizeObserverDetail */ \"./node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js\");\n/* harmony import */ var _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/resizeObservers */ \"./node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js\");\n\n\n\n\nvar observerMap = new WeakMap();\nvar getObservationIndex = function (observationTargets, target) {\n    for (var i = 0; i < observationTargets.length; i += 1) {\n        if (observationTargets[i].target === target) {\n            return i;\n        }\n    }\n    return -1;\n};\nvar ResizeObserverController = (function () {\n    function ResizeObserverController() {\n    }\n    ResizeObserverController.connect = function (resizeObserver, callback) {\n        var detail = new _ResizeObserverDetail__WEBPACK_IMPORTED_MODULE_2__.ResizeObserverDetail(resizeObserver, callback);\n        observerMap.set(resizeObserver, detail);\n    };\n    ResizeObserverController.observe = function (resizeObserver, target, options) {\n        var detail = observerMap.get(resizeObserver);\n        var firstObservation = detail.observationTargets.length === 0;\n        if (getObservationIndex(detail.observationTargets, target) < 0) {\n            firstObservation && _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_3__.resizeObservers.push(detail);\n            detail.observationTargets.push(new _ResizeObservation__WEBPACK_IMPORTED_MODULE_1__.ResizeObservation(target, options && options.box));\n            (0,_utils_scheduler__WEBPACK_IMPORTED_MODULE_0__.updateCount)(1);\n            _utils_scheduler__WEBPACK_IMPORTED_MODULE_0__.scheduler.schedule();\n        }\n    };\n    ResizeObserverController.unobserve = function (resizeObserver, target) {\n        var detail = observerMap.get(resizeObserver);\n        var index = getObservationIndex(detail.observationTargets, target);\n        var lastObservation = detail.observationTargets.length === 1;\n        if (index >= 0) {\n            lastObservation && _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_3__.resizeObservers.splice(_utils_resizeObservers__WEBPACK_IMPORTED_MODULE_3__.resizeObservers.indexOf(detail), 1);\n            detail.observationTargets.splice(index, 1);\n            (0,_utils_scheduler__WEBPACK_IMPORTED_MODULE_0__.updateCount)(-1);\n        }\n    };\n    ResizeObserverController.disconnect = function (resizeObserver) {\n        var _this = this;\n        var detail = observerMap.get(resizeObserver);\n        detail.observationTargets.slice().forEach(function (ot) { return _this.unobserve(resizeObserver, ot.target); });\n        detail.activeTargets.splice(0, detail.activeTargets.length);\n    };\n    return ResizeObserverController;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL1Jlc2l6ZU9ic2VydmVyQ29udHJvbGxlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUEyRDtBQUNIO0FBQ007QUFDSjtBQUMxRDtBQUNBO0FBQ0Esb0JBQW9CLCtCQUErQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qix1RUFBb0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLHdFQUFvQjtBQUNwRCwrQ0FBK0MsaUVBQWlCO0FBQ2hFLFlBQVksNkRBQVc7QUFDdkIsWUFBWSxnRUFBa0I7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsMEVBQXNCLENBQUMsMkVBQXVCO0FBQzdFO0FBQ0EsWUFBWSw2REFBVztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0VBQWtFLG9EQUFvRDtBQUN0SDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ21DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtaW5maW5pdGUtZ3JpZC1zY3JvbGxlci8uL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvUmVzaXplT2JzZXJ2ZXJDb250cm9sbGVyLmpzP2YzNzkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2NoZWR1bGVyLCB1cGRhdGVDb3VudCB9IGZyb20gJy4vdXRpbHMvc2NoZWR1bGVyJztcbmltcG9ydCB7IFJlc2l6ZU9ic2VydmF0aW9uIH0gZnJvbSAnLi9SZXNpemVPYnNlcnZhdGlvbic7XG5pbXBvcnQgeyBSZXNpemVPYnNlcnZlckRldGFpbCB9IGZyb20gJy4vUmVzaXplT2JzZXJ2ZXJEZXRhaWwnO1xuaW1wb3J0IHsgcmVzaXplT2JzZXJ2ZXJzIH0gZnJvbSAnLi91dGlscy9yZXNpemVPYnNlcnZlcnMnO1xudmFyIG9ic2VydmVyTWFwID0gbmV3IFdlYWtNYXAoKTtcbnZhciBnZXRPYnNlcnZhdGlvbkluZGV4ID0gZnVuY3Rpb24gKG9ic2VydmF0aW9uVGFyZ2V0cywgdGFyZ2V0KSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBvYnNlcnZhdGlvblRhcmdldHMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgaWYgKG9ic2VydmF0aW9uVGFyZ2V0c1tpXS50YXJnZXQgPT09IHRhcmdldCkge1xuICAgICAgICAgICAgcmV0dXJuIGk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIC0xO1xufTtcbnZhciBSZXNpemVPYnNlcnZlckNvbnRyb2xsZXIgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFJlc2l6ZU9ic2VydmVyQ29udHJvbGxlcigpIHtcbiAgICB9XG4gICAgUmVzaXplT2JzZXJ2ZXJDb250cm9sbGVyLmNvbm5lY3QgPSBmdW5jdGlvbiAocmVzaXplT2JzZXJ2ZXIsIGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciBkZXRhaWwgPSBuZXcgUmVzaXplT2JzZXJ2ZXJEZXRhaWwocmVzaXplT2JzZXJ2ZXIsIGNhbGxiYWNrKTtcbiAgICAgICAgb2JzZXJ2ZXJNYXAuc2V0KHJlc2l6ZU9ic2VydmVyLCBkZXRhaWwpO1xuICAgIH07XG4gICAgUmVzaXplT2JzZXJ2ZXJDb250cm9sbGVyLm9ic2VydmUgPSBmdW5jdGlvbiAocmVzaXplT2JzZXJ2ZXIsIHRhcmdldCwgb3B0aW9ucykge1xuICAgICAgICB2YXIgZGV0YWlsID0gb2JzZXJ2ZXJNYXAuZ2V0KHJlc2l6ZU9ic2VydmVyKTtcbiAgICAgICAgdmFyIGZpcnN0T2JzZXJ2YXRpb24gPSBkZXRhaWwub2JzZXJ2YXRpb25UYXJnZXRzLmxlbmd0aCA9PT0gMDtcbiAgICAgICAgaWYgKGdldE9ic2VydmF0aW9uSW5kZXgoZGV0YWlsLm9ic2VydmF0aW9uVGFyZ2V0cywgdGFyZ2V0KSA8IDApIHtcbiAgICAgICAgICAgIGZpcnN0T2JzZXJ2YXRpb24gJiYgcmVzaXplT2JzZXJ2ZXJzLnB1c2goZGV0YWlsKTtcbiAgICAgICAgICAgIGRldGFpbC5vYnNlcnZhdGlvblRhcmdldHMucHVzaChuZXcgUmVzaXplT2JzZXJ2YXRpb24odGFyZ2V0LCBvcHRpb25zICYmIG9wdGlvbnMuYm94KSk7XG4gICAgICAgICAgICB1cGRhdGVDb3VudCgxKTtcbiAgICAgICAgICAgIHNjaGVkdWxlci5zY2hlZHVsZSgpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBSZXNpemVPYnNlcnZlckNvbnRyb2xsZXIudW5vYnNlcnZlID0gZnVuY3Rpb24gKHJlc2l6ZU9ic2VydmVyLCB0YXJnZXQpIHtcbiAgICAgICAgdmFyIGRldGFpbCA9IG9ic2VydmVyTWFwLmdldChyZXNpemVPYnNlcnZlcik7XG4gICAgICAgIHZhciBpbmRleCA9IGdldE9ic2VydmF0aW9uSW5kZXgoZGV0YWlsLm9ic2VydmF0aW9uVGFyZ2V0cywgdGFyZ2V0KTtcbiAgICAgICAgdmFyIGxhc3RPYnNlcnZhdGlvbiA9IGRldGFpbC5vYnNlcnZhdGlvblRhcmdldHMubGVuZ3RoID09PSAxO1xuICAgICAgICBpZiAoaW5kZXggPj0gMCkge1xuICAgICAgICAgICAgbGFzdE9ic2VydmF0aW9uICYmIHJlc2l6ZU9ic2VydmVycy5zcGxpY2UocmVzaXplT2JzZXJ2ZXJzLmluZGV4T2YoZGV0YWlsKSwgMSk7XG4gICAgICAgICAgICBkZXRhaWwub2JzZXJ2YXRpb25UYXJnZXRzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgICAgICB1cGRhdGVDb3VudCgtMSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFJlc2l6ZU9ic2VydmVyQ29udHJvbGxlci5kaXNjb25uZWN0ID0gZnVuY3Rpb24gKHJlc2l6ZU9ic2VydmVyKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHZhciBkZXRhaWwgPSBvYnNlcnZlck1hcC5nZXQocmVzaXplT2JzZXJ2ZXIpO1xuICAgICAgICBkZXRhaWwub2JzZXJ2YXRpb25UYXJnZXRzLnNsaWNlKCkuZm9yRWFjaChmdW5jdGlvbiAob3QpIHsgcmV0dXJuIF90aGlzLnVub2JzZXJ2ZShyZXNpemVPYnNlcnZlciwgb3QudGFyZ2V0KTsgfSk7XG4gICAgICAgIGRldGFpbC5hY3RpdmVUYXJnZXRzLnNwbGljZSgwLCBkZXRhaWwuYWN0aXZlVGFyZ2V0cy5sZW5ndGgpO1xuICAgIH07XG4gICAgcmV0dXJuIFJlc2l6ZU9ic2VydmVyQ29udHJvbGxlcjtcbn0oKSk7XG5leHBvcnQgeyBSZXNpemVPYnNlcnZlckNvbnRyb2xsZXIgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/ResizeObserverController.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ResizeObserverDetail\": () => (/* binding */ ResizeObserverDetail)\n/* harmony export */ });\nvar ResizeObserverDetail = (function () {\n    function ResizeObserverDetail(resizeObserver, callback) {\n        this.activeTargets = [];\n        this.skippedTargets = [];\n        this.observationTargets = [];\n        this.observer = resizeObserver;\n        this.callback = callback;\n    }\n    return ResizeObserverDetail;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL1Jlc2l6ZU9ic2VydmVyRGV0YWlsLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQytCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtaW5maW5pdGUtZ3JpZC1zY3JvbGxlci8uL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvUmVzaXplT2JzZXJ2ZXJEZXRhaWwuanM/NzgxYSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgUmVzaXplT2JzZXJ2ZXJEZXRhaWwgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFJlc2l6ZU9ic2VydmVyRGV0YWlsKHJlc2l6ZU9ic2VydmVyLCBjYWxsYmFjaykge1xuICAgICAgICB0aGlzLmFjdGl2ZVRhcmdldHMgPSBbXTtcbiAgICAgICAgdGhpcy5za2lwcGVkVGFyZ2V0cyA9IFtdO1xuICAgICAgICB0aGlzLm9ic2VydmF0aW9uVGFyZ2V0cyA9IFtdO1xuICAgICAgICB0aGlzLm9ic2VydmVyID0gcmVzaXplT2JzZXJ2ZXI7XG4gICAgICAgIHRoaXMuY2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgICB9XG4gICAgcmV0dXJuIFJlc2l6ZU9ic2VydmVyRGV0YWlsO1xufSgpKTtcbmV4cG9ydCB7IFJlc2l6ZU9ic2VydmVyRGV0YWlsIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ResizeObserverEntry\": () => (/* binding */ ResizeObserverEntry)\n/* harmony export */ });\n/* harmony import */ var _algorithms_calculateBoxSize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./algorithms/calculateBoxSize */ \"./node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js\");\n/* harmony import */ var _utils_freeze__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/freeze */ \"./node_modules/@juggle/resize-observer/lib/utils/freeze.js\");\n\n\nvar ResizeObserverEntry = (function () {\n    function ResizeObserverEntry(target) {\n        var boxes = (0,_algorithms_calculateBoxSize__WEBPACK_IMPORTED_MODULE_0__.calculateBoxSizes)(target);\n        this.target = target;\n        this.contentRect = boxes.contentRect;\n        this.borderBoxSize = (0,_utils_freeze__WEBPACK_IMPORTED_MODULE_1__.freeze)([boxes.borderBoxSize]);\n        this.contentBoxSize = (0,_utils_freeze__WEBPACK_IMPORTED_MODULE_1__.freeze)([boxes.contentBoxSize]);\n        this.devicePixelContentBoxSize = (0,_utils_freeze__WEBPACK_IMPORTED_MODULE_1__.freeze)([boxes.devicePixelContentBoxSize]);\n    }\n    return ResizeObserverEntry;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL1Jlc2l6ZU9ic2VydmVyRW50cnkuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtFO0FBQzFCO0FBQ3hDO0FBQ0E7QUFDQSxvQkFBb0IsK0VBQWlCO0FBQ3JDO0FBQ0E7QUFDQSw2QkFBNkIscURBQU07QUFDbkMsOEJBQThCLHFEQUFNO0FBQ3BDLHlDQUF5QyxxREFBTTtBQUMvQztBQUNBO0FBQ0EsQ0FBQztBQUM4QiIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0LWluZmluaXRlLWdyaWQtc2Nyb2xsZXIvLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL1Jlc2l6ZU9ic2VydmVyRW50cnkuanM/NDFlOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjYWxjdWxhdGVCb3hTaXplcyB9IGZyb20gJy4vYWxnb3JpdGhtcy9jYWxjdWxhdGVCb3hTaXplJztcbmltcG9ydCB7IGZyZWV6ZSB9IGZyb20gJy4vdXRpbHMvZnJlZXplJztcbnZhciBSZXNpemVPYnNlcnZlckVudHJ5ID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBSZXNpemVPYnNlcnZlckVudHJ5KHRhcmdldCkge1xuICAgICAgICB2YXIgYm94ZXMgPSBjYWxjdWxhdGVCb3hTaXplcyh0YXJnZXQpO1xuICAgICAgICB0aGlzLnRhcmdldCA9IHRhcmdldDtcbiAgICAgICAgdGhpcy5jb250ZW50UmVjdCA9IGJveGVzLmNvbnRlbnRSZWN0O1xuICAgICAgICB0aGlzLmJvcmRlckJveFNpemUgPSBmcmVlemUoW2JveGVzLmJvcmRlckJveFNpemVdKTtcbiAgICAgICAgdGhpcy5jb250ZW50Qm94U2l6ZSA9IGZyZWV6ZShbYm94ZXMuY29udGVudEJveFNpemVdKTtcbiAgICAgICAgdGhpcy5kZXZpY2VQaXhlbENvbnRlbnRCb3hTaXplID0gZnJlZXplKFtib3hlcy5kZXZpY2VQaXhlbENvbnRlbnRCb3hTaXplXSk7XG4gICAgfVxuICAgIHJldHVybiBSZXNpemVPYnNlcnZlckVudHJ5O1xufSgpKTtcbmV4cG9ydCB7IFJlc2l6ZU9ic2VydmVyRW50cnkgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/ResizeObserverSize.js":
/*!************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/ResizeObserverSize.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ResizeObserverSize\": () => (/* binding */ ResizeObserverSize)\n/* harmony export */ });\n/* harmony import */ var _utils_freeze__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/freeze */ \"./node_modules/@juggle/resize-observer/lib/utils/freeze.js\");\n\nvar ResizeObserverSize = (function () {\n    function ResizeObserverSize(inlineSize, blockSize) {\n        this.inlineSize = inlineSize;\n        this.blockSize = blockSize;\n        (0,_utils_freeze__WEBPACK_IMPORTED_MODULE_0__.freeze)(this);\n    }\n    return ResizeObserverSize;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL1Jlc2l6ZU9ic2VydmVyU2l6ZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEscURBQU07QUFDZDtBQUNBO0FBQ0EsQ0FBQztBQUM2QiIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0LWluZmluaXRlLWdyaWQtc2Nyb2xsZXIvLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL1Jlc2l6ZU9ic2VydmVyU2l6ZS5qcz9jNjU0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZyZWV6ZSB9IGZyb20gJy4vdXRpbHMvZnJlZXplJztcbnZhciBSZXNpemVPYnNlcnZlclNpemUgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFJlc2l6ZU9ic2VydmVyU2l6ZShpbmxpbmVTaXplLCBibG9ja1NpemUpIHtcbiAgICAgICAgdGhpcy5pbmxpbmVTaXplID0gaW5saW5lU2l6ZTtcbiAgICAgICAgdGhpcy5ibG9ja1NpemUgPSBibG9ja1NpemU7XG4gICAgICAgIGZyZWV6ZSh0aGlzKTtcbiAgICB9XG4gICAgcmV0dXJuIFJlc2l6ZU9ic2VydmVyU2l6ZTtcbn0oKSk7XG5leHBvcnQgeyBSZXNpemVPYnNlcnZlclNpemUgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/ResizeObserverSize.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"broadcastActiveObservations\": () => (/* binding */ broadcastActiveObservations)\n/* harmony export */ });\n/* harmony import */ var _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/resizeObservers */ \"./node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js\");\n/* harmony import */ var _ResizeObserverEntry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ResizeObserverEntry */ \"./node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js\");\n/* harmony import */ var _calculateDepthForNode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./calculateDepthForNode */ \"./node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js\");\n/* harmony import */ var _calculateBoxSize__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./calculateBoxSize */ \"./node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js\");\n\n\n\n\nvar broadcastActiveObservations = function () {\n    var shallowestDepth = Infinity;\n    var callbacks = [];\n    _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_0__.resizeObservers.forEach(function processObserver(ro) {\n        if (ro.activeTargets.length === 0) {\n            return;\n        }\n        var entries = [];\n        ro.activeTargets.forEach(function processTarget(ot) {\n            var entry = new _ResizeObserverEntry__WEBPACK_IMPORTED_MODULE_1__.ResizeObserverEntry(ot.target);\n            var targetDepth = (0,_calculateDepthForNode__WEBPACK_IMPORTED_MODULE_2__.calculateDepthForNode)(ot.target);\n            entries.push(entry);\n            ot.lastReportedSize = (0,_calculateBoxSize__WEBPACK_IMPORTED_MODULE_3__.calculateBoxSize)(ot.target, ot.observedBox);\n            if (targetDepth < shallowestDepth) {\n                shallowestDepth = targetDepth;\n            }\n        });\n        callbacks.push(function resizeObserverCallback() {\n            ro.callback.call(ro.observer, entries, ro.observer);\n        });\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n    });\n    for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {\n        var callback = callbacks_1[_i];\n        callback();\n    }\n    return shallowestDepth;\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL2FsZ29yaXRobXMvYnJvYWRjYXN0QWN0aXZlT2JzZXJ2YXRpb25zLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTJEO0FBQ0U7QUFDRztBQUNWO0FBQ3REO0FBQ0E7QUFDQTtBQUNBLElBQUksMkVBQXVCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIscUVBQW1CO0FBQy9DLDhCQUE4Qiw2RUFBcUI7QUFDbkQ7QUFDQSxrQ0FBa0MsbUVBQWdCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMLDhDQUE4Qyx5QkFBeUI7QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUN1QyIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0LWluZmluaXRlLWdyaWQtc2Nyb2xsZXIvLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL2FsZ29yaXRobXMvYnJvYWRjYXN0QWN0aXZlT2JzZXJ2YXRpb25zLmpzP2NhYjUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVzaXplT2JzZXJ2ZXJzIH0gZnJvbSAnLi4vdXRpbHMvcmVzaXplT2JzZXJ2ZXJzJztcbmltcG9ydCB7IFJlc2l6ZU9ic2VydmVyRW50cnkgfSBmcm9tICcuLi9SZXNpemVPYnNlcnZlckVudHJ5JztcbmltcG9ydCB7IGNhbGN1bGF0ZURlcHRoRm9yTm9kZSB9IGZyb20gJy4vY2FsY3VsYXRlRGVwdGhGb3JOb2RlJztcbmltcG9ydCB7IGNhbGN1bGF0ZUJveFNpemUgfSBmcm9tICcuL2NhbGN1bGF0ZUJveFNpemUnO1xudmFyIGJyb2FkY2FzdEFjdGl2ZU9ic2VydmF0aW9ucyA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2hhbGxvd2VzdERlcHRoID0gSW5maW5pdHk7XG4gICAgdmFyIGNhbGxiYWNrcyA9IFtdO1xuICAgIHJlc2l6ZU9ic2VydmVycy5mb3JFYWNoKGZ1bmN0aW9uIHByb2Nlc3NPYnNlcnZlcihybykge1xuICAgICAgICBpZiAocm8uYWN0aXZlVGFyZ2V0cy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgZW50cmllcyA9IFtdO1xuICAgICAgICByby5hY3RpdmVUYXJnZXRzLmZvckVhY2goZnVuY3Rpb24gcHJvY2Vzc1RhcmdldChvdCkge1xuICAgICAgICAgICAgdmFyIGVudHJ5ID0gbmV3IFJlc2l6ZU9ic2VydmVyRW50cnkob3QudGFyZ2V0KTtcbiAgICAgICAgICAgIHZhciB0YXJnZXREZXB0aCA9IGNhbGN1bGF0ZURlcHRoRm9yTm9kZShvdC50YXJnZXQpO1xuICAgICAgICAgICAgZW50cmllcy5wdXNoKGVudHJ5KTtcbiAgICAgICAgICAgIG90Lmxhc3RSZXBvcnRlZFNpemUgPSBjYWxjdWxhdGVCb3hTaXplKG90LnRhcmdldCwgb3Qub2JzZXJ2ZWRCb3gpO1xuICAgICAgICAgICAgaWYgKHRhcmdldERlcHRoIDwgc2hhbGxvd2VzdERlcHRoKSB7XG4gICAgICAgICAgICAgICAgc2hhbGxvd2VzdERlcHRoID0gdGFyZ2V0RGVwdGg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBjYWxsYmFja3MucHVzaChmdW5jdGlvbiByZXNpemVPYnNlcnZlckNhbGxiYWNrKCkge1xuICAgICAgICAgICAgcm8uY2FsbGJhY2suY2FsbChyby5vYnNlcnZlciwgZW50cmllcywgcm8ub2JzZXJ2ZXIpO1xuICAgICAgICB9KTtcbiAgICAgICAgcm8uYWN0aXZlVGFyZ2V0cy5zcGxpY2UoMCwgcm8uYWN0aXZlVGFyZ2V0cy5sZW5ndGgpO1xuICAgIH0pO1xuICAgIGZvciAodmFyIF9pID0gMCwgY2FsbGJhY2tzXzEgPSBjYWxsYmFja3M7IF9pIDwgY2FsbGJhY2tzXzEubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgIHZhciBjYWxsYmFjayA9IGNhbGxiYWNrc18xW19pXTtcbiAgICAgICAgY2FsbGJhY2soKTtcbiAgICB9XG4gICAgcmV0dXJuIHNoYWxsb3dlc3REZXB0aDtcbn07XG5leHBvcnQgeyBicm9hZGNhc3RBY3RpdmVPYnNlcnZhdGlvbnMgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"calculateBoxSize\": () => (/* binding */ calculateBoxSize),\n/* harmony export */   \"calculateBoxSizes\": () => (/* binding */ calculateBoxSizes)\n/* harmony export */ });\n/* harmony import */ var _ResizeObserverBoxOptions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ResizeObserverBoxOptions */ \"./node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js\");\n/* harmony import */ var _ResizeObserverSize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ResizeObserverSize */ \"./node_modules/@juggle/resize-observer/lib/ResizeObserverSize.js\");\n/* harmony import */ var _DOMRectReadOnly__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../DOMRectReadOnly */ \"./node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js\");\n/* harmony import */ var _utils_element__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/element */ \"./node_modules/@juggle/resize-observer/lib/utils/element.js\");\n/* harmony import */ var _utils_freeze__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/freeze */ \"./node_modules/@juggle/resize-observer/lib/utils/freeze.js\");\n/* harmony import */ var _utils_global__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/global */ \"./node_modules/@juggle/resize-observer/lib/utils/global.js\");\n\n\n\n\n\n\nvar cache = new WeakMap();\nvar scrollRegexp = /auto|scroll/;\nvar verticalRegexp = /^tb|vertical/;\nvar IE = (/msie|trident/i).test(_utils_global__WEBPACK_IMPORTED_MODULE_5__.global.navigator && _utils_global__WEBPACK_IMPORTED_MODULE_5__.global.navigator.userAgent);\nvar parseDimension = function (pixel) { return parseFloat(pixel || '0'); };\nvar size = function (inlineSize, blockSize, switchSizes) {\n    if (inlineSize === void 0) { inlineSize = 0; }\n    if (blockSize === void 0) { blockSize = 0; }\n    if (switchSizes === void 0) { switchSizes = false; }\n    return new _ResizeObserverSize__WEBPACK_IMPORTED_MODULE_1__.ResizeObserverSize((switchSizes ? blockSize : inlineSize) || 0, (switchSizes ? inlineSize : blockSize) || 0);\n};\nvar zeroBoxes = (0,_utils_freeze__WEBPACK_IMPORTED_MODULE_4__.freeze)({\n    devicePixelContentBoxSize: size(),\n    borderBoxSize: size(),\n    contentBoxSize: size(),\n    contentRect: new _DOMRectReadOnly__WEBPACK_IMPORTED_MODULE_2__.DOMRectReadOnly(0, 0, 0, 0)\n});\nvar calculateBoxSizes = function (target, forceRecalculation) {\n    if (forceRecalculation === void 0) { forceRecalculation = false; }\n    if (cache.has(target) && !forceRecalculation) {\n        return cache.get(target);\n    }\n    if ((0,_utils_element__WEBPACK_IMPORTED_MODULE_3__.isHidden)(target)) {\n        cache.set(target, zeroBoxes);\n        return zeroBoxes;\n    }\n    var cs = getComputedStyle(target);\n    var svg = (0,_utils_element__WEBPACK_IMPORTED_MODULE_3__.isSVG)(target) && target.ownerSVGElement && target.getBBox();\n    var removePadding = !IE && cs.boxSizing === 'border-box';\n    var switchSizes = verticalRegexp.test(cs.writingMode || '');\n    var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');\n    var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');\n    var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);\n    var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);\n    var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);\n    var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);\n    var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);\n    var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);\n    var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);\n    var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);\n    var horizontalPadding = paddingLeft + paddingRight;\n    var verticalPadding = paddingTop + paddingBottom;\n    var horizontalBorderArea = borderLeft + borderRight;\n    var verticalBorderArea = borderTop + borderBottom;\n    var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;\n    var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;\n    var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;\n    var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;\n    var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;\n    var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;\n    var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;\n    var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;\n    var boxes = (0,_utils_freeze__WEBPACK_IMPORTED_MODULE_4__.freeze)({\n        devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),\n        borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),\n        contentBoxSize: size(contentWidth, contentHeight, switchSizes),\n        contentRect: new _DOMRectReadOnly__WEBPACK_IMPORTED_MODULE_2__.DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)\n    });\n    cache.set(target, boxes);\n    return boxes;\n};\nvar calculateBoxSize = function (target, observedBox, forceRecalculation) {\n    var _a = calculateBoxSizes(target, forceRecalculation), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize, devicePixelContentBoxSize = _a.devicePixelContentBoxSize;\n    switch (observedBox) {\n        case _ResizeObserverBoxOptions__WEBPACK_IMPORTED_MODULE_0__.ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:\n            return devicePixelContentBoxSize;\n        case _ResizeObserverBoxOptions__WEBPACK_IMPORTED_MODULE_0__.ResizeObserverBoxOptions.BORDER_BOX:\n            return borderBoxSize;\n        default:\n            return contentBoxSize;\n    }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL2FsZ29yaXRobXMvY2FsY3VsYXRlQm94U2l6ZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUF1RTtBQUNaO0FBQ047QUFDRjtBQUNWO0FBQ0E7QUFDekM7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLDJEQUFnQixJQUFJLHFFQUEwQjtBQUM5RSx3Q0FBd0M7QUFDeEM7QUFDQSxpQ0FBaUM7QUFDakMsZ0NBQWdDO0FBQ2hDLGtDQUFrQztBQUNsQyxlQUFlLG1FQUFrQjtBQUNqQztBQUNBLGdCQUFnQixxREFBTTtBQUN0QjtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsNkRBQWU7QUFDcEMsQ0FBQztBQUNEO0FBQ0EseUNBQXlDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBLFFBQVEsd0RBQVE7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLHFEQUFLO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixxREFBTTtBQUN0QjtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsNkRBQWU7QUFDeEMsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsd0dBQWlEO0FBQzlEO0FBQ0EsYUFBYSwwRkFBbUM7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUMrQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0LWluZmluaXRlLWdyaWQtc2Nyb2xsZXIvLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL2FsZ29yaXRobXMvY2FsY3VsYXRlQm94U2l6ZS5qcz8xMDZjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlc2l6ZU9ic2VydmVyQm94T3B0aW9ucyB9IGZyb20gJy4uL1Jlc2l6ZU9ic2VydmVyQm94T3B0aW9ucyc7XG5pbXBvcnQgeyBSZXNpemVPYnNlcnZlclNpemUgfSBmcm9tICcuLi9SZXNpemVPYnNlcnZlclNpemUnO1xuaW1wb3J0IHsgRE9NUmVjdFJlYWRPbmx5IH0gZnJvbSAnLi4vRE9NUmVjdFJlYWRPbmx5JztcbmltcG9ydCB7IGlzU1ZHLCBpc0hpZGRlbiB9IGZyb20gJy4uL3V0aWxzL2VsZW1lbnQnO1xuaW1wb3J0IHsgZnJlZXplIH0gZnJvbSAnLi4vdXRpbHMvZnJlZXplJztcbmltcG9ydCB7IGdsb2JhbCB9IGZyb20gJy4uL3V0aWxzL2dsb2JhbCc7XG52YXIgY2FjaGUgPSBuZXcgV2Vha01hcCgpO1xudmFyIHNjcm9sbFJlZ2V4cCA9IC9hdXRvfHNjcm9sbC87XG52YXIgdmVydGljYWxSZWdleHAgPSAvXnRifHZlcnRpY2FsLztcbnZhciBJRSA9ICgvbXNpZXx0cmlkZW50L2kpLnRlc3QoZ2xvYmFsLm5hdmlnYXRvciAmJiBnbG9iYWwubmF2aWdhdG9yLnVzZXJBZ2VudCk7XG52YXIgcGFyc2VEaW1lbnNpb24gPSBmdW5jdGlvbiAocGl4ZWwpIHsgcmV0dXJuIHBhcnNlRmxvYXQocGl4ZWwgfHwgJzAnKTsgfTtcbnZhciBzaXplID0gZnVuY3Rpb24gKGlubGluZVNpemUsIGJsb2NrU2l6ZSwgc3dpdGNoU2l6ZXMpIHtcbiAgICBpZiAoaW5saW5lU2l6ZSA9PT0gdm9pZCAwKSB7IGlubGluZVNpemUgPSAwOyB9XG4gICAgaWYgKGJsb2NrU2l6ZSA9PT0gdm9pZCAwKSB7IGJsb2NrU2l6ZSA9IDA7IH1cbiAgICBpZiAoc3dpdGNoU2l6ZXMgPT09IHZvaWQgMCkgeyBzd2l0Y2hTaXplcyA9IGZhbHNlOyB9XG4gICAgcmV0dXJuIG5ldyBSZXNpemVPYnNlcnZlclNpemUoKHN3aXRjaFNpemVzID8gYmxvY2tTaXplIDogaW5saW5lU2l6ZSkgfHwgMCwgKHN3aXRjaFNpemVzID8gaW5saW5lU2l6ZSA6IGJsb2NrU2l6ZSkgfHwgMCk7XG59O1xudmFyIHplcm9Cb3hlcyA9IGZyZWV6ZSh7XG4gICAgZGV2aWNlUGl4ZWxDb250ZW50Qm94U2l6ZTogc2l6ZSgpLFxuICAgIGJvcmRlckJveFNpemU6IHNpemUoKSxcbiAgICBjb250ZW50Qm94U2l6ZTogc2l6ZSgpLFxuICAgIGNvbnRlbnRSZWN0OiBuZXcgRE9NUmVjdFJlYWRPbmx5KDAsIDAsIDAsIDApXG59KTtcbnZhciBjYWxjdWxhdGVCb3hTaXplcyA9IGZ1bmN0aW9uICh0YXJnZXQsIGZvcmNlUmVjYWxjdWxhdGlvbikge1xuICAgIGlmIChmb3JjZVJlY2FsY3VsYXRpb24gPT09IHZvaWQgMCkgeyBmb3JjZVJlY2FsY3VsYXRpb24gPSBmYWxzZTsgfVxuICAgIGlmIChjYWNoZS5oYXModGFyZ2V0KSAmJiAhZm9yY2VSZWNhbGN1bGF0aW9uKSB7XG4gICAgICAgIHJldHVybiBjYWNoZS5nZXQodGFyZ2V0KTtcbiAgICB9XG4gICAgaWYgKGlzSGlkZGVuKHRhcmdldCkpIHtcbiAgICAgICAgY2FjaGUuc2V0KHRhcmdldCwgemVyb0JveGVzKTtcbiAgICAgICAgcmV0dXJuIHplcm9Cb3hlcztcbiAgICB9XG4gICAgdmFyIGNzID0gZ2V0Q29tcHV0ZWRTdHlsZSh0YXJnZXQpO1xuICAgIHZhciBzdmcgPSBpc1NWRyh0YXJnZXQpICYmIHRhcmdldC5vd25lclNWR0VsZW1lbnQgJiYgdGFyZ2V0LmdldEJCb3goKTtcbiAgICB2YXIgcmVtb3ZlUGFkZGluZyA9ICFJRSAmJiBjcy5ib3hTaXppbmcgPT09ICdib3JkZXItYm94JztcbiAgICB2YXIgc3dpdGNoU2l6ZXMgPSB2ZXJ0aWNhbFJlZ2V4cC50ZXN0KGNzLndyaXRpbmdNb2RlIHx8ICcnKTtcbiAgICB2YXIgY2FuU2Nyb2xsVmVydGljYWxseSA9ICFzdmcgJiYgc2Nyb2xsUmVnZXhwLnRlc3QoY3Mub3ZlcmZsb3dZIHx8ICcnKTtcbiAgICB2YXIgY2FuU2Nyb2xsSG9yaXpvbnRhbGx5ID0gIXN2ZyAmJiBzY3JvbGxSZWdleHAudGVzdChjcy5vdmVyZmxvd1ggfHwgJycpO1xuICAgIHZhciBwYWRkaW5nVG9wID0gc3ZnID8gMCA6IHBhcnNlRGltZW5zaW9uKGNzLnBhZGRpbmdUb3ApO1xuICAgIHZhciBwYWRkaW5nUmlnaHQgPSBzdmcgPyAwIDogcGFyc2VEaW1lbnNpb24oY3MucGFkZGluZ1JpZ2h0KTtcbiAgICB2YXIgcGFkZGluZ0JvdHRvbSA9IHN2ZyA/IDAgOiBwYXJzZURpbWVuc2lvbihjcy5wYWRkaW5nQm90dG9tKTtcbiAgICB2YXIgcGFkZGluZ0xlZnQgPSBzdmcgPyAwIDogcGFyc2VEaW1lbnNpb24oY3MucGFkZGluZ0xlZnQpO1xuICAgIHZhciBib3JkZXJUb3AgPSBzdmcgPyAwIDogcGFyc2VEaW1lbnNpb24oY3MuYm9yZGVyVG9wV2lkdGgpO1xuICAgIHZhciBib3JkZXJSaWdodCA9IHN2ZyA/IDAgOiBwYXJzZURpbWVuc2lvbihjcy5ib3JkZXJSaWdodFdpZHRoKTtcbiAgICB2YXIgYm9yZGVyQm90dG9tID0gc3ZnID8gMCA6IHBhcnNlRGltZW5zaW9uKGNzLmJvcmRlckJvdHRvbVdpZHRoKTtcbiAgICB2YXIgYm9yZGVyTGVmdCA9IHN2ZyA/IDAgOiBwYXJzZURpbWVuc2lvbihjcy5ib3JkZXJMZWZ0V2lkdGgpO1xuICAgIHZhciBob3Jpem9udGFsUGFkZGluZyA9IHBhZGRpbmdMZWZ0ICsgcGFkZGluZ1JpZ2h0O1xuICAgIHZhciB2ZXJ0aWNhbFBhZGRpbmcgPSBwYWRkaW5nVG9wICsgcGFkZGluZ0JvdHRvbTtcbiAgICB2YXIgaG9yaXpvbnRhbEJvcmRlckFyZWEgPSBib3JkZXJMZWZ0ICsgYm9yZGVyUmlnaHQ7XG4gICAgdmFyIHZlcnRpY2FsQm9yZGVyQXJlYSA9IGJvcmRlclRvcCArIGJvcmRlckJvdHRvbTtcbiAgICB2YXIgaG9yaXpvbnRhbFNjcm9sbGJhclRoaWNrbmVzcyA9ICFjYW5TY3JvbGxIb3Jpem9udGFsbHkgPyAwIDogdGFyZ2V0Lm9mZnNldEhlaWdodCAtIHZlcnRpY2FsQm9yZGVyQXJlYSAtIHRhcmdldC5jbGllbnRIZWlnaHQ7XG4gICAgdmFyIHZlcnRpY2FsU2Nyb2xsYmFyVGhpY2tuZXNzID0gIWNhblNjcm9sbFZlcnRpY2FsbHkgPyAwIDogdGFyZ2V0Lm9mZnNldFdpZHRoIC0gaG9yaXpvbnRhbEJvcmRlckFyZWEgLSB0YXJnZXQuY2xpZW50V2lkdGg7XG4gICAgdmFyIHdpZHRoUmVkdWN0aW9uID0gcmVtb3ZlUGFkZGluZyA/IGhvcml6b250YWxQYWRkaW5nICsgaG9yaXpvbnRhbEJvcmRlckFyZWEgOiAwO1xuICAgIHZhciBoZWlnaHRSZWR1Y3Rpb24gPSByZW1vdmVQYWRkaW5nID8gdmVydGljYWxQYWRkaW5nICsgdmVydGljYWxCb3JkZXJBcmVhIDogMDtcbiAgICB2YXIgY29udGVudFdpZHRoID0gc3ZnID8gc3ZnLndpZHRoIDogcGFyc2VEaW1lbnNpb24oY3Mud2lkdGgpIC0gd2lkdGhSZWR1Y3Rpb24gLSB2ZXJ0aWNhbFNjcm9sbGJhclRoaWNrbmVzcztcbiAgICB2YXIgY29udGVudEhlaWdodCA9IHN2ZyA/IHN2Zy5oZWlnaHQgOiBwYXJzZURpbWVuc2lvbihjcy5oZWlnaHQpIC0gaGVpZ2h0UmVkdWN0aW9uIC0gaG9yaXpvbnRhbFNjcm9sbGJhclRoaWNrbmVzcztcbiAgICB2YXIgYm9yZGVyQm94V2lkdGggPSBjb250ZW50V2lkdGggKyBob3Jpem9udGFsUGFkZGluZyArIHZlcnRpY2FsU2Nyb2xsYmFyVGhpY2tuZXNzICsgaG9yaXpvbnRhbEJvcmRlckFyZWE7XG4gICAgdmFyIGJvcmRlckJveEhlaWdodCA9IGNvbnRlbnRIZWlnaHQgKyB2ZXJ0aWNhbFBhZGRpbmcgKyBob3Jpem9udGFsU2Nyb2xsYmFyVGhpY2tuZXNzICsgdmVydGljYWxCb3JkZXJBcmVhO1xuICAgIHZhciBib3hlcyA9IGZyZWV6ZSh7XG4gICAgICAgIGRldmljZVBpeGVsQ29udGVudEJveFNpemU6IHNpemUoTWF0aC5yb3VuZChjb250ZW50V2lkdGggKiBkZXZpY2VQaXhlbFJhdGlvKSwgTWF0aC5yb3VuZChjb250ZW50SGVpZ2h0ICogZGV2aWNlUGl4ZWxSYXRpbyksIHN3aXRjaFNpemVzKSxcbiAgICAgICAgYm9yZGVyQm94U2l6ZTogc2l6ZShib3JkZXJCb3hXaWR0aCwgYm9yZGVyQm94SGVpZ2h0LCBzd2l0Y2hTaXplcyksXG4gICAgICAgIGNvbnRlbnRCb3hTaXplOiBzaXplKGNvbnRlbnRXaWR0aCwgY29udGVudEhlaWdodCwgc3dpdGNoU2l6ZXMpLFxuICAgICAgICBjb250ZW50UmVjdDogbmV3IERPTVJlY3RSZWFkT25seShwYWRkaW5nTGVmdCwgcGFkZGluZ1RvcCwgY29udGVudFdpZHRoLCBjb250ZW50SGVpZ2h0KVxuICAgIH0pO1xuICAgIGNhY2hlLnNldCh0YXJnZXQsIGJveGVzKTtcbiAgICByZXR1cm4gYm94ZXM7XG59O1xudmFyIGNhbGN1bGF0ZUJveFNpemUgPSBmdW5jdGlvbiAodGFyZ2V0LCBvYnNlcnZlZEJveCwgZm9yY2VSZWNhbGN1bGF0aW9uKSB7XG4gICAgdmFyIF9hID0gY2FsY3VsYXRlQm94U2l6ZXModGFyZ2V0LCBmb3JjZVJlY2FsY3VsYXRpb24pLCBib3JkZXJCb3hTaXplID0gX2EuYm9yZGVyQm94U2l6ZSwgY29udGVudEJveFNpemUgPSBfYS5jb250ZW50Qm94U2l6ZSwgZGV2aWNlUGl4ZWxDb250ZW50Qm94U2l6ZSA9IF9hLmRldmljZVBpeGVsQ29udGVudEJveFNpemU7XG4gICAgc3dpdGNoIChvYnNlcnZlZEJveCkge1xuICAgICAgICBjYXNlIFJlc2l6ZU9ic2VydmVyQm94T3B0aW9ucy5ERVZJQ0VfUElYRUxfQ09OVEVOVF9CT1g6XG4gICAgICAgICAgICByZXR1cm4gZGV2aWNlUGl4ZWxDb250ZW50Qm94U2l6ZTtcbiAgICAgICAgY2FzZSBSZXNpemVPYnNlcnZlckJveE9wdGlvbnMuQk9SREVSX0JPWDpcbiAgICAgICAgICAgIHJldHVybiBib3JkZXJCb3hTaXplO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIGNvbnRlbnRCb3hTaXplO1xuICAgIH1cbn07XG5leHBvcnQgeyBjYWxjdWxhdGVCb3hTaXplLCBjYWxjdWxhdGVCb3hTaXplcyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"calculateDepthForNode\": () => (/* binding */ calculateDepthForNode)\n/* harmony export */ });\n/* harmony import */ var _utils_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/element */ \"./node_modules/@juggle/resize-observer/lib/utils/element.js\");\n\nvar calculateDepthForNode = function (node) {\n    if ((0,_utils_element__WEBPACK_IMPORTED_MODULE_0__.isHidden)(node)) {\n        return Infinity;\n    }\n    var depth = 0;\n    var parent = node.parentNode;\n    while (parent) {\n        depth += 1;\n        parent = parent.parentNode;\n    }\n    return depth;\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL2FsZ29yaXRobXMvY2FsY3VsYXRlRGVwdGhGb3JOb2RlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTRDO0FBQzVDO0FBQ0EsUUFBUSx3REFBUTtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0LWluZmluaXRlLWdyaWQtc2Nyb2xsZXIvLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL2FsZ29yaXRobXMvY2FsY3VsYXRlRGVwdGhGb3JOb2RlLmpzP2M5MzAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNIaWRkZW4gfSBmcm9tICcuLi91dGlscy9lbGVtZW50JztcbnZhciBjYWxjdWxhdGVEZXB0aEZvck5vZGUgPSBmdW5jdGlvbiAobm9kZSkge1xuICAgIGlmIChpc0hpZGRlbihub2RlKSkge1xuICAgICAgICByZXR1cm4gSW5maW5pdHk7XG4gICAgfVxuICAgIHZhciBkZXB0aCA9IDA7XG4gICAgdmFyIHBhcmVudCA9IG5vZGUucGFyZW50Tm9kZTtcbiAgICB3aGlsZSAocGFyZW50KSB7XG4gICAgICAgIGRlcHRoICs9IDE7XG4gICAgICAgIHBhcmVudCA9IHBhcmVudC5wYXJlbnROb2RlO1xuICAgIH1cbiAgICByZXR1cm4gZGVwdGg7XG59O1xuZXhwb3J0IHsgY2FsY3VsYXRlRGVwdGhGb3JOb2RlIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"deliverResizeLoopError\": () => (/* binding */ deliverResizeLoopError)\n/* harmony export */ });\nvar msg = 'ResizeObserver loop completed with undelivered notifications.';\nvar deliverResizeLoopError = function () {\n    var event;\n    if (typeof ErrorEvent === 'function') {\n        event = new ErrorEvent('error', {\n            message: msg\n        });\n    }\n    else {\n        event = document.createEvent('Event');\n        event.initEvent('error', false, false);\n        event.message = msg;\n    }\n    window.dispatchEvent(event);\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL2FsZ29yaXRobXMvZGVsaXZlclJlc2l6ZUxvb3BFcnJvci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFjdC1pbmZpbml0ZS1ncmlkLXNjcm9sbGVyLy4vbm9kZV9tb2R1bGVzL0BqdWdnbGUvcmVzaXplLW9ic2VydmVyL2xpYi9hbGdvcml0aG1zL2RlbGl2ZXJSZXNpemVMb29wRXJyb3IuanM/YzJlMyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbXNnID0gJ1Jlc2l6ZU9ic2VydmVyIGxvb3AgY29tcGxldGVkIHdpdGggdW5kZWxpdmVyZWQgbm90aWZpY2F0aW9ucy4nO1xudmFyIGRlbGl2ZXJSZXNpemVMb29wRXJyb3IgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV2ZW50O1xuICAgIGlmICh0eXBlb2YgRXJyb3JFdmVudCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBldmVudCA9IG5ldyBFcnJvckV2ZW50KCdlcnJvcicsIHtcbiAgICAgICAgICAgIG1lc3NhZ2U6IG1zZ1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGV2ZW50ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0V2ZW50Jyk7XG4gICAgICAgIGV2ZW50LmluaXRFdmVudCgnZXJyb3InLCBmYWxzZSwgZmFsc2UpO1xuICAgICAgICBldmVudC5tZXNzYWdlID0gbXNnO1xuICAgIH1cbiAgICB3aW5kb3cuZGlzcGF0Y2hFdmVudChldmVudCk7XG59O1xuZXhwb3J0IHsgZGVsaXZlclJlc2l6ZUxvb3BFcnJvciB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gatherActiveObservationsAtDepth\": () => (/* binding */ gatherActiveObservationsAtDepth)\n/* harmony export */ });\n/* harmony import */ var _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/resizeObservers */ \"./node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js\");\n/* harmony import */ var _calculateDepthForNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./calculateDepthForNode */ \"./node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js\");\n\n\nvar gatherActiveObservationsAtDepth = function (depth) {\n    _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_0__.resizeObservers.forEach(function processObserver(ro) {\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n        ro.skippedTargets.splice(0, ro.skippedTargets.length);\n        ro.observationTargets.forEach(function processTarget(ot) {\n            if (ot.isActive()) {\n                if ((0,_calculateDepthForNode__WEBPACK_IMPORTED_MODULE_1__.calculateDepthForNode)(ot.target) > depth) {\n                    ro.activeTargets.push(ot);\n                }\n                else {\n                    ro.skippedTargets.push(ot);\n                }\n            }\n        });\n    });\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL2FsZ29yaXRobXMvZ2F0aGVyQWN0aXZlT2JzZXJ2YXRpb25zQXREZXB0aC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMkQ7QUFDSztBQUNoRTtBQUNBLElBQUksMkVBQXVCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDZFQUFxQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQzJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtaW5maW5pdGUtZ3JpZC1zY3JvbGxlci8uL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvYWxnb3JpdGhtcy9nYXRoZXJBY3RpdmVPYnNlcnZhdGlvbnNBdERlcHRoLmpzPzQ1YjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVzaXplT2JzZXJ2ZXJzIH0gZnJvbSAnLi4vdXRpbHMvcmVzaXplT2JzZXJ2ZXJzJztcbmltcG9ydCB7IGNhbGN1bGF0ZURlcHRoRm9yTm9kZSB9IGZyb20gJy4vY2FsY3VsYXRlRGVwdGhGb3JOb2RlJztcbnZhciBnYXRoZXJBY3RpdmVPYnNlcnZhdGlvbnNBdERlcHRoID0gZnVuY3Rpb24gKGRlcHRoKSB7XG4gICAgcmVzaXplT2JzZXJ2ZXJzLmZvckVhY2goZnVuY3Rpb24gcHJvY2Vzc09ic2VydmVyKHJvKSB7XG4gICAgICAgIHJvLmFjdGl2ZVRhcmdldHMuc3BsaWNlKDAsIHJvLmFjdGl2ZVRhcmdldHMubGVuZ3RoKTtcbiAgICAgICAgcm8uc2tpcHBlZFRhcmdldHMuc3BsaWNlKDAsIHJvLnNraXBwZWRUYXJnZXRzLmxlbmd0aCk7XG4gICAgICAgIHJvLm9ic2VydmF0aW9uVGFyZ2V0cy5mb3JFYWNoKGZ1bmN0aW9uIHByb2Nlc3NUYXJnZXQob3QpIHtcbiAgICAgICAgICAgIGlmIChvdC5pc0FjdGl2ZSgpKSB7XG4gICAgICAgICAgICAgICAgaWYgKGNhbGN1bGF0ZURlcHRoRm9yTm9kZShvdC50YXJnZXQpID4gZGVwdGgpIHtcbiAgICAgICAgICAgICAgICAgICAgcm8uYWN0aXZlVGFyZ2V0cy5wdXNoKG90KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJvLnNraXBwZWRUYXJnZXRzLnB1c2gob3QpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSk7XG59O1xuZXhwb3J0IHsgZ2F0aGVyQWN0aXZlT2JzZXJ2YXRpb25zQXREZXB0aCB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"hasActiveObservations\": () => (/* binding */ hasActiveObservations)\n/* harmony export */ });\n/* harmony import */ var _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/resizeObservers */ \"./node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js\");\n\nvar hasActiveObservations = function () {\n    return _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_0__.resizeObservers.some(function (ro) { return ro.activeTargets.length > 0; });\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL2FsZ29yaXRobXMvaGFzQWN0aXZlT2JzZXJ2YXRpb25zLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTJEO0FBQzNEO0FBQ0EsV0FBVyx3RUFBb0IsaUJBQWlCLHFDQUFxQztBQUNyRjtBQUNpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0LWluZmluaXRlLWdyaWQtc2Nyb2xsZXIvLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL2FsZ29yaXRobXMvaGFzQWN0aXZlT2JzZXJ2YXRpb25zLmpzP2RkYTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVzaXplT2JzZXJ2ZXJzIH0gZnJvbSAnLi4vdXRpbHMvcmVzaXplT2JzZXJ2ZXJzJztcbnZhciBoYXNBY3RpdmVPYnNlcnZhdGlvbnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHJlc2l6ZU9ic2VydmVycy5zb21lKGZ1bmN0aW9uIChybykgeyByZXR1cm4gcm8uYWN0aXZlVGFyZ2V0cy5sZW5ndGggPiAwOyB9KTtcbn07XG5leHBvcnQgeyBoYXNBY3RpdmVPYnNlcnZhdGlvbnMgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"hasSkippedObservations\": () => (/* binding */ hasSkippedObservations)\n/* harmony export */ });\n/* harmony import */ var _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/resizeObservers */ \"./node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js\");\n\nvar hasSkippedObservations = function () {\n    return _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_0__.resizeObservers.some(function (ro) { return ro.skippedTargets.length > 0; });\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL2FsZ29yaXRobXMvaGFzU2tpcHBlZE9ic2VydmF0aW9ucy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEyRDtBQUMzRDtBQUNBLFdBQVcsd0VBQW9CLGlCQUFpQixzQ0FBc0M7QUFDdEY7QUFDa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFjdC1pbmZpbml0ZS1ncmlkLXNjcm9sbGVyLy4vbm9kZV9tb2R1bGVzL0BqdWdnbGUvcmVzaXplLW9ic2VydmVyL2xpYi9hbGdvcml0aG1zL2hhc1NraXBwZWRPYnNlcnZhdGlvbnMuanM/YzEwYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZXNpemVPYnNlcnZlcnMgfSBmcm9tICcuLi91dGlscy9yZXNpemVPYnNlcnZlcnMnO1xudmFyIGhhc1NraXBwZWRPYnNlcnZhdGlvbnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHJlc2l6ZU9ic2VydmVycy5zb21lKGZ1bmN0aW9uIChybykgeyByZXR1cm4gcm8uc2tpcHBlZFRhcmdldHMubGVuZ3RoID4gMDsgfSk7XG59O1xuZXhwb3J0IHsgaGFzU2tpcHBlZE9ic2VydmF0aW9ucyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/exports/resize-observer.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/exports/resize-observer.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ResizeObserver\": () => (/* reexport safe */ _ResizeObserver__WEBPACK_IMPORTED_MODULE_0__.ResizeObserver),\n/* harmony export */   \"ResizeObserverEntry\": () => (/* reexport safe */ _ResizeObserverEntry__WEBPACK_IMPORTED_MODULE_1__.ResizeObserverEntry),\n/* harmony export */   \"ResizeObserverSize\": () => (/* reexport safe */ _ResizeObserverSize__WEBPACK_IMPORTED_MODULE_2__.ResizeObserverSize)\n/* harmony export */ });\n/* harmony import */ var _ResizeObserver__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ResizeObserver */ \"./node_modules/@juggle/resize-observer/lib/ResizeObserver.js\");\n/* harmony import */ var _ResizeObserverEntry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ResizeObserverEntry */ \"./node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js\");\n/* harmony import */ var _ResizeObserverSize__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ResizeObserverSize */ \"./node_modules/@juggle/resize-observer/lib/ResizeObserverSize.js\");\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL2V4cG9ydHMvcmVzaXplLW9ic2VydmVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFtRDtBQUNVO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFjdC1pbmZpbml0ZS1ncmlkLXNjcm9sbGVyLy4vbm9kZV9tb2R1bGVzL0BqdWdnbGUvcmVzaXplLW9ic2VydmVyL2xpYi9leHBvcnRzL3Jlc2l6ZS1vYnNlcnZlci5qcz8xZDFmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IFJlc2l6ZU9ic2VydmVyIH0gZnJvbSAnLi4vUmVzaXplT2JzZXJ2ZXInO1xuZXhwb3J0IHsgUmVzaXplT2JzZXJ2ZXJFbnRyeSB9IGZyb20gJy4uL1Jlc2l6ZU9ic2VydmVyRW50cnknO1xuZXhwb3J0IHsgUmVzaXplT2JzZXJ2ZXJTaXplIH0gZnJvbSAnLi4vUmVzaXplT2JzZXJ2ZXJTaXplJztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/exports/resize-observer.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/utils/element.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/utils/element.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isElement\": () => (/* binding */ isElement),\n/* harmony export */   \"isHidden\": () => (/* binding */ isHidden),\n/* harmony export */   \"isReplacedElement\": () => (/* binding */ isReplacedElement),\n/* harmony export */   \"isSVG\": () => (/* binding */ isSVG)\n/* harmony export */ });\nvar isSVG = function (target) { return target instanceof SVGElement && 'getBBox' in target; };\nvar isHidden = function (target) {\n    if (isSVG(target)) {\n        var _a = target.getBBox(), width = _a.width, height = _a.height;\n        return !width && !height;\n    }\n    var _b = target, offsetWidth = _b.offsetWidth, offsetHeight = _b.offsetHeight;\n    return !(offsetWidth || offsetHeight || target.getClientRects().length);\n};\nvar isElement = function (obj) {\n    var _a, _b;\n    if (obj instanceof Element) {\n        return true;\n    }\n    var scope = (_b = (_a = obj) === null || _a === void 0 ? void 0 : _a.ownerDocument) === null || _b === void 0 ? void 0 : _b.defaultView;\n    return !!(scope && obj instanceof scope.Element);\n};\nvar isReplacedElement = function (target) {\n    switch (target.tagName) {\n        case 'INPUT':\n            if (target.type !== 'image') {\n                break;\n            }\n        case 'VIDEO':\n        case 'AUDIO':\n        case 'EMBED':\n        case 'OBJECT':\n        case 'CANVAS':\n        case 'IFRAME':\n        case 'IMG':\n            return true;\n    }\n    return false;\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL3V0aWxzL2VsZW1lbnQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDeUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFjdC1pbmZpbml0ZS1ncmlkLXNjcm9sbGVyLy4vbm9kZV9tb2R1bGVzL0BqdWdnbGUvcmVzaXplLW9ic2VydmVyL2xpYi91dGlscy9lbGVtZW50LmpzPzNjZDUiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGlzU1ZHID0gZnVuY3Rpb24gKHRhcmdldCkgeyByZXR1cm4gdGFyZ2V0IGluc3RhbmNlb2YgU1ZHRWxlbWVudCAmJiAnZ2V0QkJveCcgaW4gdGFyZ2V0OyB9O1xudmFyIGlzSGlkZGVuID0gZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIGlmIChpc1NWRyh0YXJnZXQpKSB7XG4gICAgICAgIHZhciBfYSA9IHRhcmdldC5nZXRCQm94KCksIHdpZHRoID0gX2Eud2lkdGgsIGhlaWdodCA9IF9hLmhlaWdodDtcbiAgICAgICAgcmV0dXJuICF3aWR0aCAmJiAhaGVpZ2h0O1xuICAgIH1cbiAgICB2YXIgX2IgPSB0YXJnZXQsIG9mZnNldFdpZHRoID0gX2Iub2Zmc2V0V2lkdGgsIG9mZnNldEhlaWdodCA9IF9iLm9mZnNldEhlaWdodDtcbiAgICByZXR1cm4gIShvZmZzZXRXaWR0aCB8fCBvZmZzZXRIZWlnaHQgfHwgdGFyZ2V0LmdldENsaWVudFJlY3RzKCkubGVuZ3RoKTtcbn07XG52YXIgaXNFbGVtZW50ID0gZnVuY3Rpb24gKG9iaikge1xuICAgIHZhciBfYSwgX2I7XG4gICAgaWYgKG9iaiBpbnN0YW5jZW9mIEVsZW1lbnQpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHZhciBzY29wZSA9IChfYiA9IChfYSA9IG9iaikgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLm93bmVyRG9jdW1lbnQpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5kZWZhdWx0VmlldztcbiAgICByZXR1cm4gISEoc2NvcGUgJiYgb2JqIGluc3RhbmNlb2Ygc2NvcGUuRWxlbWVudCk7XG59O1xudmFyIGlzUmVwbGFjZWRFbGVtZW50ID0gZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIHN3aXRjaCAodGFyZ2V0LnRhZ05hbWUpIHtcbiAgICAgICAgY2FzZSAnSU5QVVQnOlxuICAgICAgICAgICAgaWYgKHRhcmdldC50eXBlICE9PSAnaW1hZ2UnKSB7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIGNhc2UgJ1ZJREVPJzpcbiAgICAgICAgY2FzZSAnQVVESU8nOlxuICAgICAgICBjYXNlICdFTUJFRCc6XG4gICAgICAgIGNhc2UgJ09CSkVDVCc6XG4gICAgICAgIGNhc2UgJ0NBTlZBUyc6XG4gICAgICAgIGNhc2UgJ0lGUkFNRSc6XG4gICAgICAgIGNhc2UgJ0lNRyc6XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufTtcbmV4cG9ydCB7IGlzU1ZHLCBpc0hpZGRlbiwgaXNFbGVtZW50LCBpc1JlcGxhY2VkRWxlbWVudCB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/utils/element.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/utils/freeze.js":
/*!******************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/utils/freeze.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"freeze\": () => (/* binding */ freeze)\n/* harmony export */ });\nvar freeze = function (obj) { return Object.freeze(obj); };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL3V0aWxzL2ZyZWV6ZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sOEJBQThCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtaW5maW5pdGUtZ3JpZC1zY3JvbGxlci8uL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvdXRpbHMvZnJlZXplLmpzP2ZjZjQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHZhciBmcmVlemUgPSBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBPYmplY3QuZnJlZXplKG9iaik7IH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/utils/freeze.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/utils/global.js":
/*!******************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/utils/global.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"global\": () => (/* binding */ global)\n/* harmony export */ });\nvar global = typeof window !== 'undefined' ? window : {};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL3V0aWxzL2dsb2JhbC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFjdC1pbmZpbml0ZS1ncmlkLXNjcm9sbGVyLy4vbm9kZV9tb2R1bGVzL0BqdWdnbGUvcmVzaXplLW9ic2VydmVyL2xpYi91dGlscy9nbG9iYWwuanM/Y2I3NiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdmFyIGdsb2JhbCA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnID8gd2luZG93IDoge307XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/utils/global.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/utils/process.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/utils/process.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"process\": () => (/* binding */ process)\n/* harmony export */ });\n/* harmony import */ var _algorithms_hasActiveObservations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../algorithms/hasActiveObservations */ \"./node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js\");\n/* harmony import */ var _algorithms_hasSkippedObservations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../algorithms/hasSkippedObservations */ \"./node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js\");\n/* harmony import */ var _algorithms_deliverResizeLoopError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../algorithms/deliverResizeLoopError */ \"./node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js\");\n/* harmony import */ var _algorithms_broadcastActiveObservations__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../algorithms/broadcastActiveObservations */ \"./node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js\");\n/* harmony import */ var _algorithms_gatherActiveObservationsAtDepth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../algorithms/gatherActiveObservationsAtDepth */ \"./node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js\");\n\n\n\n\n\nvar process = function () {\n    var depth = 0;\n    (0,_algorithms_gatherActiveObservationsAtDepth__WEBPACK_IMPORTED_MODULE_4__.gatherActiveObservationsAtDepth)(depth);\n    while ((0,_algorithms_hasActiveObservations__WEBPACK_IMPORTED_MODULE_0__.hasActiveObservations)()) {\n        depth = (0,_algorithms_broadcastActiveObservations__WEBPACK_IMPORTED_MODULE_3__.broadcastActiveObservations)();\n        (0,_algorithms_gatherActiveObservationsAtDepth__WEBPACK_IMPORTED_MODULE_4__.gatherActiveObservationsAtDepth)(depth);\n    }\n    if ((0,_algorithms_hasSkippedObservations__WEBPACK_IMPORTED_MODULE_1__.hasSkippedObservations)()) {\n        (0,_algorithms_deliverResizeLoopError__WEBPACK_IMPORTED_MODULE_2__.deliverResizeLoopError)();\n    }\n    return depth > 0;\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL3V0aWxzL3Byb2Nlc3MuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTRFO0FBQ0U7QUFDQTtBQUNVO0FBQ1E7QUFDaEc7QUFDQTtBQUNBLElBQUksNEdBQStCO0FBQ25DLFdBQVcsd0ZBQXFCO0FBQ2hDLGdCQUFnQixvR0FBMkI7QUFDM0MsUUFBUSw0R0FBK0I7QUFDdkM7QUFDQSxRQUFRLDBGQUFzQjtBQUM5QixRQUFRLDBGQUFzQjtBQUM5QjtBQUNBO0FBQ0E7QUFDbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFjdC1pbmZpbml0ZS1ncmlkLXNjcm9sbGVyLy4vbm9kZV9tb2R1bGVzL0BqdWdnbGUvcmVzaXplLW9ic2VydmVyL2xpYi91dGlscy9wcm9jZXNzLmpzP2Q0YzAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaGFzQWN0aXZlT2JzZXJ2YXRpb25zIH0gZnJvbSAnLi4vYWxnb3JpdGhtcy9oYXNBY3RpdmVPYnNlcnZhdGlvbnMnO1xuaW1wb3J0IHsgaGFzU2tpcHBlZE9ic2VydmF0aW9ucyB9IGZyb20gJy4uL2FsZ29yaXRobXMvaGFzU2tpcHBlZE9ic2VydmF0aW9ucyc7XG5pbXBvcnQgeyBkZWxpdmVyUmVzaXplTG9vcEVycm9yIH0gZnJvbSAnLi4vYWxnb3JpdGhtcy9kZWxpdmVyUmVzaXplTG9vcEVycm9yJztcbmltcG9ydCB7IGJyb2FkY2FzdEFjdGl2ZU9ic2VydmF0aW9ucyB9IGZyb20gJy4uL2FsZ29yaXRobXMvYnJvYWRjYXN0QWN0aXZlT2JzZXJ2YXRpb25zJztcbmltcG9ydCB7IGdhdGhlckFjdGl2ZU9ic2VydmF0aW9uc0F0RGVwdGggfSBmcm9tICcuLi9hbGdvcml0aG1zL2dhdGhlckFjdGl2ZU9ic2VydmF0aW9uc0F0RGVwdGgnO1xudmFyIHByb2Nlc3MgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGRlcHRoID0gMDtcbiAgICBnYXRoZXJBY3RpdmVPYnNlcnZhdGlvbnNBdERlcHRoKGRlcHRoKTtcbiAgICB3aGlsZSAoaGFzQWN0aXZlT2JzZXJ2YXRpb25zKCkpIHtcbiAgICAgICAgZGVwdGggPSBicm9hZGNhc3RBY3RpdmVPYnNlcnZhdGlvbnMoKTtcbiAgICAgICAgZ2F0aGVyQWN0aXZlT2JzZXJ2YXRpb25zQXREZXB0aChkZXB0aCk7XG4gICAgfVxuICAgIGlmIChoYXNTa2lwcGVkT2JzZXJ2YXRpb25zKCkpIHtcbiAgICAgICAgZGVsaXZlclJlc2l6ZUxvb3BFcnJvcigpO1xuICAgIH1cbiAgICByZXR1cm4gZGVwdGggPiAwO1xufTtcbmV4cG9ydCB7IHByb2Nlc3MgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/utils/process.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"queueMicroTask\": () => (/* binding */ queueMicroTask)\n/* harmony export */ });\nvar trigger;\nvar callbacks = [];\nvar notify = function () { return callbacks.splice(0).forEach(function (cb) { return cb(); }); };\nvar queueMicroTask = function (callback) {\n    if (!trigger) {\n        var toggle_1 = 0;\n        var el_1 = document.createTextNode('');\n        var config = { characterData: true };\n        new MutationObserver(function () { return notify(); }).observe(el_1, config);\n        trigger = function () { el_1.textContent = \"\" + (toggle_1 ? toggle_1-- : toggle_1++); };\n    }\n    callbacks.push(callback);\n    trigger();\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL3V0aWxzL3F1ZXVlTWljcm9UYXNrLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0EsMkJBQTJCLG1EQUFtRCxjQUFjO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCLDJDQUEyQyxrQkFBa0I7QUFDN0QsZ0NBQWdDO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQzBCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtaW5maW5pdGUtZ3JpZC1zY3JvbGxlci8uL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvdXRpbHMvcXVldWVNaWNyb1Rhc2suanM/YTk5NCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdHJpZ2dlcjtcbnZhciBjYWxsYmFja3MgPSBbXTtcbnZhciBub3RpZnkgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBjYWxsYmFja3Muc3BsaWNlKDApLmZvckVhY2goZnVuY3Rpb24gKGNiKSB7IHJldHVybiBjYigpOyB9KTsgfTtcbnZhciBxdWV1ZU1pY3JvVGFzayA9IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuICAgIGlmICghdHJpZ2dlcikge1xuICAgICAgICB2YXIgdG9nZ2xlXzEgPSAwO1xuICAgICAgICB2YXIgZWxfMSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCcnKTtcbiAgICAgICAgdmFyIGNvbmZpZyA9IHsgY2hhcmFjdGVyRGF0YTogdHJ1ZSB9O1xuICAgICAgICBuZXcgTXV0YXRpb25PYnNlcnZlcihmdW5jdGlvbiAoKSB7IHJldHVybiBub3RpZnkoKTsgfSkub2JzZXJ2ZShlbF8xLCBjb25maWcpO1xuICAgICAgICB0cmlnZ2VyID0gZnVuY3Rpb24gKCkgeyBlbF8xLnRleHRDb250ZW50ID0gXCJcIiArICh0b2dnbGVfMSA/IHRvZ2dsZV8xLS0gOiB0b2dnbGVfMSsrKTsgfTtcbiAgICB9XG4gICAgY2FsbGJhY2tzLnB1c2goY2FsbGJhY2spO1xuICAgIHRyaWdnZXIoKTtcbn07XG5leHBvcnQgeyBxdWV1ZU1pY3JvVGFzayB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"queueResizeObserver\": () => (/* binding */ queueResizeObserver)\n/* harmony export */ });\n/* harmony import */ var _queueMicroTask__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./queueMicroTask */ \"./node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js\");\n\nvar queueResizeObserver = function (cb) {\n    (0,_queueMicroTask__WEBPACK_IMPORTED_MODULE_0__.queueMicroTask)(function ResizeObserver() {\n        requestAnimationFrame(cb);\n    });\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL3V0aWxzL3F1ZXVlUmVzaXplT2JzZXJ2ZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBa0Q7QUFDbEQ7QUFDQSxJQUFJLCtEQUFjO0FBQ2xCO0FBQ0EsS0FBSztBQUNMO0FBQytCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtaW5maW5pdGUtZ3JpZC1zY3JvbGxlci8uL25vZGVfbW9kdWxlcy9AanVnZ2xlL3Jlc2l6ZS1vYnNlcnZlci9saWIvdXRpbHMvcXVldWVSZXNpemVPYnNlcnZlci5qcz9hMzY2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHF1ZXVlTWljcm9UYXNrIH0gZnJvbSAnLi9xdWV1ZU1pY3JvVGFzayc7XG52YXIgcXVldWVSZXNpemVPYnNlcnZlciA9IGZ1bmN0aW9uIChjYikge1xuICAgIHF1ZXVlTWljcm9UYXNrKGZ1bmN0aW9uIFJlc2l6ZU9ic2VydmVyKCkge1xuICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoY2IpO1xuICAgIH0pO1xufTtcbmV4cG9ydCB7IHF1ZXVlUmVzaXplT2JzZXJ2ZXIgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"resizeObservers\": () => (/* binding */ resizeObservers)\n/* harmony export */ });\nvar resizeObservers = [];\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL3V0aWxzL3Jlc2l6ZU9ic2VydmVycy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDMkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFjdC1pbmZpbml0ZS1ncmlkLXNjcm9sbGVyLy4vbm9kZV9tb2R1bGVzL0BqdWdnbGUvcmVzaXplLW9ic2VydmVyL2xpYi91dGlscy9yZXNpemVPYnNlcnZlcnMuanM/YThlNSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcmVzaXplT2JzZXJ2ZXJzID0gW107XG5leHBvcnQgeyByZXNpemVPYnNlcnZlcnMgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js\n");

/***/ }),

/***/ "./node_modules/@juggle/resize-observer/lib/utils/scheduler.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/utils/scheduler.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"scheduler\": () => (/* binding */ scheduler),\n/* harmony export */   \"updateCount\": () => (/* binding */ updateCount)\n/* harmony export */ });\n/* harmony import */ var _process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./process */ \"./node_modules/@juggle/resize-observer/lib/utils/process.js\");\n/* harmony import */ var _global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./global */ \"./node_modules/@juggle/resize-observer/lib/utils/global.js\");\n/* harmony import */ var _queueResizeObserver__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./queueResizeObserver */ \"./node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js\");\n\n\n\nvar watching = 0;\nvar isWatching = function () { return !!watching; };\nvar CATCH_PERIOD = 250;\nvar observerConfig = { attributes: true, characterData: true, childList: true, subtree: true };\nvar events = [\n    'resize',\n    'load',\n    'transitionend',\n    'animationend',\n    'animationstart',\n    'animationiteration',\n    'keyup',\n    'keydown',\n    'mouseup',\n    'mousedown',\n    'mouseover',\n    'mouseout',\n    'blur',\n    'focus'\n];\nvar time = function (timeout) {\n    if (timeout === void 0) { timeout = 0; }\n    return Date.now() + timeout;\n};\nvar scheduled = false;\nvar Scheduler = (function () {\n    function Scheduler() {\n        var _this = this;\n        this.stopped = true;\n        this.listener = function () { return _this.schedule(); };\n    }\n    Scheduler.prototype.run = function (timeout) {\n        var _this = this;\n        if (timeout === void 0) { timeout = CATCH_PERIOD; }\n        if (scheduled) {\n            return;\n        }\n        scheduled = true;\n        var until = time(timeout);\n        (0,_queueResizeObserver__WEBPACK_IMPORTED_MODULE_2__.queueResizeObserver)(function () {\n            var elementsHaveResized = false;\n            try {\n                elementsHaveResized = (0,_process__WEBPACK_IMPORTED_MODULE_0__.process)();\n            }\n            finally {\n                scheduled = false;\n                timeout = until - time();\n                if (!isWatching()) {\n                    return;\n                }\n                if (elementsHaveResized) {\n                    _this.run(1000);\n                }\n                else if (timeout > 0) {\n                    _this.run(timeout);\n                }\n                else {\n                    _this.start();\n                }\n            }\n        });\n    };\n    Scheduler.prototype.schedule = function () {\n        this.stop();\n        this.run();\n    };\n    Scheduler.prototype.observe = function () {\n        var _this = this;\n        var cb = function () { return _this.observer && _this.observer.observe(document.body, observerConfig); };\n        document.body ? cb() : _global__WEBPACK_IMPORTED_MODULE_1__.global.addEventListener('DOMContentLoaded', cb);\n    };\n    Scheduler.prototype.start = function () {\n        var _this = this;\n        if (this.stopped) {\n            this.stopped = false;\n            this.observer = new MutationObserver(this.listener);\n            this.observe();\n            events.forEach(function (name) { return _global__WEBPACK_IMPORTED_MODULE_1__.global.addEventListener(name, _this.listener, true); });\n        }\n    };\n    Scheduler.prototype.stop = function () {\n        var _this = this;\n        if (!this.stopped) {\n            this.observer && this.observer.disconnect();\n            events.forEach(function (name) { return _global__WEBPACK_IMPORTED_MODULE_1__.global.removeEventListener(name, _this.listener, true); });\n            this.stopped = true;\n        }\n    };\n    return Scheduler;\n}());\nvar scheduler = new Scheduler();\nvar updateCount = function (n) {\n    !watching && n > 0 && scheduler.start();\n    watching += n;\n    !watching && scheduler.stop();\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXIvbGliL3V0aWxzL3NjaGVkdWxlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFvQztBQUNGO0FBQzBCO0FBQzVEO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0M7QUFDdEM7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHlFQUFtQjtBQUMzQjtBQUNBO0FBQ0Esc0NBQXNDLGlEQUFPO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0IsK0JBQStCLDREQUF1QjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QyxPQUFPLDREQUF1QiwrQkFBK0I7QUFDMUc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLE9BQU8sK0RBQTBCLCtCQUErQjtBQUM3RztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFjdC1pbmZpbml0ZS1ncmlkLXNjcm9sbGVyLy4vbm9kZV9tb2R1bGVzL0BqdWdnbGUvcmVzaXplLW9ic2VydmVyL2xpYi91dGlscy9zY2hlZHVsZXIuanM/YjAwNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwcm9jZXNzIH0gZnJvbSAnLi9wcm9jZXNzJztcbmltcG9ydCB7IGdsb2JhbCB9IGZyb20gJy4vZ2xvYmFsJztcbmltcG9ydCB7IHF1ZXVlUmVzaXplT2JzZXJ2ZXIgfSBmcm9tICcuL3F1ZXVlUmVzaXplT2JzZXJ2ZXInO1xudmFyIHdhdGNoaW5nID0gMDtcbnZhciBpc1dhdGNoaW5nID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gISF3YXRjaGluZzsgfTtcbnZhciBDQVRDSF9QRVJJT0QgPSAyNTA7XG52YXIgb2JzZXJ2ZXJDb25maWcgPSB7IGF0dHJpYnV0ZXM6IHRydWUsIGNoYXJhY3RlckRhdGE6IHRydWUsIGNoaWxkTGlzdDogdHJ1ZSwgc3VidHJlZTogdHJ1ZSB9O1xudmFyIGV2ZW50cyA9IFtcbiAgICAncmVzaXplJyxcbiAgICAnbG9hZCcsXG4gICAgJ3RyYW5zaXRpb25lbmQnLFxuICAgICdhbmltYXRpb25lbmQnLFxuICAgICdhbmltYXRpb25zdGFydCcsXG4gICAgJ2FuaW1hdGlvbml0ZXJhdGlvbicsXG4gICAgJ2tleXVwJyxcbiAgICAna2V5ZG93bicsXG4gICAgJ21vdXNldXAnLFxuICAgICdtb3VzZWRvd24nLFxuICAgICdtb3VzZW92ZXInLFxuICAgICdtb3VzZW91dCcsXG4gICAgJ2JsdXInLFxuICAgICdmb2N1cydcbl07XG52YXIgdGltZSA9IGZ1bmN0aW9uICh0aW1lb3V0KSB7XG4gICAgaWYgKHRpbWVvdXQgPT09IHZvaWQgMCkgeyB0aW1lb3V0ID0gMDsgfVxuICAgIHJldHVybiBEYXRlLm5vdygpICsgdGltZW91dDtcbn07XG52YXIgc2NoZWR1bGVkID0gZmFsc2U7XG52YXIgU2NoZWR1bGVyID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBTY2hlZHVsZXIoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHRoaXMuc3RvcHBlZCA9IHRydWU7XG4gICAgICAgIHRoaXMubGlzdGVuZXIgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBfdGhpcy5zY2hlZHVsZSgpOyB9O1xuICAgIH1cbiAgICBTY2hlZHVsZXIucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uICh0aW1lb3V0KSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIGlmICh0aW1lb3V0ID09PSB2b2lkIDApIHsgdGltZW91dCA9IENBVENIX1BFUklPRDsgfVxuICAgICAgICBpZiAoc2NoZWR1bGVkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgc2NoZWR1bGVkID0gdHJ1ZTtcbiAgICAgICAgdmFyIHVudGlsID0gdGltZSh0aW1lb3V0KTtcbiAgICAgICAgcXVldWVSZXNpemVPYnNlcnZlcihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgZWxlbWVudHNIYXZlUmVzaXplZCA9IGZhbHNlO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBlbGVtZW50c0hhdmVSZXNpemVkID0gcHJvY2VzcygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZmluYWxseSB7XG4gICAgICAgICAgICAgICAgc2NoZWR1bGVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgdGltZW91dCA9IHVudGlsIC0gdGltZSgpO1xuICAgICAgICAgICAgICAgIGlmICghaXNXYXRjaGluZygpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGVsZW1lbnRzSGF2ZVJlc2l6ZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMucnVuKDEwMDApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmICh0aW1lb3V0ID4gMCkge1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5ydW4odGltZW91dCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5zdGFydCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBTY2hlZHVsZXIucHJvdG90eXBlLnNjaGVkdWxlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLnN0b3AoKTtcbiAgICAgICAgdGhpcy5ydW4oKTtcbiAgICB9O1xuICAgIFNjaGVkdWxlci5wcm90b3R5cGUub2JzZXJ2ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdmFyIGNiID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gX3RoaXMub2JzZXJ2ZXIgJiYgX3RoaXMub2JzZXJ2ZXIub2JzZXJ2ZShkb2N1bWVudC5ib2R5LCBvYnNlcnZlckNvbmZpZyk7IH07XG4gICAgICAgIGRvY3VtZW50LmJvZHkgPyBjYigpIDogZ2xvYmFsLmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBjYik7XG4gICAgfTtcbiAgICBTY2hlZHVsZXIucHJvdG90eXBlLnN0YXJ0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBpZiAodGhpcy5zdG9wcGVkKSB7XG4gICAgICAgICAgICB0aGlzLnN0b3BwZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMub2JzZXJ2ZXIgPSBuZXcgTXV0YXRpb25PYnNlcnZlcih0aGlzLmxpc3RlbmVyKTtcbiAgICAgICAgICAgIHRoaXMub2JzZXJ2ZSgpO1xuICAgICAgICAgICAgZXZlbnRzLmZvckVhY2goZnVuY3Rpb24gKG5hbWUpIHsgcmV0dXJuIGdsb2JhbC5hZGRFdmVudExpc3RlbmVyKG5hbWUsIF90aGlzLmxpc3RlbmVyLCB0cnVlKTsgfSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFNjaGVkdWxlci5wcm90b3R5cGUuc3RvcCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgaWYgKCF0aGlzLnN0b3BwZWQpIHtcbiAgICAgICAgICAgIHRoaXMub2JzZXJ2ZXIgJiYgdGhpcy5vYnNlcnZlci5kaXNjb25uZWN0KCk7XG4gICAgICAgICAgICBldmVudHMuZm9yRWFjaChmdW5jdGlvbiAobmFtZSkgeyByZXR1cm4gZ2xvYmFsLnJlbW92ZUV2ZW50TGlzdGVuZXIobmFtZSwgX3RoaXMubGlzdGVuZXIsIHRydWUpOyB9KTtcbiAgICAgICAgICAgIHRoaXMuc3RvcHBlZCA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBTY2hlZHVsZXI7XG59KCkpO1xudmFyIHNjaGVkdWxlciA9IG5ldyBTY2hlZHVsZXIoKTtcbnZhciB1cGRhdGVDb3VudCA9IGZ1bmN0aW9uIChuKSB7XG4gICAgIXdhdGNoaW5nICYmIG4gPiAwICYmIHNjaGVkdWxlci5zdGFydCgpO1xuICAgIHdhdGNoaW5nICs9IG47XG4gICAgIXdhdGNoaW5nICYmIHNjaGVkdWxlci5zdG9wKCk7XG59O1xuZXhwb3J0IHsgc2NoZWR1bGVyLCB1cGRhdGVDb3VudCB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@juggle/resize-observer/lib/utils/scheduler.js\n");

/***/ }),

/***/ "./src/cellshell.tsx":
/*!***************************!*\
  !*** ./src/cellshell.tsx ***!
  \***************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(" // cellshell.tsx\n// copyright (c) 2019-2022 Henrik Bechmann, Toronto, Licence: MIT\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\nvar react_1 = __importStar(__webpack_require__(/*! react */ \"react\"));\n\nvar requestidlecallback_1 = __webpack_require__(/*! requestidlecallback */ \"./node_modules/requestidlecallback/index.js\");\n\nvar react_reverse_portal_1 = __webpack_require__(/*! react-reverse-portal */ \"./node_modules/react-reverse-portal/dist/web/index.js\");\n\nvar placeholder_1 = __importDefault(__webpack_require__(/*! ./placeholder */ \"./src/placeholder.tsx\"));\n\nvar cradle_1 = __webpack_require__(/*! ./cradle */ \"./src/cradle.tsx\");\n\nvar IDLECALLBACK_TIMEOUT = 8000; // TODO experimentally high!!\n\nvar CellShell = function CellShell(_a) {\n  var orientation = _a.orientation,\n      cellHeight = _a.cellHeight,\n      cellWidth = _a.cellWidth,\n      index = _a.index,\n      callbacks = _a.callbacks,\n      getItem = _a.getItem,\n      listsize = _a.listsize,\n      placeholder = _a.placeholder,\n      instanceID = _a.instanceID,\n      scrollerName = _a.scrollerName,\n      scrollerID = _a.scrollerID;\n  var portalHandler = (0, react_1.useContext)(cradle_1.CradlePortalsContext);\n\n  var _b = (0, react_1.useState)({\n    overflow: 'hidden'\n  }),\n      styles = _b[0],\n      saveStyles = _b[1];\n\n  var _c = (0, react_1.useState)('setup'),\n      cellStatus = _c[0],\n      setCellStatus = _c[1];\n\n  var shellRef = (0, react_1.useRef)(null); // const instanceIDRef = useRef(instanceID)\n\n  var isMountedRef = (0, react_1.useRef)(true);\n  var portaldataRef = (0, react_1.useRef)(null); // for unmount\n\n  (0, react_1.useEffect)(function () {\n    return function () {\n      isMountedRef.current = false;\n    };\n  }, []); // ----------------- [ placeholder definition ] -------------------------\n\n  var customplaceholder = (0, react_1.useMemo)(function () {\n    return placeholder ? react_1[\"default\"].createElement(placeholder, {\n      index: index,\n      listsize: listsize\n    }) : null;\n  }, [placeholder, listsize]);\n  var placeholderRef = (0, react_1.useRef)(null);\n  placeholderRef.current = (0, react_1.useMemo)(function () {\n    var placeholder = customplaceholder ? customplaceholder : react_1[\"default\"].createElement(placeholder_1[\"default\"], {\n      index: index,\n      listsize: listsize,\n      error: false\n    });\n    return placeholder;\n  }, [index, customplaceholder, listsize]); // ---------------- [ end of placeholder definition ] ------------------------\n\n  var requestidlecallback = window['requestIdleCallback'] ? window['requestIdleCallback'] : requestidlecallback_1.requestIdleCallback;\n  var cancelidlecallback = window['cancelIdleCallback'] ? window['cancelIdleCallback'] : requestidlecallback_1.cancelIdleCallback;\n  var requestIdleCallbackIdRef = (0, react_1.useRef)(null); // initialize cell content\n\n  (0, react_1.useEffect)(function () {\n    portaldataRef.current = portalHandler.fetchOrCreatePortal(index, placeholderRef.current);\n    var hasUserContent = !!portaldataRef.current.hasusercontent; // previous InPortal creation for index\n\n    var reverseportal = portaldataRef.current.reverseportal;\n    contentPortalRef.current = react_1[\"default\"].createElement(react_reverse_portal_1.OutPortal, {\n      node: reverseportal\n    });\n\n    if (!hasUserContent) {\n      setCellStatus('getusercontent');\n    } else {\n      portaldataRef.current.isReparenting = true;\n      if (isMountedRef.current) setCellStatus('ready');\n    } // unmount\n\n\n    return function () {\n      cancelidlecallback(requestIdleCallbackIdRef.current);\n    };\n  }, []); // cradle invariant ondemand callback parameter value\n\n  var getElementData = (0, react_1.useCallback)(function () {\n    return [index, shellRef];\n  }, []); // initialize callbacks\n\n  (0, react_1.useEffect)(function () {\n    var localcalls = callbacks;\n    localcalls.setElementData && localcalls.setElementData(getElementData(), 'register');\n    return function () {\n      localcalls.setElementData && localcalls.setElementData(getElementData(), 'unregister');\n    };\n  }, [callbacks]); // ---------------------[ end of configure observer ]-------------------------\n  // set styles\n\n  (0, react_1.useEffect)(function () {\n    var newStyles = getShellStyles(orientation, cellHeight, cellWidth, styles);\n\n    if (isMountedRef.current) {\n      saveStyles(newStyles);\n    }\n  }, [orientation, cellHeight, cellWidth]);\n  var contentPortalRef = (0, react_1.useRef)(null);\n  (0, react_1.useEffect)(function () {\n    switch (cellStatus) {\n      case 'setup':\n        // no-op\n        break;\n\n      case 'getusercontent':\n        {\n          requestIdleCallbackIdRef.current = requestidlecallback(function () {\n            return __awaiter(void 0, void 0, void 0, function () {\n              var usercontent, reverseportal;\n              return __generator(this, function (_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4\n                    /*yield*/\n                    , getItem(index)];\n\n                  case 1:\n                    usercontent = _a.sent();\n\n                    if (isMountedRef.current) {\n                      if (usercontent) {\n                        portaldataRef.current.hasusercontent = true;\n                        portaldataRef.current = portalHandler.updatePortal(index, usercontent);\n                        reverseportal = portaldataRef.current.reverseportal;\n                        portaldataRef.current.isReparenting = true;\n                        contentPortalRef.current = react_1[\"default\"].createElement(react_reverse_portal_1.OutPortal, {\n                          node: reverseportal\n                        });\n                      } else {\n                        console.log('ERROR', 'no content item');\n                      }\n\n                      setCellStatus('ready');\n                    }\n\n                    return [2\n                    /*return*/\n                    ];\n                }\n              });\n            });\n          }, {\n            timeout: IDLECALLBACK_TIMEOUT\n          });\n          break;\n        }\n\n      case 'ready':\n        {\n          break;\n        }\n    }\n  }, [cellStatus]);\n  return react_1[\"default\"].createElement(\"div\", {\n    ref: shellRef,\n    \"data-type\": 'cellshell',\n    \"data-scrollerid\": scrollerID,\n    \"data-index\": index,\n    \"data-instanceid\": instanceID,\n    style: styles\n  }, cellStatus != 'setup' && contentPortalRef.current);\n}; // CellShell\n\n\nvar getShellStyles = function getShellStyles(orientation, cellHeight, cellWidth, styles) {\n  var styleset = Object.assign({\n    position: 'relative'\n  }, styles);\n\n  if (orientation == 'horizontal') {\n    styleset.width = cellWidth ? cellWidth + 'px' : 'auto';\n    styleset.height = 'auto';\n  } else if (orientation === 'vertical') {\n    styleset.width = 'auto';\n    styleset.height = cellHeight ? cellHeight + 'px' : 'auto';\n  }\n\n  return styleset;\n};\n\nexports[\"default\"] = CellShell;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/cellshell.tsx\n");

/***/ }),

/***/ "./src/cradle.tsx":
/*!************************!*\
  !*** ./src/cradle.tsx ***!
  \************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("// cradle.tsx\n// copyright (c) 2019-2022 Henrik Bechmann, Toronto, Licence: MIT\n\n/*\n    - check need for both model and view component lists\n*/\n\n/*\n    Description\n    -----------\n    The GridStroller provides the illusion of infinite scrolling through the use of a data 'cradle' inside a viewport.\n    The illusion is maintained by synchronizing changes in cradle content with cradle location inside a scrollblock, such\n    that as the scrollblock is moved, the cradle moves oppositely in the scrollblock (to stay visible within the viewport).\n    The scrollblock is sized to approximate the list being viewed, so as to have a scroll thumb size and position which\n    realistically reflects the size of the list being shown.\n\n    The position of the cradle is controlled by a 'axis' which is a 0px height/width (along the medial - ScrollBlock can be\n    verticsl or horizontal). The purpose of the axis is to act as a 'fold', above which cell content expands 'upwards', and\n    below which the cell content expands  'downwards'. GridScroller can be viewed vertically or horizontally. When horizontal,\n    the axis has a 0px width, so that the 'fold' is vertical, and cells expand to the left and right.\n\n    The axis is controlled to always be in the at the leading edge of the leading cellrow of the viewport. Thus\n    in vertical orientation, the axis 'top' css attribute is always equal to the 'scrollTop' position of the scrollblock,\n    plus an adjustment. The adjustment is the result of the alignment of the axis in relation to the top-(or left-)most cell\n    in the viewport (the 'reference' row). The axis can only be placed at the leading edge of the first visible\n    cell in the viewport. Therefore the axis offset from the leading edge of the viewport can be anywhere from minus to\n    plus the length of the leading row. The exact amount depends on where the 'breakpoint' of transition notification is set for\n    cells crossing the viewport threshold (and can be configured). The default of the breakpoint is .5 (half the length of the cell).\n\n    Technically, there are several reference points tracked by the GridScroller. These are:\n        - axisReferenceIndex (the virtual index of the item controlling the location of the axis)\n            The axisReferenceIndex is also used to allocate items above (lower index value) and below (same or higher index value)\n            the fold\n        - cradleReferenceIndex (the virtual index of the item defining the leading bound of the cradle content)\n        - axisPixelOffset (pixels - plus or minus - that the axis is placed in relation to the viewport's leading edge)\n    \n    These reference points are applied to the following structures:\n        - the viewport\n        - the scrollblock\n        - the cradle, consisting of\n            - the axis (contains cradle head and tail)\n            - the head (contains leading items)\n            - the tail (contains trailing items)\n\n    Structure details:\n        the cradle content consists of\n        - the number of rows that are visible in the viewport (according to the default parameters)\n            - this typically includes one partially visible row\n        - the number of runway rows specified in the parameters, times 2 (one et for the head; one for the tail)\n        - the number of items is the number of rows times the 'crosscount' the lateral number of cells.\n        - the last row might consist of fewer items than crosscount, to match the maximum listsize\n        - the cradleRowcount (visible default rows + runwayRowcountSpec * 2) and viewpointRowcount (visble rows;typicall one partial)\n\n    Item containers:\n        Client cell content is contained in CellShell's, which are configured according to GridScroller's input parameters.\n        The ItemCell's are in turn contained in CSS grid structures. There are two grid structures - one in the cradle head,\n        and one in the cradle tail. Each grid structure is allowed uniform padding and gaps - identical between the two.\n\n    Overscroll handling:\n        Owing to the weight of the code, and potential rapidity of scrolling, there is an overscroll protocol.\n        if the overscroll is such that part of the cradle is still within the viewport boundaries, then the overscroll\n        is calculated as the number of cell rows that would fit (completely or partially) in the space between the edge of\n        the cradle that is receding from a viewport edge.\n\n        If the overshoot is such that the cradle has entirely passed out of the viewport, the GridScroller goes into 'Repositoining'\n        mode, meaning that it tracks relative location of the axis edge of the viewport, and repaints the cradle accroding to\n        this position when the scrolling stops.\n*/\n\n/*\n    Cradle is activated by interrupts:\n    - resizing of the viewport (1)\n    - observer callbacks:\n        - cradle viewport intersection for repositioning when the cradle races out of scope - by scroll (2)\n        - cellShell viewport intersection which triggers rolling of content - by scroll (3)\n            - rolling content triggers re-allocation of content between cradle wings\n        - cradle wing resize (responding to variable length cell changes) which triggers reconfiguration (4)\n    - pivot - change of orientation (5)\n    - host change of other configuration specs (6)\n*/\n\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.CradlePortalsContext = void 0;\n\nvar react_1 = __importStar(__webpack_require__(/*! react */ \"react\"));\n\nvar viewport_1 = __webpack_require__(/*! ./viewport */ \"./src/viewport.tsx\"); // popup position tracker for repositioning\n\n\nvar scrolltracker_1 = __importDefault(__webpack_require__(/*! ./scrolltracker */ \"./src/scrolltracker.tsx\")); // support code\n\n\nvar portalhandler_1 = __webpack_require__(/*! ./cradle/portalhandler */ \"./src/cradle/portalhandler.tsx\");\n\nvar scrollhandler_1 = __importDefault(__webpack_require__(/*! ./cradle/scrollhandler */ \"./src/cradle/scrollhandler.tsx\"));\n\nvar statehandler_1 = __importDefault(__webpack_require__(/*! ./cradle/statehandler */ \"./src/cradle/statehandler.tsx\"));\n\nvar contenthandler_1 = __importDefault(__webpack_require__(/*! ./cradle/contenthandler */ \"./src/cradle/contenthandler.tsx\"));\n\nvar scaffoldhandler_1 = __importDefault(__webpack_require__(/*! ./cradle/scaffoldhandler */ \"./src/cradle/scaffoldhandler.tsx\"));\n\nvar interrupthandler_1 = __importDefault(__webpack_require__(/*! ./cradle/interrupthandler */ \"./src/cradle/interrupthandler.tsx\"));\n\nvar servicehandler_1 = __importDefault(__webpack_require__(/*! ./cradle/servicehandler */ \"./src/cradle/servicehandler.tsx\"));\n\nvar styleshandler_1 = __importDefault(__webpack_require__(/*! ./cradle/styleshandler */ \"./src/cradle/styleshandler.tsx\")); // for children\n\n\nexports.CradlePortalsContext = react_1[\"default\"].createContext(null);\nvar portalrootstyle = {\n  display: 'none'\n}; // static \n// component\n\nvar Cradle = function Cradle(_a) {\n  var _b;\n\n  var gridSpecs = _a.gridSpecs,\n      runwayRowcountSpec = _a.runwayRowcountSpec,\n      listsize = _a.listsize,\n      defaultVisibleIndex = _a.defaultVisibleIndex,\n      getItem = _a.getItem,\n      placeholder = _a.placeholder,\n      functions = _a.functions,\n      styles = _a.styles,\n      scrollerName = _a.scrollerName,\n      scrollerID = _a.scrollerID,\n      triggerlineOffset = _a.triggerlineOffset;\n  if (listsize == 0) return; // nothing to do\n  // ========================[ DATA SETUP ]========================\n  // unpack gridSpecs\n\n  var orientation = gridSpecs.orientation,\n      gap = gridSpecs.gap,\n      padding = gridSpecs.padding,\n      cellHeight = gridSpecs.cellHeight,\n      cellWidth = gridSpecs.cellWidth,\n      layout = gridSpecs.layout,\n      dense = gridSpecs.dense; // get viewport context\n\n  var viewportInterruptProperties = (0, react_1.useContext)(viewport_1.ViewportInterrupt);\n  var viewportInterruptPropertiesRef = (0, react_1.useRef)(null);\n  viewportInterruptPropertiesRef.current = viewportInterruptProperties; // for closures\n\n  var viewportDimensions = viewportInterruptProperties.viewportDimensions;\n  var viewportheight = viewportDimensions.height,\n      viewportwidth = viewportDimensions.width; // state\n\n  var _c = (0, react_1.useState)('setup'),\n      cradleState = _c[0],\n      setCradleState = _c[1];\n\n  var cradleStateRef = (0, react_1.useRef)(null); // access by closures\n\n  cradleStateRef.current = cradleState; // controls\n\n  var isMountedRef = (0, react_1.useRef)(true); // cradle scaffold elements refs\n\n  var headCradleElementRef = (0, react_1.useRef)(null);\n  var tailCradleElementRef = (0, react_1.useRef)(null);\n  var axisCradleElementRef = (0, react_1.useRef)(null);\n  var headTriggerlineCradleElementRef = (0, react_1.useRef)(null);\n  var tailTriggerlineCradleElementRef = (0, react_1.useRef)(null); // scaffold bundle\n\n  var cradleElementsRef = (0, react_1.useRef)({\n    headRef: headCradleElementRef,\n    tailRef: tailCradleElementRef,\n    axisRef: axisCradleElementRef,\n    headTriggerlineRef: headTriggerlineCradleElementRef,\n    tailTriggerlineRef: tailTriggerlineCradleElementRef\n  }); // ------------------------[ calculated data ]------------------------\n  // configuration calculations\n\n  var crosscount = (0, react_1.useMemo)(function () {\n    var viewportsize = orientation == 'horizontal' ? viewportheight : viewportwidth;\n    var crossLength = orientation == 'horizontal' ? cellHeight : cellWidth;\n    var viewportlengthforcalc = viewportsize - padding * 2 + gap; // length of viewport\n\n    var tilelengthforcalc = crossLength + gap;\n    tilelengthforcalc = Math.min(tilelengthforcalc, viewportlengthforcalc); // result cannot be less than 1\n\n    return Math.floor(viewportlengthforcalc / tilelengthforcalc);\n  }, [orientation, gap, padding, cellWidth, cellHeight, viewportheight, viewportwidth]);\n\n  var _d = (0, react_1.useMemo)(function () {\n    var viewportLength, rowLength;\n\n    if (orientation == 'vertical') {\n      viewportLength = viewportheight;\n      rowLength = cellHeight;\n    } else {\n      viewportLength = viewportwidth;\n      rowLength = cellWidth;\n    }\n\n    rowLength += gap;\n    var viewportRowcount = Math.ceil(viewportLength / rowLength);\n    var viewportVisibleRowcount = Math.floor(viewportLength / rowLength);\n    var listRowcount = Math.ceil(listsize / crosscount);\n    var calculatedCradleRowcount = viewportRowcount + runwayRowcountSpec * 2;\n    var cradleRowcount = Math.min(listRowcount, calculatedCradleRowcount);\n    var runwayRowcount;\n\n    if (calculatedCradleRowcount >= cradleRowcount) {\n      runwayRowcount = runwayRowcountSpec;\n    } else {\n      var diff = cradleRowcount - calculatedCradleRowcount;\n      runwayRowcount -= Math.floor(diff / 2);\n      runwayRowcount = Math.max(0, runwayRowcount);\n    }\n\n    var itemcount = cradleRowcount * crosscount;\n\n    if (itemcount > listsize) {\n      itemcount = listsize;\n      cradleRowcount = Math.ceil(itemcount / crosscount);\n    }\n\n    return [cradleRowcount, viewportRowcount, viewportVisibleRowcount, listRowcount, runwayRowcount];\n  }, [orientation, gap, // padding,\n  cellWidth, cellHeight, viewportheight, viewportwidth, listsize, runwayRowcountSpec, crosscount]),\n      cradleRowcount = _d[0],\n      viewportRowcount = _d[1],\n      viewportVisibleRowcount = _d[2],\n      // max number of rows completely visible at once\n  listRowcount = _d[3],\n      runwayRowcount = _d[4]; // ======================[ internal and external callbacks ]=====================\n  // utility to register or unregister cradle item elements\n\n\n  var setItemElementData = (0, react_1.useCallback)(function (itemElementData, registrationType) {\n    var index = itemElementData[0],\n        shellref = itemElementData[1];\n\n    if (registrationType == 'register') {\n      contentHandler.itemElements.set(index, shellref);\n    } else if (registrationType == 'unregister') {\n      contentHandler.itemElements[\"delete\"](index);\n    }\n  }, []);\n  var internalCallbacksRef = (0, react_1.useRef)({\n    setElementData: setItemElementData\n  }); // host callbacks\n\n  var referenceIndexCallbackRef = (0, react_1.useRef)(functions === null || functions === void 0 ? void 0 : functions.referenceIndexCallback);\n  var externalCallbacksRef = (0, react_1.useRef)({\n    referenceIndexCallbackRef: referenceIndexCallbackRef\n  }); // ====================[ bundle parameters for handlers ]===================\n  // bundle cradle props to pass to handlers\n\n  var cradleInheritedPropertiesRef = (0, react_1.useRef)(null); // access by closures and support functions\n  // up to data values\n\n  cradleInheritedPropertiesRef.current = {\n    // gridSpecs\n    orientation: orientation,\n    gap: gap,\n    padding: padding,\n    cellHeight: cellHeight,\n    cellWidth: cellWidth,\n    layout: layout,\n    dense: dense,\n    // ...rest\n    listsize: listsize,\n    defaultVisibleIndex: defaultVisibleIndex,\n    getItem: getItem,\n    placeholder: placeholder,\n    scrollerName: scrollerName,\n    scrollerID: scrollerID,\n    // objects\n    functions: functions,\n    styles: styles,\n    triggerlineOffset: triggerlineOffset\n  }; // configuration properties to share\n\n  var cradleInternalPropertiesRef = (0, react_1.useRef)(null);\n  cradleInternalPropertiesRef.current = {\n    crosscount: crosscount,\n    cradleRowcount: cradleRowcount,\n    viewportRowcount: viewportRowcount,\n    viewportVisibleRowcount: viewportVisibleRowcount,\n    listRowcount: listRowcount,\n    runwayRowcount: runwayRowcount,\n    isMountedRef: isMountedRef,\n    cradleElementsRef: cradleElementsRef,\n    // for stateHandler\n    cradleStateRef: cradleStateRef,\n    setCradleState: setCradleState\n  }; // placeholder in cradleParameters to make available individual handlers\n\n  var handlersRef = (0, react_1.useRef)(null); // cradle parameters MASTER BUNDLE\n\n  var cradleParameters = {\n    handlersRef: handlersRef,\n    viewportInterruptPropertiesRef: viewportInterruptPropertiesRef,\n    cradleInheritedPropertiesRef: cradleInheritedPropertiesRef,\n    cradleInternalPropertiesRef: cradleInternalPropertiesRef,\n    internalCallbacksRef: internalCallbacksRef,\n    externalCallbacksRef: externalCallbacksRef\n  }; // ongoing source of handlers\n\n  if (!handlersRef.current) {\n    handlersRef.current = getCradleHandlers(cradleParameters);\n  } // make handlers directly available to cradle code\n\n\n  var _e = handlersRef.current,\n      portalHandler = _e.portalHandler,\n      interruptHandler = _e.interruptHandler,\n      scrollHandler = _e.scrollHandler,\n      stateHandler = _e.stateHandler,\n      contentHandler = _e.contentHandler,\n      scaffoldHandler = _e.scaffoldHandler,\n      serviceHandler = _e.serviceHandler,\n      stylesHandler = _e.stylesHandler; // ===================[ INITIALIZATION effects ]=========================\n  // this is an immediate response to reparenting (moving portals). Reparenting resets scroll\n  // positions for nested infinitegridscrollers.\n  // the code restores scroll as soon as cradle is invoked after reparenting\n\n  if ((_b = viewportInterruptProperties.portal) === null || _b === void 0 ? void 0 : _b.isReparenting) {\n    viewportInterruptProperties.portal.isReparenting = false;\n    var cradlePositionData = scaffoldHandler.cradlePositionData;\n    viewportInterruptProperties.elementref.current[cradlePositionData.blockScrollProperty] = Math.max(0, cradlePositionData.blockScrollPos);\n  } // clear mounted flag on unmount\n\n\n  (0, react_1.useLayoutEffect)(function () {\n    // unmount\n    return function () {\n      isMountedRef.current = false;\n    };\n  }, []); //send callback functions to host\n\n  (0, react_1.useEffect)(function () {\n    referenceIndexCallbackRef.current = functions === null || functions === void 0 ? void 0 : functions.referenceIndexCallback;\n    if (!functions.getCallbacks) return;\n    var scrollToItem = serviceHandler.scrollToItem,\n        getVisibleList = serviceHandler.getVisibleList,\n        getContentList = serviceHandler.getContentList,\n        reload = serviceHandler.reload;\n    var callbacks = {\n      scrollToItem: scrollToItem,\n      getVisibleList: getVisibleList,\n      getContentList: getContentList,\n      reload: reload\n    };\n    functions.getCallbacks(callbacks);\n  }, []); // initialize window scroll listener\n\n  (0, react_1.useEffect)(function () {\n    var viewportdata = viewportInterruptPropertiesRef.current;\n    viewportdata.elementref.current.addEventListener('scroll', scrollHandler.onScroll);\n    return function () {\n      viewportdata.elementref.current && viewportdata.elementref.current.removeEventListener('scroll', scrollHandler.onScroll);\n    };\n  }, []); // observer support\n\n  /*\n      There are two interection observers, one for the cradle, and another for triggerlines;\n          both against the viewport.\n      There is also a resize observer for the cradle wings, to respond to size changes of\n          variable cells.\n  */\n  // intersection observer for cradle body\n  // this sets up an IntersectionObserver of the cradle against the viewport. When the\n  // cradle goes out of the observer scope, the \"repositioningRender\" cradle state is triggerd.\n  // Also, intersection observer for cradle axis triggerlines, and cradle resizeobserver\n\n  (0, react_1.useEffect)(function () {\n    var cradleElements = scaffoldHandler.elements;\n    var cradleintersectobserver = interruptHandler.cradleIntersect.createObserver();\n    interruptHandler.cradleIntersect.connectElements();\n    var triggerobserver = interruptHandler.axisTriggerlinesIntersect.createObserver();\n    interruptHandler.axisTriggerlinesIntersect.connectElements();\n    var resizeobserver = interruptHandler.cradleResize.createObserver();\n    interruptHandler.cradleResize.connectElements();\n    return function () {\n      cradleintersectobserver.disconnect();\n      triggerobserver.disconnect();\n      resizeobserver.disconnect();\n    };\n  }, []); // =====================[ RECONFIGURATION effects ]======================\n  // trigger resizing based on viewport state\n\n  (0, react_1.useEffect)(function () {\n    if (cradleStateRef.current == 'setup') return;\n\n    if (viewportInterruptProperties.isResizing) {\n      var signals = interruptHandler.signals;\n      signals.pauseTriggerlinesObserver = true;\n      signals.pauseCradleIntersectionObserver = true;\n      signals.pauseCradleResizeObserver = true;\n      signals.pauseScrollingEffects = true;\n      setCradleState('resizing');\n    } // complete resizing mode\n\n\n    if (!viewportInterruptProperties.isResizing && cradleStateRef.current == 'resizing') {\n      setCradleState('finishresize');\n    }\n  }, [viewportInterruptProperties.isResizing]); // reload for changed size parameters\n\n  (0, react_1.useEffect)(function () {\n    if (cradleStateRef.current == 'setup') return;\n    var signals = interruptHandler.signals; // TODO: bundle these as interruptHandler.pauseEffects(), then interruptHandler.resumeEffects()\n\n    signals.pauseCradleIntersectionObserver = true;\n    signals.pauseTriggerlinesObserver = true;\n    signals.pauseScrollingEffects = true;\n    setCradleState('reconfigure');\n  }, [listsize, cellHeight, cellWidth, gap, padding, triggerlineOffset]); // trigger pivot *only* on change in orientation\n\n  (0, react_1.useEffect)(function () {\n    scaffoldHandler.cradlePositionData.blockScrollProperty = orientation == \"vertical\" ? \"scrollTop\" : \"scrollLeft\";\n    if (cradleStateRef.current == 'setup') return;\n    var _a = cradleInheritedPropertiesRef.current,\n        cellWidth = _a.cellWidth,\n        cellHeight = _a.cellHeight,\n        gap = _a.gap; // get previous ratio\n\n    var previousCellPixelLength = (orientation == 'vertical' ? cellWidth : cellHeight) + gap;\n    var previousAxisOffset = scaffoldHandler.cradlePositionData.targetAxisPixelOffset;\n    var previousratio = previousAxisOffset / previousCellPixelLength;\n    var pivotCellPixelLength = (orientation == 'vertical' ? cellHeight : cellWidth) + gap;\n    var pivotAxisOffset = previousratio * pivotCellPixelLength;\n    scaffoldHandler.cradlePositionData.targetAxisPixelOffset = Math.round(pivotAxisOffset);\n    var signals = interruptHandler.signals;\n    signals.pauseTriggerlinesObserver = true;\n    signals.pauseScrollingEffects = true;\n    signals.pauseCradleIntersectionObserver = true;\n    var cradleContent = contentHandler.content;\n    cradleContent.headCellComponents = [];\n    cradleContent.tailCellComponents = [];\n    setCradleState('pivot');\n  }, [orientation]); // =====================[ STYLES ]===========================\n  // styles for the six scaffold components\n\n  var _f = (0, react_1.useMemo)(function () {\n    return stylesHandler.setCradleStyles({\n      orientation: orientation,\n      cellHeight: cellHeight,\n      cellWidth: cellWidth,\n      gap: gap,\n      padding: padding,\n      viewportheight: viewportheight,\n      viewportwidth: viewportwidth,\n      crosscount: crosscount,\n      userstyles: styles,\n      triggerlineOffset: triggerlineOffset\n    });\n  }, [orientation, cellHeight, cellWidth, gap, padding, viewportheight, viewportwidth, crosscount, styles, triggerlineOffset]),\n      cradleHeadStyle = _f[0],\n      cradleTailStyle = _f[1],\n      cradleAxisStyle = _f[2],\n      triggerlineHeadStyle = _f[3],\n      triggerlineTailStyle = _f[4],\n      cradleDividerStyle = _f[5]; // =====================[ state management ]==========================\n  // this is the core state engine\n  // useLayout for suppressing flashes\n\n\n  (0, react_1.useLayoutEffect)(function () {\n    switch (cradleState) {\n      case 'setup':\n        {\n          // cycle to allow for ref config\n          setCradleState('dosetup'); // load grid\n\n          break;\n        }\n      // renderupdatedcontent is called from updateCradleContent. \n      // it is required to integrate changed DOM configurations before 'ready' is displayed\n\n      case 'renderupdatedcontent':\n        {\n          setCradleState('ready');\n          break;\n        }\n\n      case 'startreposition':\n        {\n          interruptHandler.signals.pauseTriggerlinesObserver = true; // avoid recursive cradle intersection interrupts\n\n          interruptHandler.signals.pauseCradleIntersectionObserver = true;\n          interruptHandler.signals.repositioningRequired = false; // because now underway\n\n          setCradleState('repositioningRender');\n          break;\n        }\n\n      /*\n          the following 6 cradle states all resolve with\n          a chain starting with setCradleContent,\n          and ending with 'normalizesignals'\n      */\n\n      case 'dosetup':\n      case 'doreposition':\n      case 'finishresize':\n      case 'pivot':\n      case 'reconfigure':\n      case 'reload':\n        {\n          var cradleContent_1 = contentHandler.content; // TODO: retain existing portals to the extent possible\n\n          cradleContent_1.headCellComponents = [];\n          cradleContent_1.tailCellComponents = [];\n          handlersRef.current.portalHandler.resetScrollerPortalRepository();\n          contentHandler.setCradleContent(cradleState);\n          setCradleState('normalizesignals');\n          break;\n        }\n      // case 'prerender': {\n      //     setCradleState('normalizesignals')\n      //     break\n      // }\n\n      case 'normalizesignals':\n        {\n          // prioritize interrupts\n          if (viewportInterruptPropertiesRef.current.isResizing) {\n            setCradleState('resizing');\n          } else if (interruptHandler.signals.repositioningRequired) {\n            setCradleState('startreposition');\n          } else {\n            var signals = interruptHandler.signals;\n            signals.pauseTriggerlinesObserver && (signals.pauseTriggerlinesObserver = false);\n            signals.pauseCradleIntersectionObserver && (signals.pauseCradleIntersectionObserver = false);\n            signals.pauseScrollingEffects && (signals.pauseScrollingEffects = false);\n            setCradleState('ready');\n          }\n\n          break;\n        }\n    }\n  }, [cradleState]); // standard rendering states\n\n  (0, react_1.useEffect)(function () {\n    switch (cradleState) {\n      // repositioningRender and repositioningContinuation are toggled to generate continuous \n      // reposiioning renders\n      case 'repositioningRender':\n        break;\n\n      case 'repositioningContinuation':\n        // set from onScroll\n        setCradleState('repositioningRender');\n        break;\n\n      case 'ready':\n        // no action on ready\n        break;\n    }\n  }, [cradleState]); // ==========================[ RENDER ]===========================\n\n  var scrollAxisReferenceIndex = scaffoldHandler.cradlePositionData.targetAxisReferenceIndex;\n  var scrollTrackerArgs = (0, react_1.useMemo)(function () {\n    if (!(cradleState == 'repositioningContinuation' || cradleState == 'repositioningRender')) {\n      return null;\n    }\n\n    var trackerargs = {\n      top: viewportDimensions.top + 3,\n      left: viewportDimensions.left + 3,\n      scrollAxisReferenceIndex: scrollAxisReferenceIndex,\n      listsize: listsize,\n      styles: styles\n    };\n    return trackerargs;\n  }, [cradleState, viewportDimensions, scrollAxisReferenceIndex, listsize, styles]);\n  var cradleContent = contentHandler.content; // the data-type = portalroot div is the hidden portal component cache\n\n  return react_1[\"default\"].createElement(exports.CradlePortalsContext.Provider, {\n    value: handlersRef.current.portalHandler\n  }, cradleStateRef.current != 'setup' && react_1[\"default\"].createElement(\"div\", {\n    \"data-type\": 'portalroot',\n    style: portalrootstyle\n  }, react_1[\"default\"].createElement(portalhandler_1.PortalList, {\n    scrollerProps: handlersRef.current.portalHandler.scrollerProps\n  })), cradleStateRef.current == 'repositioningRender' || cradleStateRef.current == 'repositioningContinuation' ? react_1[\"default\"].createElement(scrolltracker_1[\"default\"], {\n    top: scrollTrackerArgs.top,\n    left: scrollTrackerArgs.left,\n    offset: scrollTrackerArgs.scrollAxisReferenceIndex,\n    listsize: scrollTrackerArgs.listsize,\n    styles: scrollTrackerArgs.styles\n  }) : react_1[\"default\"].createElement(\"div\", {\n    \"data-type\": 'cradle-axis',\n    style: cradleAxisStyle,\n    ref: axisCradleElementRef\n  }, react_1[\"default\"].createElement(\"div\", {\n    \"data-type\": 'triggerline-head',\n    style: triggerlineHeadStyle,\n    ref: headTriggerlineCradleElementRef\n  }), react_1[\"default\"].createElement(\"div\", {\n    \"data-type\": 'triggerline-tail',\n    style: triggerlineTailStyle,\n    ref: tailTriggerlineCradleElementRef\n  }),  true ? react_1[\"default\"].createElement(\"div\", {\n    \"data-type\": 'cradle-divider',\n    style: cradleDividerStyle\n  }) : 0, react_1[\"default\"].createElement(\"div\", {\n    \"data-type\": 'head',\n    ref: headCradleElementRef,\n    style: cradleHeadStyle\n  }, cradleStateRef.current != 'setup' ? cradleContent.headCellComponents : null), react_1[\"default\"].createElement(\"div\", {\n    \"data-type\": 'tail',\n    ref: tailCradleElementRef,\n    style: cradleTailStyle\n  }, cradleStateRef.current != 'setup' ? cradleContent.tailCellComponents : null)));\n}; // Cradle\n// utilities\n\n\nvar getCradleHandlers = function getCradleHandlers(cradleParameters) {\n  var createHandler = function createHandler(handler) {\n    return new handler(cradleParameters);\n  };\n\n  return {\n    portalHandler: new portalhandler_1.PortalHandler(),\n    interruptHandler: createHandler(interrupthandler_1[\"default\"]),\n    scrollHandler: createHandler(scrollhandler_1[\"default\"]),\n    stateHandler: createHandler(statehandler_1[\"default\"]),\n    contentHandler: createHandler(contenthandler_1[\"default\"]),\n    scaffoldHandler: createHandler(scaffoldhandler_1[\"default\"]),\n    serviceHandler: createHandler(servicehandler_1[\"default\"]),\n    stylesHandler: createHandler(styleshandler_1[\"default\"])\n  };\n};\n\nexports[\"default\"] = Cradle;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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MEIsT0FBM0IsR0FDRzBHLGFBQWEsQ0FBQ0Usa0JBRGpCLEdBRUcsSUFWUixDQTFCSixFQXdDSXRJO0lBQUEsYUFFZ0IsTUFGaEI7SUFHSWlLLEdBQUcsRUFBSTlILG9CQUhYO0lBSUl5SCxLQUFLLEVBQUlqQjtFQUpiLEdBUU0zRyxjQUFjLENBQUNOLE9BQWYsSUFBMEIsT0FBM0IsR0FDRzBHLGFBQWEsQ0FBQ0csa0JBRGpCLEdBRUcsSUFWUixDQXhDSixDQWRELENBQVA7QUF5RUgsQ0FwdEJELEMsQ0FvdEJFO0FBRUY7OztBQUVBLElBQU1wRCxpQkFBaUIsR0FBRyxTQUFwQkEsaUJBQW9CLENBQUNELGdCQUFELEVBQWlCO0VBRXZDLElBQU1nRixhQUFhLEdBQUcsU0FBaEJBLGFBQWdCLFVBQU87SUFBSSxXQUFJQyxPQUFKLENBQVlqRixnQkFBWjtFQUE2QixDQUE5RDs7RUFFQSxPQUFPO0lBQ0hFLGFBQWEsRUFBQyxJQUFJeUUsNkJBQUosRUFEWDtJQUVIeEUsZ0JBQWdCLEVBQUM2RSxhQUFhLENBQUNFLDZCQUFELENBRjNCO0lBR0g5RSxhQUFhLEVBQUM0RSxhQUFhLENBQUNHLDBCQUFELENBSHhCO0lBSUg5RSxZQUFZLEVBQUMyRSxhQUFhLENBQUNJLHlCQUFELENBSnZCO0lBS0hoRyxjQUFjLEVBQUM0RixhQUFhLENBQUNLLDJCQUFELENBTHpCO0lBTUgvRSxlQUFlLEVBQUMwRSxhQUFhLENBQUNNLDRCQUFELENBTjFCO0lBT0gvRSxjQUFjLEVBQUN5RSxhQUFhLENBQUNPLDJCQUFELENBUHpCO0lBUUgvRSxhQUFhLEVBQUN3RSxhQUFhLENBQUNRLDBCQUFEO0VBUnhCLENBQVA7QUFVSCxDQWREOztBQWdCQTNLLGtCQUFBQSxHQUFlSyxNQUFmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtaW5maW5pdGUtZ3JpZC1zY3JvbGxlci8uL3NyYy9jcmFkbGUudHN4PzE4M2MiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gY3JhZGxlLnRzeFxuLy8gY29weXJpZ2h0IChjKSAyMDE5LTIwMjIgSGVucmlrIEJlY2htYW5uLCBUb3JvbnRvLCBMaWNlbmNlOiBNSVRcblxuLypcbiAgICAtIGNoZWNrIG5lZWQgZm9yIGJvdGggbW9kZWwgYW5kIHZpZXcgY29tcG9uZW50IGxpc3RzXG4qL1xuXG4vKlxuICAgIERlc2NyaXB0aW9uXG4gICAgLS0tLS0tLS0tLS1cbiAgICBUaGUgR3JpZFN0cm9sbGVyIHByb3ZpZGVzIHRoZSBpbGx1c2lvbiBvZiBpbmZpbml0ZSBzY3JvbGxpbmcgdGhyb3VnaCB0aGUgdXNlIG9mIGEgZGF0YSAnY3JhZGxlJyBpbnNpZGUgYSB2aWV3cG9ydC5cbiAgICBUaGUgaWxsdXNpb24gaXMgbWFpbnRhaW5lZCBieSBzeW5jaHJvbml6aW5nIGNoYW5nZXMgaW4gY3JhZGxlIGNvbnRlbnQgd2l0aCBjcmFkbGUgbG9jYXRpb24gaW5zaWRlIGEgc2Nyb2xsYmxvY2ssIHN1Y2hcbiAgICB0aGF0IGFzIHRoZSBzY3JvbGxibG9jayBpcyBtb3ZlZCwgdGhlIGNyYWRsZSBtb3ZlcyBvcHBvc2l0ZWx5IGluIHRoZSBzY3JvbGxibG9jayAodG8gc3RheSB2aXNpYmxlIHdpdGhpbiB0aGUgdmlld3BvcnQpLiBcbiAgICBUaGUgc2Nyb2xsYmxvY2sgaXMgc2l6ZWQgdG8gYXBwcm94aW1hdGUgdGhlIGxpc3QgYmVpbmcgdmlld2VkLCBzbyBhcyB0byBoYXZlIGEgc2Nyb2xsIHRodW1iIHNpemUgYW5kIHBvc2l0aW9uIHdoaWNoIFxuICAgIHJlYWxpc3RpY2FsbHkgcmVmbGVjdHMgdGhlIHNpemUgb2YgdGhlIGxpc3QgYmVpbmcgc2hvd24uXG5cbiAgICBUaGUgcG9zaXRpb24gb2YgdGhlIGNyYWRsZSBpcyBjb250cm9sbGVkIGJ5IGEgJ2F4aXMnIHdoaWNoIGlzIGEgMHB4IGhlaWdodC93aWR0aCAoYWxvbmcgdGhlIG1lZGlhbCAtIFNjcm9sbEJsb2NrIGNhbiBiZSBcbiAgICB2ZXJ0aWNzbCBvciBob3Jpem9udGFsKS4gVGhlIHB1cnBvc2Ugb2YgdGhlIGF4aXMgaXMgdG8gYWN0IGFzIGEgJ2ZvbGQnLCBhYm92ZSB3aGljaCBjZWxsIGNvbnRlbnQgZXhwYW5kcyAndXB3YXJkcycsIGFuZCBcbiAgICBiZWxvdyB3aGljaCB0aGUgY2VsbCBjb250ZW50IGV4cGFuZHMgICdkb3dud2FyZHMnLiBHcmlkU2Nyb2xsZXIgY2FuIGJlIHZpZXdlZCB2ZXJ0aWNhbGx5IG9yIGhvcml6b250YWxseS4gV2hlbiBob3Jpem9udGFsLCBcbiAgICB0aGUgYXhpcyBoYXMgYSAwcHggd2lkdGgsIHNvIHRoYXQgdGhlICdmb2xkJyBpcyB2ZXJ0aWNhbCwgYW5kIGNlbGxzIGV4cGFuZCB0byB0aGUgbGVmdCBhbmQgcmlnaHQuXG5cbiAgICBUaGUgYXhpcyBpcyBjb250cm9sbGVkIHRvIGFsd2F5cyBiZSBpbiB0aGUgYXQgdGhlIGxlYWRpbmcgZWRnZSBvZiB0aGUgbGVhZGluZyBjZWxscm93IG9mIHRoZSB2aWV3cG9ydC4gVGh1c1xuICAgIGluIHZlcnRpY2FsIG9yaWVudGF0aW9uLCB0aGUgYXhpcyAndG9wJyBjc3MgYXR0cmlidXRlIGlzIGFsd2F5cyBlcXVhbCB0byB0aGUgJ3Njcm9sbFRvcCcgcG9zaXRpb24gb2YgdGhlIHNjcm9sbGJsb2NrLFxuICAgIHBsdXMgYW4gYWRqdXN0bWVudC4gVGhlIGFkanVzdG1lbnQgaXMgdGhlIHJlc3VsdCBvZiB0aGUgYWxpZ25tZW50IG9mIHRoZSBheGlzIGluIHJlbGF0aW9uIHRvIHRoZSB0b3AtKG9yIGxlZnQtKW1vc3QgY2VsbFxuICAgIGluIHRoZSB2aWV3cG9ydCAodGhlICdyZWZlcmVuY2UnIHJvdykuIFRoZSBheGlzIGNhbiBvbmx5IGJlIHBsYWNlZCBhdCB0aGUgbGVhZGluZyBlZGdlIG9mIHRoZSBmaXJzdCB2aXNpYmxlXG4gICAgY2VsbCBpbiB0aGUgdmlld3BvcnQuIFRoZXJlZm9yZSB0aGUgYXhpcyBvZmZzZXQgZnJvbSB0aGUgbGVhZGluZyBlZGdlIG9mIHRoZSB2aWV3cG9ydCBjYW4gYmUgYW55d2hlcmUgZnJvbSBtaW51cyB0b1xuICAgIHBsdXMgdGhlIGxlbmd0aCBvZiB0aGUgbGVhZGluZyByb3cuIFRoZSBleGFjdCBhbW91bnQgZGVwZW5kcyBvbiB3aGVyZSB0aGUgJ2JyZWFrcG9pbnQnIG9mIHRyYW5zaXRpb24gbm90aWZpY2F0aW9uIGlzIHNldCBmb3JcbiAgICBjZWxscyBjcm9zc2luZyB0aGUgdmlld3BvcnQgdGhyZXNob2xkIChhbmQgY2FuIGJlIGNvbmZpZ3VyZWQpLiBUaGUgZGVmYXVsdCBvZiB0aGUgYnJlYWtwb2ludCBpcyAuNSAoaGFsZiB0aGUgbGVuZ3RoIG9mIHRoZSBjZWxsKS5cblxuICAgIFRlY2huaWNhbGx5LCB0aGVyZSBhcmUgc2V2ZXJhbCByZWZlcmVuY2UgcG9pbnRzIHRyYWNrZWQgYnkgdGhlIEdyaWRTY3JvbGxlci4gVGhlc2UgYXJlOlxuICAgICAgICAtIGF4aXNSZWZlcmVuY2VJbmRleCAodGhlIHZpcnR1YWwgaW5kZXggb2YgdGhlIGl0ZW0gY29udHJvbGxpbmcgdGhlIGxvY2F0aW9uIG9mIHRoZSBheGlzKVxuICAgICAgICAgICAgVGhlIGF4aXNSZWZlcmVuY2VJbmRleCBpcyBhbHNvIHVzZWQgdG8gYWxsb2NhdGUgaXRlbXMgYWJvdmUgKGxvd2VyIGluZGV4IHZhbHVlKSBhbmQgYmVsb3cgKHNhbWUgb3IgaGlnaGVyIGluZGV4IHZhbHVlKVxuICAgICAgICAgICAgdGhlIGZvbGRcbiAgICAgICAgLSBjcmFkbGVSZWZlcmVuY2VJbmRleCAodGhlIHZpcnR1YWwgaW5kZXggb2YgdGhlIGl0ZW0gZGVmaW5pbmcgdGhlIGxlYWRpbmcgYm91bmQgb2YgdGhlIGNyYWRsZSBjb250ZW50KVxuICAgICAgICAtIGF4aXNQaXhlbE9mZnNldCAocGl4ZWxzIC0gcGx1cyBvciBtaW51cyAtIHRoYXQgdGhlIGF4aXMgaXMgcGxhY2VkIGluIHJlbGF0aW9uIHRvIHRoZSB2aWV3cG9ydCdzIGxlYWRpbmcgZWRnZSkgXG4gICAgXG4gICAgVGhlc2UgcmVmZXJlbmNlIHBvaW50cyBhcmUgYXBwbGllZCB0byB0aGUgZm9sbG93aW5nIHN0cnVjdHVyZXM6XG4gICAgICAgIC0gdGhlIHZpZXdwb3J0XG4gICAgICAgIC0gdGhlIHNjcm9sbGJsb2NrXG4gICAgICAgIC0gdGhlIGNyYWRsZSwgY29uc2lzdGluZyBvZlxuICAgICAgICAgICAgLSB0aGUgYXhpcyAoY29udGFpbnMgY3JhZGxlIGhlYWQgYW5kIHRhaWwpXG4gICAgICAgICAgICAtIHRoZSBoZWFkIChjb250YWlucyBsZWFkaW5nIGl0ZW1zKVxuICAgICAgICAgICAgLSB0aGUgdGFpbCAoY29udGFpbnMgdHJhaWxpbmcgaXRlbXMpXG5cbiAgICBTdHJ1Y3R1cmUgZGV0YWlsczpcbiAgICAgICAgdGhlIGNyYWRsZSBjb250ZW50IGNvbnNpc3RzIG9mXG4gICAgICAgIC0gdGhlIG51bWJlciBvZiByb3dzIHRoYXQgYXJlIHZpc2libGUgaW4gdGhlIHZpZXdwb3J0IChhY2NvcmRpbmcgdG8gdGhlIGRlZmF1bHQgcGFyYW1ldGVycylcbiAgICAgICAgICAgIC0gdGhpcyB0eXBpY2FsbHkgaW5jbHVkZXMgb25lIHBhcnRpYWxseSB2aXNpYmxlIHJvd1xuICAgICAgICAtIHRoZSBudW1iZXIgb2YgcnVud2F5IHJvd3Mgc3BlY2lmaWVkIGluIHRoZSBwYXJhbWV0ZXJzLCB0aW1lcyAyIChvbmUgZXQgZm9yIHRoZSBoZWFkOyBvbmUgZm9yIHRoZSB0YWlsKVxuICAgICAgICAtIHRoZSBudW1iZXIgb2YgaXRlbXMgaXMgdGhlIG51bWJlciBvZiByb3dzIHRpbWVzIHRoZSAnY3Jvc3Njb3VudCcgdGhlIGxhdGVyYWwgbnVtYmVyIG9mIGNlbGxzLiBcbiAgICAgICAgLSB0aGUgbGFzdCByb3cgbWlnaHQgY29uc2lzdCBvZiBmZXdlciBpdGVtcyB0aGFuIGNyb3NzY291bnQsIHRvIG1hdGNoIHRoZSBtYXhpbXVtIGxpc3RzaXplXG4gICAgICAgIC0gdGhlIGNyYWRsZVJvd2NvdW50ICh2aXNpYmxlIGRlZmF1bHQgcm93cyArIHJ1bndheVJvd2NvdW50U3BlYyAqIDIpIGFuZCB2aWV3cG9pbnRSb3djb3VudCAodmlzYmxlIHJvd3M7dHlwaWNhbGwgb25lIHBhcnRpYWwpXG5cbiAgICBJdGVtIGNvbnRhaW5lcnM6XG4gICAgICAgIENsaWVudCBjZWxsIGNvbnRlbnQgaXMgY29udGFpbmVkIGluIENlbGxTaGVsbCdzLCB3aGljaCBhcmUgY29uZmlndXJlZCBhY2NvcmRpbmcgdG8gR3JpZFNjcm9sbGVyJ3MgaW5wdXQgcGFyYW1ldGVycy5cbiAgICAgICAgVGhlIEl0ZW1DZWxsJ3MgYXJlIGluIHR1cm4gY29udGFpbmVkIGluIENTUyBncmlkIHN0cnVjdHVyZXMuIFRoZXJlIGFyZSB0d28gZ3JpZCBzdHJ1Y3R1cmVzIC0gb25lIGluIHRoZSBjcmFkbGUgaGVhZCxcbiAgICAgICAgYW5kIG9uZSBpbiB0aGUgY3JhZGxlIHRhaWwuIEVhY2ggZ3JpZCBzdHJ1Y3R1cmUgaXMgYWxsb3dlZCB1bmlmb3JtIHBhZGRpbmcgYW5kIGdhcHMgLSBpZGVudGljYWwgYmV0d2VlbiB0aGUgdHdvLlxuXG4gICAgT3ZlcnNjcm9sbCBoYW5kbGluZzpcbiAgICAgICAgT3dpbmcgdG8gdGhlIHdlaWdodCBvZiB0aGUgY29kZSwgYW5kIHBvdGVudGlhbCByYXBpZGl0eSBvZiBzY3JvbGxpbmcsIHRoZXJlIGlzIGFuIG92ZXJzY3JvbGwgcHJvdG9jb2wuIFxuICAgICAgICBpZiB0aGUgb3ZlcnNjcm9sbCBpcyBzdWNoIHRoYXQgcGFydCBvZiB0aGUgY3JhZGxlIGlzIHN0aWxsIHdpdGhpbiB0aGUgdmlld3BvcnQgYm91bmRhcmllcywgdGhlbiB0aGUgb3ZlcnNjcm9sbFxuICAgICAgICBpcyBjYWxjdWxhdGVkIGFzIHRoZSBudW1iZXIgb2YgY2VsbCByb3dzIHRoYXQgd291bGQgZml0IChjb21wbGV0ZWx5IG9yIHBhcnRpYWxseSkgaW4gdGhlIHNwYWNlIGJldHdlZW4gdGhlIGVkZ2Ugb2YgXG4gICAgICAgIHRoZSBjcmFkbGUgdGhhdCBpcyByZWNlZGluZyBmcm9tIGEgdmlld3BvcnQgZWRnZS4gXG5cbiAgICAgICAgSWYgdGhlIG92ZXJzaG9vdCBpcyBzdWNoIHRoYXQgdGhlIGNyYWRsZSBoYXMgZW50aXJlbHkgcGFzc2VkIG91dCBvZiB0aGUgdmlld3BvcnQsIHRoZSBHcmlkU2Nyb2xsZXIgZ29lcyBpbnRvICdSZXBvc2l0b2luaW5nJ1xuICAgICAgICBtb2RlLCBtZWFuaW5nIHRoYXQgaXQgdHJhY2tzIHJlbGF0aXZlIGxvY2F0aW9uIG9mIHRoZSBheGlzIGVkZ2Ugb2YgdGhlIHZpZXdwb3J0LCBhbmQgcmVwYWludHMgdGhlIGNyYWRsZSBhY2Nyb2RpbmcgdG9cbiAgICAgICAgdGhpcyBwb3NpdGlvbiB3aGVuIHRoZSBzY3JvbGxpbmcgc3RvcHMuXG4qL1xuXG4vKlxuICAgIENyYWRsZSBpcyBhY3RpdmF0ZWQgYnkgaW50ZXJydXB0czpcbiAgICAtIHJlc2l6aW5nIG9mIHRoZSB2aWV3cG9ydCAoMSlcbiAgICAtIG9ic2VydmVyIGNhbGxiYWNrczpcbiAgICAgICAgLSBjcmFkbGUgdmlld3BvcnQgaW50ZXJzZWN0aW9uIGZvciByZXBvc2l0aW9uaW5nIHdoZW4gdGhlIGNyYWRsZSByYWNlcyBvdXQgb2Ygc2NvcGUgLSBieSBzY3JvbGwgKDIpXG4gICAgICAgIC0gY2VsbFNoZWxsIHZpZXdwb3J0IGludGVyc2VjdGlvbiB3aGljaCB0cmlnZ2VycyByb2xsaW5nIG9mIGNvbnRlbnQgLSBieSBzY3JvbGwgKDMpXG4gICAgICAgICAgICAtIHJvbGxpbmcgY29udGVudCB0cmlnZ2VycyByZS1hbGxvY2F0aW9uIG9mIGNvbnRlbnQgYmV0d2VlbiBjcmFkbGUgd2luZ3NcbiAgICAgICAgLSBjcmFkbGUgd2luZyByZXNpemUgKHJlc3BvbmRpbmcgdG8gdmFyaWFibGUgbGVuZ3RoIGNlbGwgY2hhbmdlcykgd2hpY2ggdHJpZ2dlcnMgcmVjb25maWd1cmF0aW9uICg0KVxuICAgIC0gcGl2b3QgLSBjaGFuZ2Ugb2Ygb3JpZW50YXRpb24gKDUpXG4gICAgLSBob3N0IGNoYW5nZSBvZiBvdGhlciBjb25maWd1cmF0aW9uIHNwZWNzICg2KVxuKi9cblxuJ3VzZSBzdHJpY3QnXG5cbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlUmVmLCB1c2VDb250ZXh0LCB1c2VFZmZlY3QsIHVzZUNhbGxiYWNrLCB1c2VNZW1vLCB1c2VMYXlvdXRFZmZlY3QgfSBmcm9tICdyZWFjdCdcblxuaW1wb3J0IHsgVmlld3BvcnRJbnRlcnJ1cHQgfSBmcm9tICcuL3ZpZXdwb3J0J1xuXG4vLyBwb3B1cCBwb3NpdGlvbiB0cmFja2VyIGZvciByZXBvc2l0aW9uaW5nXG5pbXBvcnQgU2Nyb2xsVHJhY2tlciBmcm9tICcuL3Njcm9sbHRyYWNrZXInXG5cbi8vIHN1cHBvcnQgY29kZVxuaW1wb3J0IHsgUG9ydGFsSGFuZGxlciwgUG9ydGFsTGlzdCB9IGZyb20gJy4vY3JhZGxlL3BvcnRhbGhhbmRsZXInXG5pbXBvcnQgU2Nyb2xsSGFuZGxlciBmcm9tICcuL2NyYWRsZS9zY3JvbGxoYW5kbGVyJ1xuaW1wb3J0IFN0YXRlSGFuZGxlciBmcm9tICcuL2NyYWRsZS9zdGF0ZWhhbmRsZXInXG5pbXBvcnQgQ29udGVudEhhbmRsZXIgZnJvbSAnLi9jcmFkbGUvY29udGVudGhhbmRsZXInXG5pbXBvcnQgU2NhZmZvbGRIYW5kbGVyIGZyb20gJy4vY3JhZGxlL3NjYWZmb2xkaGFuZGxlcidcbmltcG9ydCBJbnRlcnJ1cHRIYW5kbGVyIGZyb20gJy4vY3JhZGxlL2ludGVycnVwdGhhbmRsZXInXG5pbXBvcnQgU2VydmljZUhhbmRsZXIgZnJvbSAnLi9jcmFkbGUvc2VydmljZWhhbmRsZXInXG5pbXBvcnQgU3R5bGVzSGFuZGxlciBmcm9tICcuL2NyYWRsZS9zdHlsZXNoYW5kbGVyJ1xuXG4vLyBmb3IgY2hpbGRyZW5cbmV4cG9ydCBjb25zdCBDcmFkbGVQb3J0YWxzQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQobnVsbClcblxuY29uc3QgcG9ydGFscm9vdHN0eWxlID0ge2Rpc3BsYXk6J25vbmUnfSAvLyBzdGF0aWMgXG5cbi8vIGNvbXBvbmVudFxuY29uc3QgQ3JhZGxlID0gKHsgXG4gICAgICAgIGdyaWRTcGVjcyxcblxuICAgICAgICBydW53YXlSb3djb3VudFNwZWMsIFxuICAgICAgICBsaXN0c2l6ZSwgXG4gICAgICAgIGRlZmF1bHRWaXNpYmxlSW5kZXgsIFxuICAgICAgICBnZXRJdGVtLCBcbiAgICAgICAgcGxhY2Vob2xkZXIsIFxuICAgICAgICBmdW5jdGlvbnMsXG4gICAgICAgIHN0eWxlcyxcblxuICAgICAgICBzY3JvbGxlck5hbWUsXG4gICAgICAgIHNjcm9sbGVySUQsXG4gICAgICAgIHRyaWdnZXJsaW5lT2Zmc2V0LFxuICAgIH0pID0+IHtcblxuICAgIGlmIChsaXN0c2l6ZSA9PSAwKSByZXR1cm4gLy8gbm90aGluZyB0byBkb1xuXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09WyBEQVRBIFNFVFVQIF09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICAgIC8vIHVucGFjayBncmlkU3BlY3NcbiAgICBjb25zdCB7XG4gICAgICAgIG9yaWVudGF0aW9uLFxuICAgICAgICBnYXAsXG4gICAgICAgIHBhZGRpbmcsXG4gICAgICAgIGNlbGxIZWlnaHQsXG4gICAgICAgIGNlbGxXaWR0aCxcbiAgICAgICAgbGF5b3V0LFxuICAgICAgICBkZW5zZSxcbiAgICB9ID0gZ3JpZFNwZWNzXG5cbiAgICAvLyBnZXQgdmlld3BvcnQgY29udGV4dFxuICAgIGNvbnN0IHZpZXdwb3J0SW50ZXJydXB0UHJvcGVydGllcyA9IHVzZUNvbnRleHQoVmlld3BvcnRJbnRlcnJ1cHQpXG4gICAgY29uc3Qgdmlld3BvcnRJbnRlcnJ1cHRQcm9wZXJ0aWVzUmVmID0gdXNlUmVmKG51bGwpXG4gICAgdmlld3BvcnRJbnRlcnJ1cHRQcm9wZXJ0aWVzUmVmLmN1cnJlbnQgPSB2aWV3cG9ydEludGVycnVwdFByb3BlcnRpZXMgLy8gZm9yIGNsb3N1cmVzXG5cbiAgICBjb25zdCB7IHZpZXdwb3J0RGltZW5zaW9ucyB9ID0gdmlld3BvcnRJbnRlcnJ1cHRQcm9wZXJ0aWVzXG4gICAgY29uc3QgeyBoZWlnaHQ6dmlld3BvcnRoZWlnaHQsd2lkdGg6dmlld3BvcnR3aWR0aCB9ID0gdmlld3BvcnREaW1lbnNpb25zXG5cbiAgICAvLyBzdGF0ZVxuICAgIGNvbnN0IFtjcmFkbGVTdGF0ZSwgc2V0Q3JhZGxlU3RhdGVdID0gdXNlU3RhdGUoJ3NldHVwJylcbiAgICBjb25zdCBjcmFkbGVTdGF0ZVJlZiA9IHVzZVJlZihudWxsKSAvLyBhY2Nlc3MgYnkgY2xvc3VyZXNcbiAgICBjcmFkbGVTdGF0ZVJlZi5jdXJyZW50ID0gY3JhZGxlU3RhdGVcblxuICAgIC8vIGNvbnRyb2xzXG4gICAgY29uc3QgaXNNb3VudGVkUmVmID0gdXNlUmVmKHRydWUpXG5cbiAgICAvLyBjcmFkbGUgc2NhZmZvbGQgZWxlbWVudHMgcmVmc1xuICAgIGNvbnN0IGhlYWRDcmFkbGVFbGVtZW50UmVmID0gdXNlUmVmKG51bGwpXG4gICAgY29uc3QgdGFpbENyYWRsZUVsZW1lbnRSZWYgPSB1c2VSZWYobnVsbClcbiAgICBjb25zdCBheGlzQ3JhZGxlRWxlbWVudFJlZiA9IHVzZVJlZihudWxsKVxuICAgIGNvbnN0IGhlYWRUcmlnZ2VybGluZUNyYWRsZUVsZW1lbnRSZWYgPSB1c2VSZWYobnVsbClcbiAgICBjb25zdCB0YWlsVHJpZ2dlcmxpbmVDcmFkbGVFbGVtZW50UmVmID0gdXNlUmVmKG51bGwpXG5cbiAgICAvLyBzY2FmZm9sZCBidW5kbGVcbiAgICBjb25zdCBjcmFkbGVFbGVtZW50c1JlZiA9IHVzZVJlZihcbiAgICAgICAge1xuICAgICAgICAgICAgaGVhZFJlZjpoZWFkQ3JhZGxlRWxlbWVudFJlZiwgXG4gICAgICAgICAgICB0YWlsUmVmOnRhaWxDcmFkbGVFbGVtZW50UmVmLCBcbiAgICAgICAgICAgIGF4aXNSZWY6YXhpc0NyYWRsZUVsZW1lbnRSZWYsXG4gICAgICAgICAgICBoZWFkVHJpZ2dlcmxpbmVSZWY6aGVhZFRyaWdnZXJsaW5lQ3JhZGxlRWxlbWVudFJlZixcbiAgICAgICAgICAgIHRhaWxUcmlnZ2VybGluZVJlZjp0YWlsVHJpZ2dlcmxpbmVDcmFkbGVFbGVtZW50UmVmXG4gICAgICAgIH1cbiAgICApXG5cbiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1bIGNhbGN1bGF0ZWQgZGF0YSBdLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgICAvLyBjb25maWd1cmF0aW9uIGNhbGN1bGF0aW9uc1xuICAgIGNvbnN0IGNyb3NzY291bnQgPSB1c2VNZW1vKCgpID0+IHsgLy8gdGhlIG51bWJlciBvZiBjZWxscyBjcm9zc2luZyBvcmllbnRhdGlvblxuXG4gICAgICAgIGNvbnN0IHZpZXdwb3J0c2l6ZSA9IChvcmllbnRhdGlvbiA9PSAnaG9yaXpvbnRhbCcpP3ZpZXdwb3J0aGVpZ2h0OnZpZXdwb3J0d2lkdGhcbiAgICAgICAgY29uc3QgY3Jvc3NMZW5ndGggPSAob3JpZW50YXRpb24gPT0gJ2hvcml6b250YWwnKT9jZWxsSGVpZ2h0OmNlbGxXaWR0aFxuXG4gICAgICAgIGNvbnN0IHZpZXdwb3J0bGVuZ3RoZm9yY2FsYyA9IHZpZXdwb3J0c2l6ZSAtIChwYWRkaW5nICogMikgKyBnYXAgLy8gbGVuZ3RoIG9mIHZpZXdwb3J0XG4gICAgICAgIGxldCB0aWxlbGVuZ3RoZm9yY2FsYyA9IGNyb3NzTGVuZ3RoICsgZ2FwXG4gICAgICAgIHRpbGVsZW5ndGhmb3JjYWxjID0gTWF0aC5taW4odGlsZWxlbmd0aGZvcmNhbGMsdmlld3BvcnRsZW5ndGhmb3JjYWxjKSAvLyByZXN1bHQgY2Fubm90IGJlIGxlc3MgdGhhbiAxXG5cbiAgICAgICAgcmV0dXJuIE1hdGguZmxvb3Iodmlld3BvcnRsZW5ndGhmb3JjYWxjL3RpbGVsZW5ndGhmb3JjYWxjKVxuXG4gICAgfSxbXG4gICAgICAgIG9yaWVudGF0aW9uLCBcbiAgICAgICAgZ2FwLCBcbiAgICAgICAgcGFkZGluZywgXG4gICAgICAgIGNlbGxXaWR0aCwgXG4gICAgICAgIGNlbGxIZWlnaHQsIFxuICAgICAgICB2aWV3cG9ydGhlaWdodCwgXG4gICAgICAgIHZpZXdwb3J0d2lkdGgsXG4gICAgXSlcblxuICAgIGNvbnN0IFtcbiAgICAgICAgY3JhZGxlUm93Y291bnQsIFxuICAgICAgICB2aWV3cG9ydFJvd2NvdW50LCBcbiAgICAgICAgdmlld3BvcnRWaXNpYmxlUm93Y291bnQsIC8vIG1heCBudW1iZXIgb2Ygcm93cyBjb21wbGV0ZWx5IHZpc2libGUgYXQgb25jZVxuICAgICAgICBsaXN0Um93Y291bnQsXG4gICAgICAgIHJ1bndheVJvd2NvdW50LFxuICAgIF0gPSB1c2VNZW1vKCgpPT4ge1xuXG4gICAgICAgIGxldCB2aWV3cG9ydExlbmd0aCwgcm93TGVuZ3RoXG4gICAgICAgIGlmIChvcmllbnRhdGlvbiA9PSAndmVydGljYWwnKSB7XG4gICAgICAgICAgICB2aWV3cG9ydExlbmd0aCA9IHZpZXdwb3J0aGVpZ2h0XG4gICAgICAgICAgICByb3dMZW5ndGggPSBjZWxsSGVpZ2h0XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB2aWV3cG9ydExlbmd0aCA9IHZpZXdwb3J0d2lkdGhcbiAgICAgICAgICAgIHJvd0xlbmd0aCA9IGNlbGxXaWR0aFxuICAgICAgICB9XG5cbiAgICAgICAgcm93TGVuZ3RoICs9IGdhcFxuXG4gICAgICAgIGNvbnN0IHZpZXdwb3J0Um93Y291bnQgPSBNYXRoLmNlaWwodmlld3BvcnRMZW5ndGgvcm93TGVuZ3RoKVxuXG4gICAgICAgIGNvbnN0IHZpZXdwb3J0VmlzaWJsZVJvd2NvdW50ID0gTWF0aC5mbG9vcih2aWV3cG9ydExlbmd0aC9yb3dMZW5ndGgpXG5cbiAgICAgICAgY29uc3QgbGlzdFJvd2NvdW50ID0gTWF0aC5jZWlsKGxpc3RzaXplL2Nyb3NzY291bnQpXG5cbiAgICAgICAgY29uc3QgY2FsY3VsYXRlZENyYWRsZVJvd2NvdW50ID0gdmlld3BvcnRSb3djb3VudCArIChydW53YXlSb3djb3VudFNwZWMgKiAyKVxuXG4gICAgICAgIGxldCBjcmFkbGVSb3djb3VudCA9IE1hdGgubWluKGxpc3RSb3djb3VudCwgY2FsY3VsYXRlZENyYWRsZVJvd2NvdW50KVxuXG4gICAgICAgIGxldCBydW53YXlSb3djb3VudFxuICAgICAgICBpZiAoY2FsY3VsYXRlZENyYWRsZVJvd2NvdW50ID49IGNyYWRsZVJvd2NvdW50KSB7XG4gICAgICAgICAgICBydW53YXlSb3djb3VudCA9IHJ1bndheVJvd2NvdW50U3BlY1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgZGlmZiA9IChjcmFkbGVSb3djb3VudCAtIGNhbGN1bGF0ZWRDcmFkbGVSb3djb3VudClcbiAgICAgICAgICAgIHJ1bndheVJvd2NvdW50IC09IE1hdGguZmxvb3IoZGlmZi8yKVxuICAgICAgICAgICAgcnVud2F5Um93Y291bnQgPSBNYXRoLm1heCgwLHJ1bndheVJvd2NvdW50KVxuICAgICAgICB9XG4gICAgICAgIGxldCBpdGVtY291bnQgPSBjcmFkbGVSb3djb3VudCAqIGNyb3NzY291bnRcbiAgICAgICAgaWYgKGl0ZW1jb3VudCA+IGxpc3RzaXplKSB7XG4gICAgICAgICAgICBpdGVtY291bnQgPSBsaXN0c2l6ZVxuICAgICAgICAgICAgY3JhZGxlUm93Y291bnQgPSBNYXRoLmNlaWwoaXRlbWNvdW50L2Nyb3NzY291bnQpXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgY3JhZGxlUm93Y291bnQsIFxuICAgICAgICAgICAgdmlld3BvcnRSb3djb3VudCwgXG4gICAgICAgICAgICB2aWV3cG9ydFZpc2libGVSb3djb3VudCxcbiAgICAgICAgICAgIGxpc3RSb3djb3VudCxcbiAgICAgICAgICAgIHJ1bndheVJvd2NvdW50LFxuICAgICAgICBdXG5cbiAgICB9LFtcbiAgICAgICAgb3JpZW50YXRpb24sIFxuICAgICAgICBnYXAsIFxuICAgICAgICAvLyBwYWRkaW5nLFxuICAgICAgICBjZWxsV2lkdGgsIFxuICAgICAgICBjZWxsSGVpZ2h0LCBcbiAgICAgICAgdmlld3BvcnRoZWlnaHQsIFxuICAgICAgICB2aWV3cG9ydHdpZHRoLFxuXG4gICAgICAgIGxpc3RzaXplLFxuICAgICAgICBydW53YXlSb3djb3VudFNwZWMsXG4gICAgICAgIGNyb3NzY291bnQsXG4gICAgXSlcblxuICAgIC8vID09PT09PT09PT09PT09PT09PT09PT1bIGludGVybmFsIGFuZCBleHRlcm5hbCBjYWxsYmFja3MgXT09PT09PT09PT09PT09PT09PT09PVxuXG4gICAgLy8gdXRpbGl0eSB0byByZWdpc3RlciBvciB1bnJlZ2lzdGVyIGNyYWRsZSBpdGVtIGVsZW1lbnRzXG4gICAgY29uc3Qgc2V0SXRlbUVsZW1lbnREYXRhID0gdXNlQ2FsbGJhY2soKGl0ZW1FbGVtZW50RGF0YSwgcmVnaXN0cmF0aW9uVHlwZSkgPT4ge1xuXG4gICAgICAgIGNvbnN0IFtpbmRleCwgc2hlbGxyZWZdID0gaXRlbUVsZW1lbnREYXRhXG5cbiAgICAgICAgaWYgKHJlZ2lzdHJhdGlvblR5cGUgPT0gJ3JlZ2lzdGVyJykge1xuXG4gICAgICAgICAgICBjb250ZW50SGFuZGxlci5pdGVtRWxlbWVudHMuc2V0KGluZGV4LHNoZWxscmVmKVxuXG4gICAgICAgIH0gZWxzZSBpZiAocmVnaXN0cmF0aW9uVHlwZSA9PSAndW5yZWdpc3RlcicpIHtcblxuICAgICAgICAgICAgY29udGVudEhhbmRsZXIuaXRlbUVsZW1lbnRzLmRlbGV0ZShpbmRleClcblxuICAgICAgICB9XG5cbiAgICB9LFtdKVxuXG4gICAgY29uc3QgaW50ZXJuYWxDYWxsYmFja3NSZWYgPSB1c2VSZWYoe1xuXG4gICAgICAgIHNldEVsZW1lbnREYXRhOnNldEl0ZW1FbGVtZW50RGF0YVxuXG4gICAgfSlcblxuICAgIC8vIGhvc3QgY2FsbGJhY2tzXG4gICAgY29uc3QgcmVmZXJlbmNlSW5kZXhDYWxsYmFja1JlZiA9IHVzZVJlZihmdW5jdGlvbnM/LnJlZmVyZW5jZUluZGV4Q2FsbGJhY2spXG5cbiAgICBjb25zdCBleHRlcm5hbENhbGxiYWNrc1JlZiA9IHVzZVJlZih7cmVmZXJlbmNlSW5kZXhDYWxsYmFja1JlZn0pXG5cbiAgICAvLyA9PT09PT09PT09PT09PT09PT09PVsgYnVuZGxlIHBhcmFtZXRlcnMgZm9yIGhhbmRsZXJzIF09PT09PT09PT09PT09PT09PT09XG5cbiAgICAvLyBidW5kbGUgY3JhZGxlIHByb3BzIHRvIHBhc3MgdG8gaGFuZGxlcnNcbiAgICBjb25zdCBjcmFkbGVJbmhlcml0ZWRQcm9wZXJ0aWVzUmVmID0gdXNlUmVmKG51bGwpIC8vIGFjY2VzcyBieSBjbG9zdXJlcyBhbmQgc3VwcG9ydCBmdW5jdGlvbnNcbiAgICAvLyB1cCB0byBkYXRhIHZhbHVlc1xuICAgIGNyYWRsZUluaGVyaXRlZFByb3BlcnRpZXNSZWYuY3VycmVudCA9IHtcbiAgICAgICAgLy8gZ3JpZFNwZWNzXG4gICAgICAgIG9yaWVudGF0aW9uLCBcbiAgICAgICAgZ2FwLCBcbiAgICAgICAgcGFkZGluZywgXG4gICAgICAgIGNlbGxIZWlnaHQsIFxuICAgICAgICBjZWxsV2lkdGgsIFxuICAgICAgICBsYXlvdXQsXG4gICAgICAgIGRlbnNlLFxuICAgICAgICAvLyAuLi5yZXN0XG4gICAgICAgIGxpc3RzaXplLCBcbiAgICAgICAgZGVmYXVsdFZpc2libGVJbmRleCwgXG4gICAgICAgIGdldEl0ZW0sIFxuICAgICAgICBwbGFjZWhvbGRlciwgXG4gICAgICAgIHNjcm9sbGVyTmFtZSxcbiAgICAgICAgc2Nyb2xsZXJJRCxcbiAgICAgICAgLy8gb2JqZWN0c1xuICAgICAgICBmdW5jdGlvbnMsXG4gICAgICAgIHN0eWxlcyxcbiAgICAgICAgdHJpZ2dlcmxpbmVPZmZzZXQsXG5cbiAgICB9XG5cbiAgICAvLyBjb25maWd1cmF0aW9uIHByb3BlcnRpZXMgdG8gc2hhcmVcbiAgICBjb25zdCBjcmFkbGVJbnRlcm5hbFByb3BlcnRpZXNSZWYgPSB1c2VSZWYobnVsbClcbiAgICBjcmFkbGVJbnRlcm5hbFByb3BlcnRpZXNSZWYuY3VycmVudCA9IHtcbiAgICAgICAgY3Jvc3Njb3VudCxcbiAgICAgICAgY3JhZGxlUm93Y291bnQsXG4gICAgICAgIHZpZXdwb3J0Um93Y291bnQsXG4gICAgICAgIHZpZXdwb3J0VmlzaWJsZVJvd2NvdW50LFxuICAgICAgICBsaXN0Um93Y291bnQsXG4gICAgICAgIHJ1bndheVJvd2NvdW50LFxuICAgICAgICBpc01vdW50ZWRSZWYsXG4gICAgICAgIGNyYWRsZUVsZW1lbnRzUmVmLFxuICAgICAgICAvLyBmb3Igc3RhdGVIYW5kbGVyXG4gICAgICAgIGNyYWRsZVN0YXRlUmVmLFxuICAgICAgICBzZXRDcmFkbGVTdGF0ZSxcbiAgICB9XG5cbiAgICAvLyBwbGFjZWhvbGRlciBpbiBjcmFkbGVQYXJhbWV0ZXJzIHRvIG1ha2UgYXZhaWxhYmxlIGluZGl2aWR1YWwgaGFuZGxlcnNcbiAgICBjb25zdCBoYW5kbGVyc1JlZiA9IHVzZVJlZihudWxsKVxuXG4gICAgLy8gY3JhZGxlIHBhcmFtZXRlcnMgTUFTVEVSIEJVTkRMRVxuICAgIGNvbnN0IGNyYWRsZVBhcmFtZXRlcnMgPSB7XG4gICAgICAgIGhhbmRsZXJzUmVmLFxuICAgICAgICB2aWV3cG9ydEludGVycnVwdFByb3BlcnRpZXNSZWYsXG4gICAgICAgIGNyYWRsZUluaGVyaXRlZFByb3BlcnRpZXNSZWYsIFxuICAgICAgICBjcmFkbGVJbnRlcm5hbFByb3BlcnRpZXNSZWYsIFxuICAgICAgICBpbnRlcm5hbENhbGxiYWNrc1JlZixcbiAgICAgICAgZXh0ZXJuYWxDYWxsYmFja3NSZWYsXG4gICAgfVxuXG4gICAgLy8gb25nb2luZyBzb3VyY2Ugb2YgaGFuZGxlcnNcbiAgICBpZiAoIWhhbmRsZXJzUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgaGFuZGxlcnNSZWYuY3VycmVudCA9IGdldENyYWRsZUhhbmRsZXJzKGNyYWRsZVBhcmFtZXRlcnMpXG4gICAgfVxuXG4gICAgLy8gbWFrZSBoYW5kbGVycyBkaXJlY3RseSBhdmFpbGFibGUgdG8gY3JhZGxlIGNvZGVcbiAgICBjb25zdCB7XG4gICAgICAgIHBvcnRhbEhhbmRsZXIsXG4gICAgICAgIGludGVycnVwdEhhbmRsZXIsXG4gICAgICAgIHNjcm9sbEhhbmRsZXIsXG4gICAgICAgIHN0YXRlSGFuZGxlcixcbiAgICAgICAgY29udGVudEhhbmRsZXIsXG4gICAgICAgIHNjYWZmb2xkSGFuZGxlcixcbiAgICAgICAgc2VydmljZUhhbmRsZXIsXG4gICAgICAgIHN0eWxlc0hhbmRsZXIsXG4gICAgfSA9IGhhbmRsZXJzUmVmLmN1cnJlbnRcblxuICAgIC8vID09PT09PT09PT09PT09PT09PT1bIElOSVRJQUxJWkFUSU9OIGVmZmVjdHMgXT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICAgIC8vIHRoaXMgaXMgYW4gaW1tZWRpYXRlIHJlc3BvbnNlIHRvIHJlcGFyZW50aW5nIChtb3ZpbmcgcG9ydGFscykuIFJlcGFyZW50aW5nIHJlc2V0cyBzY3JvbGxcbiAgICAvLyBwb3NpdGlvbnMgZm9yIG5lc3RlZCBpbmZpbml0ZWdyaWRzY3JvbGxlcnMuXG4gICAgLy8gdGhlIGNvZGUgcmVzdG9yZXMgc2Nyb2xsIGFzIHNvb24gYXMgY3JhZGxlIGlzIGludm9rZWQgYWZ0ZXIgcmVwYXJlbnRpbmdcbiAgICBpZiAodmlld3BvcnRJbnRlcnJ1cHRQcm9wZXJ0aWVzLnBvcnRhbD8uaXNSZXBhcmVudGluZykgeyBcblxuICAgICAgICB2aWV3cG9ydEludGVycnVwdFByb3BlcnRpZXMucG9ydGFsLmlzUmVwYXJlbnRpbmcgPSBmYWxzZVxuXG4gICAgICAgIGNvbnN0IGNyYWRsZVBvc2l0aW9uRGF0YSA9IHNjYWZmb2xkSGFuZGxlci5jcmFkbGVQb3NpdGlvbkRhdGFcblxuICAgICAgICB2aWV3cG9ydEludGVycnVwdFByb3BlcnRpZXMuZWxlbWVudHJlZi5jdXJyZW50W1xuICAgICAgICAgICAgY3JhZGxlUG9zaXRpb25EYXRhLmJsb2NrU2Nyb2xsUHJvcGVydHldID1cbiAgICAgICAgICAgIE1hdGgubWF4KDAsY3JhZGxlUG9zaXRpb25EYXRhLmJsb2NrU2Nyb2xsUG9zKVxuXG4gICAgfVxuXG4gICAgLy8gY2xlYXIgbW91bnRlZCBmbGFnIG9uIHVubW91bnRcbiAgICB1c2VMYXlvdXRFZmZlY3QoKCk9PntcblxuICAgICAgICAvLyB1bm1vdW50XG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBpc01vdW50ZWRSZWYuY3VycmVudCA9IGZhbHNlXG4gICAgICAgIH1cblxuICAgIH0sW10pXG5cbiAgICAvL3NlbmQgY2FsbGJhY2sgZnVuY3Rpb25zIHRvIGhvc3RcbiAgICB1c2VFZmZlY3QoKCk9PntcblxuICAgICAgICByZWZlcmVuY2VJbmRleENhbGxiYWNrUmVmLmN1cnJlbnQgPSBmdW5jdGlvbnM/LnJlZmVyZW5jZUluZGV4Q2FsbGJhY2tcblxuICAgICAgICBpZiAoIWZ1bmN0aW9ucy5nZXRDYWxsYmFja3MpIHJldHVyblxuXG4gICAgICAgIGNvbnN0IHtzY3JvbGxUb0l0ZW0sIGdldFZpc2libGVMaXN0LCBnZXRDb250ZW50TGlzdCwgcmVsb2FkfSA9IHNlcnZpY2VIYW5kbGVyXG5cbiAgICAgICAgY29uc3QgY2FsbGJhY2tzID0ge1xuICAgICAgICAgICAgc2Nyb2xsVG9JdGVtLFxuICAgICAgICAgICAgZ2V0VmlzaWJsZUxpc3QsXG4gICAgICAgICAgICBnZXRDb250ZW50TGlzdCxcbiAgICAgICAgICAgIHJlbG9hZCxcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9ucy5nZXRDYWxsYmFja3MoY2FsbGJhY2tzKVxuXG4gICAgfSxbXSlcblxuICAgIC8vIGluaXRpYWxpemUgd2luZG93IHNjcm9sbCBsaXN0ZW5lclxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGNvbnN0IHZpZXdwb3J0ZGF0YSA9IHZpZXdwb3J0SW50ZXJydXB0UHJvcGVydGllc1JlZi5jdXJyZW50XG4gICAgICAgIHZpZXdwb3J0ZGF0YS5lbGVtZW50cmVmLmN1cnJlbnQuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJyxzY3JvbGxIYW5kbGVyLm9uU2Nyb2xsKVxuXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG5cbiAgICAgICAgICAgIHZpZXdwb3J0ZGF0YS5lbGVtZW50cmVmLmN1cnJlbnQgJiYgdmlld3BvcnRkYXRhLmVsZW1lbnRyZWYuY3VycmVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLHNjcm9sbEhhbmRsZXIub25TY3JvbGwpXG5cbiAgICAgICAgfVxuXG4gICAgfSxbXSlcblxuICAgIC8vIG9ic2VydmVyIHN1cHBvcnRcblxuICAgIC8qXG4gICAgICAgIFRoZXJlIGFyZSB0d28gaW50ZXJlY3Rpb24gb2JzZXJ2ZXJzLCBvbmUgZm9yIHRoZSBjcmFkbGUsIGFuZCBhbm90aGVyIGZvciB0cmlnZ2VybGluZXM7IFxuICAgICAgICAgICAgYm90aCBhZ2FpbnN0IHRoZSB2aWV3cG9ydC5cbiAgICAgICAgVGhlcmUgaXMgYWxzbyBhIHJlc2l6ZSBvYnNlcnZlciBmb3IgdGhlIGNyYWRsZSB3aW5ncywgdG8gcmVzcG9uZCB0byBzaXplIGNoYW5nZXMgb2YgXG4gICAgICAgICAgICB2YXJpYWJsZSBjZWxscy5cbiAgICAqLyAgICBcblxuICAgIC8vIGludGVyc2VjdGlvbiBvYnNlcnZlciBmb3IgY3JhZGxlIGJvZHlcblxuICAgIC8vIHRoaXMgc2V0cyB1cCBhbiBJbnRlcnNlY3Rpb25PYnNlcnZlciBvZiB0aGUgY3JhZGxlIGFnYWluc3QgdGhlIHZpZXdwb3J0LiBXaGVuIHRoZVxuICAgIC8vIGNyYWRsZSBnb2VzIG91dCBvZiB0aGUgb2JzZXJ2ZXIgc2NvcGUsIHRoZSBcInJlcG9zaXRpb25pbmdSZW5kZXJcIiBjcmFkbGUgc3RhdGUgaXMgdHJpZ2dlcmQuXG4gICAgLy8gQWxzbywgaW50ZXJzZWN0aW9uIG9ic2VydmVyIGZvciBjcmFkbGUgYXhpcyB0cmlnZ2VybGluZXMsIGFuZCBjcmFkbGUgcmVzaXplb2JzZXJ2ZXJcbiAgICB1c2VFZmZlY3QoKCk9PntcblxuICAgICAgICBjb25zdCBjcmFkbGVFbGVtZW50cyA9IHNjYWZmb2xkSGFuZGxlci5lbGVtZW50c1xuXG4gICAgICAgIGNvbnN0IGNyYWRsZWludGVyc2VjdG9ic2VydmVyID0gaW50ZXJydXB0SGFuZGxlci5jcmFkbGVJbnRlcnNlY3QuY3JlYXRlT2JzZXJ2ZXIoKVxuICAgICAgICBpbnRlcnJ1cHRIYW5kbGVyLmNyYWRsZUludGVyc2VjdC5jb25uZWN0RWxlbWVudHMoKVxuXG4gICAgICAgIGNvbnN0IHRyaWdnZXJvYnNlcnZlciA9IGludGVycnVwdEhhbmRsZXIuYXhpc1RyaWdnZXJsaW5lc0ludGVyc2VjdC5jcmVhdGVPYnNlcnZlcigpXG4gICAgICAgIGludGVycnVwdEhhbmRsZXIuYXhpc1RyaWdnZXJsaW5lc0ludGVyc2VjdC5jb25uZWN0RWxlbWVudHMoKVxuXG4gICAgICAgIGNvbnN0IHJlc2l6ZW9ic2VydmVyID0gaW50ZXJydXB0SGFuZGxlci5jcmFkbGVSZXNpemUuY3JlYXRlT2JzZXJ2ZXIoKVxuICAgICAgICBpbnRlcnJ1cHRIYW5kbGVyLmNyYWRsZVJlc2l6ZS5jb25uZWN0RWxlbWVudHMoKVxuXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG5cbiAgICAgICAgICAgIGNyYWRsZWludGVyc2VjdG9ic2VydmVyLmRpc2Nvbm5lY3QoKVxuICAgICAgICAgICAgdHJpZ2dlcm9ic2VydmVyLmRpc2Nvbm5lY3QoKVxuICAgICAgICAgICAgcmVzaXplb2JzZXJ2ZXIuZGlzY29ubmVjdCgpXG5cbiAgICAgICAgfVxuXG4gICAgfSxbXSlcblxuICAgIC8vID09PT09PT09PT09PT09PT09PT09PVsgUkVDT05GSUdVUkFUSU9OIGVmZmVjdHMgXT09PT09PT09PT09PT09PT09PT09PT1cblxuICAgIC8vIHRyaWdnZXIgcmVzaXppbmcgYmFzZWQgb24gdmlld3BvcnQgc3RhdGVcbiAgICB1c2VFZmZlY3QoKCk9PntcblxuICAgICAgICBpZiAoY3JhZGxlU3RhdGVSZWYuY3VycmVudCA9PSAnc2V0dXAnKSByZXR1cm5cblxuICAgICAgICBpZiAodmlld3BvcnRJbnRlcnJ1cHRQcm9wZXJ0aWVzLmlzUmVzaXppbmcpIHtcblxuICAgICAgICAgICAgY29uc3QgeyBzaWduYWxzIH0gPSBpbnRlcnJ1cHRIYW5kbGVyXG4gICAgICAgICAgICBzaWduYWxzLnBhdXNlVHJpZ2dlcmxpbmVzT2JzZXJ2ZXIgPSB0cnVlXG4gICAgICAgICAgICBzaWduYWxzLnBhdXNlQ3JhZGxlSW50ZXJzZWN0aW9uT2JzZXJ2ZXIgPSB0cnVlXG4gICAgICAgICAgICBzaWduYWxzLnBhdXNlQ3JhZGxlUmVzaXplT2JzZXJ2ZXIgPSB0cnVlXG4gICAgICAgICAgICBzaWduYWxzLnBhdXNlU2Nyb2xsaW5nRWZmZWN0cyA9IHRydWVcbiAgICAgICAgICAgIHNldENyYWRsZVN0YXRlKCdyZXNpemluZycpXG5cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGNvbXBsZXRlIHJlc2l6aW5nIG1vZGVcbiAgICAgICAgaWYgKCF2aWV3cG9ydEludGVycnVwdFByb3BlcnRpZXMuaXNSZXNpemluZyAmJiAoY3JhZGxlU3RhdGVSZWYuY3VycmVudCA9PSAncmVzaXppbmcnKSkge1xuXG4gICAgICAgICAgICBzZXRDcmFkbGVTdGF0ZSgnZmluaXNocmVzaXplJylcblxuICAgICAgICB9XG5cbiAgICB9LFt2aWV3cG9ydEludGVycnVwdFByb3BlcnRpZXMuaXNSZXNpemluZ10pXG5cbiAgICAvLyByZWxvYWQgZm9yIGNoYW5nZWQgc2l6ZSBwYXJhbWV0ZXJzXG4gICAgdXNlRWZmZWN0KCgpPT57XG5cbiAgICAgICAgaWYgKGNyYWRsZVN0YXRlUmVmLmN1cnJlbnQgPT0gJ3NldHVwJykgcmV0dXJuXG5cbiAgICAgICAgY29uc3Qgc2lnbmFscyA9IGludGVycnVwdEhhbmRsZXIuc2lnbmFsc1xuXG4gICAgICAgIC8vIFRPRE86IGJ1bmRsZSB0aGVzZSBhcyBpbnRlcnJ1cHRIYW5kbGVyLnBhdXNlRWZmZWN0cygpLCB0aGVuIGludGVycnVwdEhhbmRsZXIucmVzdW1lRWZmZWN0cygpXG4gICAgICAgIHNpZ25hbHMucGF1c2VDcmFkbGVJbnRlcnNlY3Rpb25PYnNlcnZlciA9IHRydWVcbiAgICAgICAgc2lnbmFscy5wYXVzZVRyaWdnZXJsaW5lc09ic2VydmVyID0gdHJ1ZVxuICAgICAgICBzaWduYWxzLnBhdXNlU2Nyb2xsaW5nRWZmZWN0cyA9IHRydWVcblxuICAgICAgICBzZXRDcmFkbGVTdGF0ZSgncmVjb25maWd1cmUnKVxuXG4gICAgfSxbXG4gICAgICAgIGxpc3RzaXplLFxuICAgICAgICBjZWxsSGVpZ2h0LFxuICAgICAgICBjZWxsV2lkdGgsXG4gICAgICAgIGdhcCxcbiAgICAgICAgcGFkZGluZyxcbiAgICAgICAgdHJpZ2dlcmxpbmVPZmZzZXRcbiAgICBdKVxuXG4gICAgLy8gdHJpZ2dlciBwaXZvdCAqb25seSogb24gY2hhbmdlIGluIG9yaWVudGF0aW9uXG4gICAgdXNlRWZmZWN0KCgpPT4ge1xuXG4gICAgICAgIHNjYWZmb2xkSGFuZGxlci5jcmFkbGVQb3NpdGlvbkRhdGEuYmxvY2tTY3JvbGxQcm9wZXJ0eSA9IFxuICAgICAgICAgICAgKG9yaWVudGF0aW9uID09IFwidmVydGljYWxcIik/XCJzY3JvbGxUb3BcIjpcInNjcm9sbExlZnRcIlxuXG4gICAgICAgIGlmIChjcmFkbGVTdGF0ZVJlZi5jdXJyZW50ID09ICdzZXR1cCcpIHJldHVyblxuXG4gICAgICAgIGNvbnN0IHsgXG4gICAgICAgICAgICBjZWxsV2lkdGgsXG4gICAgICAgICAgICBjZWxsSGVpZ2h0LFxuICAgICAgICAgICAgZ2FwLFxuICAgICAgICB9ID0gY3JhZGxlSW5oZXJpdGVkUHJvcGVydGllc1JlZi5jdXJyZW50XG5cbiAgICAgICAgLy8gZ2V0IHByZXZpb3VzIHJhdGlvXG4gICAgICAgIGNvbnN0IHByZXZpb3VzQ2VsbFBpeGVsTGVuZ3RoID0gXG4gICAgICAgICAgICAoKG9yaWVudGF0aW9uID09ICd2ZXJ0aWNhbCcpP1xuICAgICAgICAgICAgICAgIGNlbGxXaWR0aDpcbiAgICAgICAgICAgICAgICBjZWxsSGVpZ2h0KVxuICAgICAgICAgICAgKyBnYXBcblxuICAgICAgICBjb25zdCBwcmV2aW91c0F4aXNPZmZzZXQgPSBzY2FmZm9sZEhhbmRsZXIuY3JhZGxlUG9zaXRpb25EYXRhLnRhcmdldEF4aXNQaXhlbE9mZnNldFxuXG4gICAgICAgIGNvbnN0IHByZXZpb3VzcmF0aW8gPSBwcmV2aW91c0F4aXNPZmZzZXQvcHJldmlvdXNDZWxsUGl4ZWxMZW5ndGhcblxuICAgICAgICBjb25zdCBwaXZvdENlbGxQaXhlbExlbmd0aCA9IFxuICAgICAgICAgICAgKChvcmllbnRhdGlvbiA9PSAndmVydGljYWwnKT9cbiAgICAgICAgICAgICAgICBjZWxsSGVpZ2h0OlxuICAgICAgICAgICAgICAgIGNlbGxXaWR0aClcbiAgICAgICAgICAgICsgZ2FwXG5cbiAgICAgICAgY29uc3QgcGl2b3RBeGlzT2Zmc2V0ID0gcHJldmlvdXNyYXRpbyAqIHBpdm90Q2VsbFBpeGVsTGVuZ3RoXG4gICAgICAgIFxuICAgICAgICBzY2FmZm9sZEhhbmRsZXIuY3JhZGxlUG9zaXRpb25EYXRhLnRhcmdldEF4aXNQaXhlbE9mZnNldCA9IE1hdGgucm91bmQocGl2b3RBeGlzT2Zmc2V0KVxuXG4gICAgICAgIGNvbnN0IHsgc2lnbmFscyB9ID0gaW50ZXJydXB0SGFuZGxlclxuICAgICAgICBcbiAgICAgICAgc2lnbmFscy5wYXVzZVRyaWdnZXJsaW5lc09ic2VydmVyID0gdHJ1ZVxuICAgICAgICBzaWduYWxzLnBhdXNlU2Nyb2xsaW5nRWZmZWN0cyA9IHRydWVcbiAgICAgICAgc2lnbmFscy5wYXVzZUNyYWRsZUludGVyc2VjdGlvbk9ic2VydmVyID0gdHJ1ZVxuXG4gICAgICAgIGNvbnN0IGNyYWRsZUNvbnRlbnQgPSBjb250ZW50SGFuZGxlci5jb250ZW50XG4gICAgICAgIGNyYWRsZUNvbnRlbnQuaGVhZENlbGxDb21wb25lbnRzID0gW11cbiAgICAgICAgY3JhZGxlQ29udGVudC50YWlsQ2VsbENvbXBvbmVudHMgPSBbXVxuXG4gICAgICAgIHNldENyYWRsZVN0YXRlKCdwaXZvdCcpXG5cbiAgICB9LFtvcmllbnRhdGlvbl0pXG5cbiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT1bIFNUWUxFUyBdPT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgICAvLyBzdHlsZXMgZm9yIHRoZSBzaXggc2NhZmZvbGQgY29tcG9uZW50c1xuICAgIGNvbnN0IFtcbiAgICAgICAgY3JhZGxlSGVhZFN0eWxlLCBcbiAgICAgICAgY3JhZGxlVGFpbFN0eWxlLCBcbiAgICAgICAgY3JhZGxlQXhpc1N0eWxlLCBcbiAgICAgICAgdHJpZ2dlcmxpbmVIZWFkU3R5bGUsIFxuICAgICAgICB0cmlnZ2VybGluZVRhaWxTdHlsZSxcbiAgICAgICAgY3JhZGxlRGl2aWRlclN0eWxlXG4gICAgXSA9IHVzZU1lbW8oKCk9PiB7XG5cbiAgICAgICAgcmV0dXJuIHN0eWxlc0hhbmRsZXIuc2V0Q3JhZGxlU3R5bGVzKHtcblxuICAgICAgICAgICAgb3JpZW50YXRpb24sIFxuICAgICAgICAgICAgY2VsbEhlaWdodCwgXG4gICAgICAgICAgICBjZWxsV2lkdGgsIFxuICAgICAgICAgICAgZ2FwLFxuICAgICAgICAgICAgcGFkZGluZyxcbiAgICAgICAgICAgIHZpZXdwb3J0aGVpZ2h0LCBcbiAgICAgICAgICAgIHZpZXdwb3J0d2lkdGgsXG4gICAgICAgICAgICBjcm9zc2NvdW50LCBcbiAgICAgICAgICAgIHVzZXJzdHlsZXM6c3R5bGVzLFxuICAgICAgICAgICAgdHJpZ2dlcmxpbmVPZmZzZXQsXG5cbiAgICAgICAgfSlcblxuICAgIH0sW1xuXG4gICAgICAgIG9yaWVudGF0aW9uLFxuICAgICAgICBjZWxsSGVpZ2h0LFxuICAgICAgICBjZWxsV2lkdGgsXG4gICAgICAgIGdhcCxcbiAgICAgICAgcGFkZGluZyxcbiAgICAgICAgdmlld3BvcnRoZWlnaHQsXG4gICAgICAgIHZpZXdwb3J0d2lkdGgsXG4gICAgICAgIGNyb3NzY291bnQsXG4gICAgICAgIHN0eWxlcyxcbiAgICAgICAgdHJpZ2dlcmxpbmVPZmZzZXQsXG5cbiAgICAgIF0pXG5cbiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT1bIHN0YXRlIG1hbmFnZW1lbnQgXT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgICAvLyB0aGlzIGlzIHRoZSBjb3JlIHN0YXRlIGVuZ2luZVxuICAgIC8vIHVzZUxheW91dCBmb3Igc3VwcHJlc3NpbmcgZmxhc2hlc1xuICAgIHVzZUxheW91dEVmZmVjdCgoKT0+e1xuXG4gICAgICAgIHN3aXRjaCAoY3JhZGxlU3RhdGUpIHtcblxuICAgICAgICAgICAgY2FzZSAnc2V0dXAnOiB7IC8vIGN5Y2xlIHRvIGFsbG93IGZvciByZWYgY29uZmlnXG5cbiAgICAgICAgICAgICAgICBzZXRDcmFkbGVTdGF0ZSgnZG9zZXR1cCcpIC8vIGxvYWQgZ3JpZFxuXG4gICAgICAgICAgICAgICAgYnJlYWtcblxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyByZW5kZXJ1cGRhdGVkY29udGVudCBpcyBjYWxsZWQgZnJvbSB1cGRhdGVDcmFkbGVDb250ZW50LiBcbiAgICAgICAgICAgIC8vIGl0IGlzIHJlcXVpcmVkIHRvIGludGVncmF0ZSBjaGFuZ2VkIERPTSBjb25maWd1cmF0aW9ucyBiZWZvcmUgJ3JlYWR5JyBpcyBkaXNwbGF5ZWRcbiAgICAgICAgICAgIGNhc2UgJ3JlbmRlcnVwZGF0ZWRjb250ZW50Jzoge1xuXG4gICAgICAgICAgICAgICAgc2V0Q3JhZGxlU3RhdGUoJ3JlYWR5JylcblxuICAgICAgICAgICAgICAgIGJyZWFrXG5cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY2FzZSAnc3RhcnRyZXBvc2l0aW9uJzoge1xuXG4gICAgICAgICAgICAgICAgaW50ZXJydXB0SGFuZGxlci5zaWduYWxzLnBhdXNlVHJpZ2dlcmxpbmVzT2JzZXJ2ZXIgPSB0cnVlXG5cbiAgICAgICAgICAgICAgICAvLyBhdm9pZCByZWN1cnNpdmUgY3JhZGxlIGludGVyc2VjdGlvbiBpbnRlcnJ1cHRzXG4gICAgICAgICAgICAgICAgaW50ZXJydXB0SGFuZGxlci5zaWduYWxzLnBhdXNlQ3JhZGxlSW50ZXJzZWN0aW9uT2JzZXJ2ZXIgPSB0cnVlXG5cbiAgICAgICAgICAgICAgICBpbnRlcnJ1cHRIYW5kbGVyLnNpZ25hbHMucmVwb3NpdGlvbmluZ1JlcXVpcmVkID0gZmFsc2UgLy8gYmVjYXVzZSBub3cgdW5kZXJ3YXlcblxuICAgICAgICAgICAgICAgIHNldENyYWRsZVN0YXRlKCdyZXBvc2l0aW9uaW5nUmVuZGVyJylcblxuICAgICAgICAgICAgICAgIGJyZWFrXG5cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLypcbiAgICAgICAgICAgICAgICB0aGUgZm9sbG93aW5nIDYgY3JhZGxlIHN0YXRlcyBhbGwgcmVzb2x2ZSB3aXRoXG4gICAgICAgICAgICAgICAgYSBjaGFpbiBzdGFydGluZyB3aXRoIHNldENyYWRsZUNvbnRlbnQsIFxuICAgICAgICAgICAgICAgIGFuZCBlbmRpbmcgd2l0aCAnbm9ybWFsaXplc2lnbmFscydcbiAgICAgICAgICAgICovXG4gICAgICAgICAgICBjYXNlICdkb3NldHVwJzpcbiAgICAgICAgICAgIGNhc2UgJ2RvcmVwb3NpdGlvbic6XG4gICAgICAgICAgICBjYXNlICdmaW5pc2hyZXNpemUnOlxuICAgICAgICAgICAgY2FzZSAncGl2b3QnOlxuICAgICAgICAgICAgY2FzZSAncmVjb25maWd1cmUnOlxuICAgICAgICAgICAgY2FzZSAncmVsb2FkJzoge1xuXG4gICAgICAgICAgICAgICAgY29uc3QgY3JhZGxlQ29udGVudCA9IGNvbnRlbnRIYW5kbGVyLmNvbnRlbnRcblxuICAgICAgICAgICAgICAgIC8vIFRPRE86IHJldGFpbiBleGlzdGluZyBwb3J0YWxzIHRvIHRoZSBleHRlbnQgcG9zc2libGVcbiAgICAgICAgICAgICAgICBjcmFkbGVDb250ZW50LmhlYWRDZWxsQ29tcG9uZW50cyA9IFtdXG4gICAgICAgICAgICAgICAgY3JhZGxlQ29udGVudC50YWlsQ2VsbENvbXBvbmVudHMgPSBbXVxuXG4gICAgICAgICAgICAgICAgaGFuZGxlcnNSZWYuY3VycmVudC5wb3J0YWxIYW5kbGVyLnJlc2V0U2Nyb2xsZXJQb3J0YWxSZXBvc2l0b3J5KClcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBjb250ZW50SGFuZGxlci5zZXRDcmFkbGVDb250ZW50KCBjcmFkbGVTdGF0ZSApXG5cbiAgICAgICAgICAgICAgICBzZXRDcmFkbGVTdGF0ZSgnbm9ybWFsaXplc2lnbmFscycpXG5cbiAgICAgICAgICAgICAgICBicmVha1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBjYXNlICdwcmVyZW5kZXInOiB7XG5cbiAgICAgICAgICAgIC8vICAgICBzZXRDcmFkbGVTdGF0ZSgnbm9ybWFsaXplc2lnbmFscycpXG5cbiAgICAgICAgICAgIC8vICAgICBicmVha1xuICAgICAgICAgICAgLy8gfVxuXG4gICAgICAgICAgICBjYXNlICdub3JtYWxpemVzaWduYWxzJzoge1xuXG4gICAgICAgICAgICAgICAgLy8gcHJpb3JpdGl6ZSBpbnRlcnJ1cHRzXG4gICAgICAgICAgICAgICAgaWYgKHZpZXdwb3J0SW50ZXJydXB0UHJvcGVydGllc1JlZi5jdXJyZW50LmlzUmVzaXppbmcpIHtcblxuICAgICAgICAgICAgICAgICAgICBzZXRDcmFkbGVTdGF0ZSgncmVzaXppbmcnKVxuXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChpbnRlcnJ1cHRIYW5kbGVyLnNpZ25hbHMucmVwb3NpdGlvbmluZ1JlcXVpcmVkKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgc2V0Q3JhZGxlU3RhdGUoJ3N0YXJ0cmVwb3NpdGlvbicpXG5cbiAgICAgICAgICAgICAgICB9IGVsc2UgeyAgICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHNpZ25hbHMgPSBpbnRlcnJ1cHRIYW5kbGVyLnNpZ25hbHNcblxuICAgICAgICAgICAgICAgICAgICBzaWduYWxzLnBhdXNlVHJpZ2dlcmxpbmVzT2JzZXJ2ZXIgJiYgKHNpZ25hbHMucGF1c2VUcmlnZ2VybGluZXNPYnNlcnZlciA9IGZhbHNlKVxuICAgICAgICAgICAgICAgICAgICBzaWduYWxzLnBhdXNlQ3JhZGxlSW50ZXJzZWN0aW9uT2JzZXJ2ZXIgJiYgKHNpZ25hbHMucGF1c2VDcmFkbGVJbnRlcnNlY3Rpb25PYnNlcnZlciA9IGZhbHNlKVxuXG4gICAgICAgICAgICAgICAgICAgIHNpZ25hbHMucGF1c2VTY3JvbGxpbmdFZmZlY3RzICYmIChzaWduYWxzLnBhdXNlU2Nyb2xsaW5nRWZmZWN0cyA9IGZhbHNlKVxuXG4gICAgICAgICAgICAgICAgICAgIHNldENyYWRsZVN0YXRlKCdyZWFkeScpXG5cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBicmVhayBcblxuICAgICAgICAgICAgfSAgICAgICAgICBcblxuICAgICAgICB9XG5cbiAgICB9LFtjcmFkbGVTdGF0ZV0pXG5cbiAgICAvLyBzdGFuZGFyZCByZW5kZXJpbmcgc3RhdGVzXG4gICAgdXNlRWZmZWN0KCgpPT4geyBcblxuICAgICAgICBzd2l0Y2ggKGNyYWRsZVN0YXRlKSB7XG5cbiAgICAgICAgICAgIC8vIHJlcG9zaXRpb25pbmdSZW5kZXIgYW5kIHJlcG9zaXRpb25pbmdDb250aW51YXRpb24gYXJlIHRvZ2dsZWQgdG8gZ2VuZXJhdGUgY29udGludW91cyBcbiAgICAgICAgICAgIC8vIHJlcG9zaWlvbmluZyByZW5kZXJzXG4gICAgICAgICAgICBjYXNlICdyZXBvc2l0aW9uaW5nUmVuZGVyJzpcbiAgICAgICAgICAgICAgICBicmVha1xuXG4gICAgICAgICAgICBjYXNlICdyZXBvc2l0aW9uaW5nQ29udGludWF0aW9uJzogLy8gc2V0IGZyb20gb25TY3JvbGxcbiAgICAgICAgICAgICAgICBzZXRDcmFkbGVTdGF0ZSgncmVwb3NpdGlvbmluZ1JlbmRlcicpXG4gICAgICAgICAgICAgICAgYnJlYWtcblxuICAgICAgICAgICAgY2FzZSAncmVhZHknOiAvLyBubyBhY3Rpb24gb24gcmVhZHlcbiAgICAgICAgICAgICAgICBicmVha1xuXG4gICAgICAgIH1cblxuICAgIH0sW2NyYWRsZVN0YXRlXSlcblxuICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09WyBSRU5ERVIgXT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4gICAgY29uc3Qgc2Nyb2xsQXhpc1JlZmVyZW5jZUluZGV4ID0gc2NhZmZvbGRIYW5kbGVyLmNyYWRsZVBvc2l0aW9uRGF0YS50YXJnZXRBeGlzUmVmZXJlbmNlSW5kZXhcbiAgICBjb25zdCBzY3JvbGxUcmFja2VyQXJncyA9IHVzZU1lbW8oKCkgPT4ge1xuICAgICAgICBpZiAoIShjcmFkbGVTdGF0ZSA9PSAncmVwb3NpdGlvbmluZ0NvbnRpbnVhdGlvbicgfHwgY3JhZGxlU3RhdGUgPT0gJ3JlcG9zaXRpb25pbmdSZW5kZXInKSkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGxcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB0cmFja2VyYXJncyA9IHtcbiAgICAgICAgICAgIHRvcDp2aWV3cG9ydERpbWVuc2lvbnMudG9wICsgMyxcbiAgICAgICAgICAgIGxlZnQ6dmlld3BvcnREaW1lbnNpb25zLmxlZnQgKyAzLFxuICAgICAgICAgICAgc2Nyb2xsQXhpc1JlZmVyZW5jZUluZGV4LFxuICAgICAgICAgICAgbGlzdHNpemUsXG4gICAgICAgICAgICBzdHlsZXMsXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRyYWNrZXJhcmdzXG4gICAgfSxbXG4gICAgICAgIGNyYWRsZVN0YXRlLCBcbiAgICAgICAgdmlld3BvcnREaW1lbnNpb25zLCBcbiAgICAgICAgc2Nyb2xsQXhpc1JlZmVyZW5jZUluZGV4LCBcbiAgICAgICAgbGlzdHNpemUsXG4gICAgICAgIHN0eWxlcyxcbiAgICAgICAgXVxuICAgIClcblxuICAgIGNvbnN0IGNyYWRsZUNvbnRlbnQgPSBjb250ZW50SGFuZGxlci5jb250ZW50XG5cbiAgICAvLyB0aGUgZGF0YS10eXBlID0gcG9ydGFscm9vdCBkaXYgaXMgdGhlIGhpZGRlbiBwb3J0YWwgY29tcG9uZW50IGNhY2hlXG4gICAgcmV0dXJuIDxDcmFkbGVQb3J0YWxzQ29udGV4dC5Qcm92aWRlciB2YWx1ZSA9IHtoYW5kbGVyc1JlZi5jdXJyZW50LnBvcnRhbEhhbmRsZXJ9PlxuICAgICAgICB7KGNyYWRsZVN0YXRlUmVmLmN1cnJlbnQgIT0gJ3NldHVwJykgJiYgPGRpdiBkYXRhLXR5cGUgPSAncG9ydGFscm9vdCcgc3R5bGUgPSB7IHBvcnRhbHJvb3RzdHlsZSB9PlxuICAgICAgICAgICAgPFBvcnRhbExpc3Qgc2Nyb2xsZXJQcm9wcyA9IHtoYW5kbGVyc1JlZi5jdXJyZW50LnBvcnRhbEhhbmRsZXIuc2Nyb2xsZXJQcm9wc30vPlxuICAgICAgICA8L2Rpdj59XG5cbiAgICAgICAgeygoY3JhZGxlU3RhdGVSZWYuY3VycmVudCA9PSAncmVwb3NpdGlvbmluZ1JlbmRlcicpIHx8IFxuICAgICAgICAgICAgKGNyYWRsZVN0YXRlUmVmLmN1cnJlbnQgPT0gJ3JlcG9zaXRpb25pbmdDb250aW51YXRpb24nKSk/XG4gICAgICAgICAgICA8U2Nyb2xsVHJhY2tlciBcbiAgICAgICAgICAgICAgICB0b3AgPSB7c2Nyb2xsVHJhY2tlckFyZ3MudG9wfSBcbiAgICAgICAgICAgICAgICBsZWZ0ID0ge3Njcm9sbFRyYWNrZXJBcmdzLmxlZnR9IFxuICAgICAgICAgICAgICAgIG9mZnNldCA9IHtzY3JvbGxUcmFja2VyQXJncy5zY3JvbGxBeGlzUmVmZXJlbmNlSW5kZXh9IFxuICAgICAgICAgICAgICAgIGxpc3RzaXplID0ge3Njcm9sbFRyYWNrZXJBcmdzLmxpc3RzaXplfVxuICAgICAgICAgICAgICAgIHN0eWxlcyA9IHtzY3JvbGxUcmFja2VyQXJncy5zdHlsZXN9XG4gICAgICAgICAgICAvPjpcbiAgICAgICAgICAgIDxkaXYgXG4gICAgICAgICAgICAgICAgZGF0YS10eXBlID0gJ2NyYWRsZS1heGlzJ1xuICAgICAgICAgICAgICAgIHN0eWxlID0ge2NyYWRsZUF4aXNTdHlsZX0gXG4gICAgICAgICAgICAgICAgcmVmID0ge2F4aXNDcmFkbGVFbGVtZW50UmVmfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICAgICAgZGF0YS10eXBlID0gJ3RyaWdnZXJsaW5lLWhlYWQnXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlID0ge3RyaWdnZXJsaW5lSGVhZFN0eWxlfVxuICAgICAgICAgICAgICAgICAgICByZWYgPSB7aGVhZFRyaWdnZXJsaW5lQ3JhZGxlRWxlbWVudFJlZn1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgICBkYXRhLXR5cGUgPSAndHJpZ2dlcmxpbmUtdGFpbCdcbiAgICAgICAgICAgICAgICAgICAgc3R5bGUgPSB7dHJpZ2dlcmxpbmVUYWlsU3R5bGV9XG4gICAgICAgICAgICAgICAgICAgIHJlZiA9IHt0YWlsVHJpZ2dlcmxpbmVDcmFkbGVFbGVtZW50UmVmfVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgIHt0cnVlP1xuICAgICAgICAgICAgICAgICAgICA8ZGl2IFxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS10eXBlID0gJ2NyYWRsZS1kaXZpZGVyJyBcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlID0ge2NyYWRsZURpdmlkZXJTdHlsZX1cbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj46XG4gICAgICAgICAgICAgICAgICAgIG51bGxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgPGRpdiBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgZGF0YS10eXBlID0gJ2hlYWQnXG4gICAgICAgICAgICAgICAgICAgIHJlZiA9IHtoZWFkQ3JhZGxlRWxlbWVudFJlZn0gXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlID0ge2NyYWRsZUhlYWRTdHlsZX1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIHsoY3JhZGxlU3RhdGVSZWYuY3VycmVudCAhPSAnc2V0dXAnKT9cbiAgICAgICAgICAgICAgICAgICAgICAgIGNyYWRsZUNvbnRlbnQuaGVhZENlbGxDb21wb25lbnRzOlxuICAgICAgICAgICAgICAgICAgICAgICAgbnVsbFxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgZGF0YS10eXBlID0gJ3RhaWwnXG4gICAgICAgICAgICAgICAgICAgIHJlZiA9IHt0YWlsQ3JhZGxlRWxlbWVudFJlZn0gXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlID0ge2NyYWRsZVRhaWxTdHlsZX1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIHsoY3JhZGxlU3RhdGVSZWYuY3VycmVudCAhPSAnc2V0dXAnKT9cbiAgICAgICAgICAgICAgICAgICAgICAgIGNyYWRsZUNvbnRlbnQudGFpbENlbGxDb21wb25lbnRzOlxuICAgICAgICAgICAgICAgICAgICAgICAgbnVsbFxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgfVxuICAgICAgICBcbiAgICA8L0NyYWRsZVBvcnRhbHNDb250ZXh0LlByb3ZpZGVyPlxuXG59IC8vIENyYWRsZVxuXG4vLyB1dGlsaXRpZXNcblxuY29uc3QgZ2V0Q3JhZGxlSGFuZGxlcnMgPSAoY3JhZGxlUGFyYW1ldGVycykgPT4ge1xuXG4gICAgY29uc3QgY3JlYXRlSGFuZGxlciA9IGhhbmRsZXIgPT4gbmV3IGhhbmRsZXIoY3JhZGxlUGFyYW1ldGVycylcblxuICAgIHJldHVybiB7XG4gICAgICAgIHBvcnRhbEhhbmRsZXI6bmV3IFBvcnRhbEhhbmRsZXIoKSxcbiAgICAgICAgaW50ZXJydXB0SGFuZGxlcjpjcmVhdGVIYW5kbGVyKEludGVycnVwdEhhbmRsZXIpLFxuICAgICAgICBzY3JvbGxIYW5kbGVyOmNyZWF0ZUhhbmRsZXIoU2Nyb2xsSGFuZGxlciksXG4gICAgICAgIHN0YXRlSGFuZGxlcjpjcmVhdGVIYW5kbGVyKFN0YXRlSGFuZGxlciksXG4gICAgICAgIGNvbnRlbnRIYW5kbGVyOmNyZWF0ZUhhbmRsZXIoQ29udGVudEhhbmRsZXIpLFxuICAgICAgICBzY2FmZm9sZEhhbmRsZXI6Y3JlYXRlSGFuZGxlcihTY2FmZm9sZEhhbmRsZXIpLFxuICAgICAgICBzZXJ2aWNlSGFuZGxlcjpjcmVhdGVIYW5kbGVyKFNlcnZpY2VIYW5kbGVyKSxcbiAgICAgICAgc3R5bGVzSGFuZGxlcjpjcmVhdGVIYW5kbGVyKFN0eWxlc0hhbmRsZXIpLFxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQ3JhZGxlIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJyZWFjdF8xIiwiY3JlYXRlQ29udGV4dCIsInBvcnRhbHJvb3RzdHlsZSIsImRpc3BsYXkiLCJDcmFkbGUiLCJfYSIsImdyaWRTcGVjcyIsInJ1bndheVJvd2NvdW50U3BlYyIsImxpc3RzaXplIiwiZGVmYXVsdFZpc2libGVJbmRleCIsImdldEl0ZW0iLCJwbGFjZWhvbGRlciIsImZ1bmN0aW9ucyIsInN0eWxlcyIsInNjcm9sbGVyTmFtZSIsInNjcm9sbGVySUQiLCJ0cmlnZ2VybGluZU9mZnNldCIsImdhcCIsInBhZGRpbmciLCJjZWxsSGVpZ2h0IiwiY2VsbFdpZHRoIiwibGF5b3V0IiwiZGVuc2UiLCJ2aWV3cG9ydEludGVycnVwdFByb3BlcnRpZXMiLCJ2aWV3cG9ydF8xIiwidmlld3BvcnRJbnRlcnJ1cHRQcm9wZXJ0aWVzUmVmIiwiY3VycmVudCIsInZpZXdwb3J0aGVpZ2h0Iiwidmlld3BvcnREaW1lbnNpb25zIiwidmlld3BvcnR3aWR0aCIsImNyYWRsZVN0YXRlIiwic2V0Q3JhZGxlU3RhdGUiLCJjcmFkbGVTdGF0ZVJlZiIsImlzTW91bnRlZFJlZiIsImhlYWRDcmFkbGVFbGVtZW50UmVmIiwidGFpbENyYWRsZUVsZW1lbnRSZWYiLCJheGlzQ3JhZGxlRWxlbWVudFJlZiIsImhlYWRUcmlnZ2VybGluZUNyYWRsZUVsZW1lbnRSZWYiLCJ0YWlsVHJpZ2dlcmxpbmVDcmFkbGVFbGVtZW50UmVmIiwiY3JhZGxlRWxlbWVudHNSZWYiLCJoZWFkUmVmIiwidGFpbFJlZiIsImF4aXNSZWYiLCJoZWFkVHJpZ2dlcmxpbmVSZWYiLCJ0YWlsVHJpZ2dlcmxpbmVSZWYiLCJjcm9zc2NvdW50Iiwidmlld3BvcnRzaXplIiwib3JpZW50YXRpb24iLCJjcm9zc0xlbmd0aCIsInZpZXdwb3J0bGVuZ3RoZm9yY2FsYyIsInRpbGVsZW5ndGhmb3JjYWxjIiwiTWF0aCIsIm1pbiIsImZsb29yIiwidmlld3BvcnRMZW5ndGgiLCJyb3dMZW5ndGgiLCJ2aWV3cG9ydFJvd2NvdW50IiwiY2VpbCIsInZpZXdwb3J0VmlzaWJsZVJvd2NvdW50IiwibGlzdFJvd2NvdW50IiwiY2FsY3VsYXRlZENyYWRsZVJvd2NvdW50IiwiY3JhZGxlUm93Y291bnQiLCJydW53YXlSb3djb3VudCIsImRpZmYiLCJtYXgiLCJpdGVtY291bnQiLCJzZXRJdGVtRWxlbWVudERhdGEiLCJpdGVtRWxlbWVudERhdGEiLCJyZWdpc3RyYXRpb25UeXBlIiwic2hlbGxyZWYiLCJjb250ZW50SGFuZGxlciIsIml0ZW1FbGVtZW50cyIsInNldCIsImluZGV4IiwiaW50ZXJuYWxDYWxsYmFja3NSZWYiLCJzZXRFbGVtZW50RGF0YSIsInJlZmVyZW5jZUluZGV4Q2FsbGJhY2tSZWYiLCJyZWZlcmVuY2VJbmRleENhbGxiYWNrIiwiZXh0ZXJuYWxDYWxsYmFja3NSZWYiLCJjcmFkbGVJbmhlcml0ZWRQcm9wZXJ0aWVzUmVmIiwiY3JhZGxlSW50ZXJuYWxQcm9wZXJ0aWVzUmVmIiwiaGFuZGxlcnNSZWYiLCJjcmFkbGVQYXJhbWV0ZXJzIiwiZ2V0Q3JhZGxlSGFuZGxlcnMiLCJwb3J0YWxIYW5kbGVyIiwiaW50ZXJydXB0SGFuZGxlciIsInNjcm9sbEhhbmRsZXIiLCJzdGF0ZUhhbmRsZXIiLCJzY2FmZm9sZEhhbmRsZXIiLCJzZXJ2aWNlSGFuZGxlciIsInN0eWxlc0hhbmRsZXIiLCJwb3J0YWwiLCJfYiIsImlzUmVwYXJlbnRpbmciLCJjcmFkbGVQb3NpdGlvbkRhdGEiLCJlbGVtZW50cmVmIiwiYmxvY2tTY3JvbGxQcm9wZXJ0eSIsImJsb2NrU2Nyb2xsUG9zIiwiZ2V0Q2FsbGJhY2tzIiwiZ2V0VmlzaWJsZUxpc3QiLCJnZXRDb250ZW50TGlzdCIsInJlbG9hZCIsImNhbGxiYWNrcyIsInNjcm9sbFRvSXRlbSIsInZpZXdwb3J0ZGF0YSIsImFkZEV2ZW50TGlzdGVuZXIiLCJvblNjcm9sbCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJjcmFkbGVFbGVtZW50cyIsImVsZW1lbnRzIiwiY3JhZGxlaW50ZXJzZWN0b2JzZXJ2ZXIiLCJjcmFkbGVJbnRlcnNlY3QiLCJjcmVhdGVPYnNlcnZlciIsImNvbm5lY3RFbGVtZW50cyIsInRyaWdnZXJvYnNlcnZlciIsImF4aXNUcmlnZ2VybGluZXNJbnRlcnNlY3QiLCJyZXNpemVvYnNlcnZlciIsImNyYWRsZVJlc2l6ZSIsImRpc2Nvbm5lY3QiLCJpc1Jlc2l6aW5nIiwic2lnbmFscyIsInBhdXNlVHJpZ2dlcmxpbmVzT2JzZXJ2ZXIiLCJwYXVzZUNyYWRsZUludGVyc2VjdGlvbk9ic2VydmVyIiwicGF1c2VDcmFkbGVSZXNpemVPYnNlcnZlciIsInBhdXNlU2Nyb2xsaW5nRWZmZWN0cyIsInByZXZpb3VzQ2VsbFBpeGVsTGVuZ3RoIiwicHJldmlvdXNBeGlzT2Zmc2V0IiwidGFyZ2V0QXhpc1BpeGVsT2Zmc2V0IiwicHJldmlvdXNyYXRpbyIsInBpdm90Q2VsbFBpeGVsTGVuZ3RoIiwicGl2b3RBeGlzT2Zmc2V0Iiwicm91bmQiLCJjcmFkbGVDb250ZW50IiwiY29udGVudCIsImhlYWRDZWxsQ29tcG9uZW50cyIsInRhaWxDZWxsQ29tcG9uZW50cyIsInNldENyYWRsZVN0eWxlcyIsInVzZXJzdHlsZXMiLCJjcmFkbGVIZWFkU3R5bGUiLCJjcmFkbGVUYWlsU3R5bGUiLCJjcmFkbGVBeGlzU3R5bGUiLCJ0cmlnZ2VybGluZUhlYWRTdHlsZSIsInRyaWdnZXJsaW5lVGFpbFN0eWxlIiwiY3JhZGxlRGl2aWRlclN0eWxlIiwicmVwb3NpdGlvbmluZ1JlcXVpcmVkIiwiY3JhZGxlQ29udGVudF8xIiwicmVzZXRTY3JvbGxlclBvcnRhbFJlcG9zaXRvcnkiLCJzZXRDcmFkbGVDb250ZW50Iiwic2Nyb2xsQXhpc1JlZmVyZW5jZUluZGV4IiwidGFyZ2V0QXhpc1JlZmVyZW5jZUluZGV4Iiwic2Nyb2xsVHJhY2tlckFyZ3MiLCJ0cmFja2VyYXJncyIsInRvcCIsImxlZnQiLCJQcm92aWRlciIsInZhbHVlIiwic3R5bGUiLCJwb3J0YWxoYW5kbGVyXzEiLCJzY3JvbGxlclByb3BzIiwic2Nyb2xsdHJhY2tlcl8xIiwib2Zmc2V0IiwicmVmIiwiY3JlYXRlSGFuZGxlciIsImhhbmRsZXIiLCJpbnRlcnJ1cHRoYW5kbGVyXzEiLCJzY3JvbGxoYW5kbGVyXzEiLCJzdGF0ZWhhbmRsZXJfMSIsImNvbnRlbnRoYW5kbGVyXzEiLCJzY2FmZm9sZGhhbmRsZXJfMSIsInNlcnZpY2VoYW5kbGVyXzEiLCJzdHlsZXNoYW5kbGVyXzEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/cradle.tsx\n");

/***/ }),

/***/ "./src/cradle/contentfunctions.tsx":
/*!*****************************************!*\
  !*** ./src/cradle/contentfunctions.tsx ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(" // contentfunctions.tsx\n// copyright (c) 2020 Henrik Bechmann, Toronto, Licence: MIT\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.deletePortals = exports.allocateContentList = exports.getCellShellComponentList = exports.calcContentShift = exports.getShiftInstruction = exports.getContentListRequirements = void 0;\n/******************************************************************************************\n ------------------------------------[ SUPPORTING FUNCTIONS ]------------------------------\n*******************************************************************************************/\n\nvar react_1 = __importDefault(__webpack_require__(/*! react */ \"react\"));\n\nvar cellshell_1 = __importDefault(__webpack_require__(/*! ../cellshell */ \"./src/cellshell.tsx\")); // ======================[ for setCradleContent ]===========================\n\n\nvar getContentListRequirements = function getContentListRequirements(_a) {\n  var // called from setCradleContent only\n  rowLength = _a.rowLength,\n      cradleInheritedProperties = _a.cradleInheritedProperties,\n      cradleInternalProperties = _a.cradleInternalProperties,\n      targetAxisReferenceIndex = _a.targetAxisReferenceIndex,\n      // from user, or from pivot\n  targetAxisPixelOffset = _a.targetAxisPixelOffset,\n      viewportElement = _a.viewportElement;\n  var orientation = cradleInheritedProperties.orientation,\n      cellHeight = cradleInheritedProperties.cellHeight,\n      cellWidth = cradleInheritedProperties.cellWidth,\n      gap = cradleInheritedProperties.gap,\n      listsize = cradleInheritedProperties.listsize;\n  var crosscount = cradleInternalProperties.crosscount,\n      cradleRowcount = cradleInternalProperties.cradleRowcount,\n      runwayRowcount = cradleInternalProperties.runwayRowcount,\n      listRowcount = cradleInternalProperties.listRowcount,\n      viewportVisibleRowcount = cradleInternalProperties.viewportVisibleRowcount; // align axis reference to first row item\n\n  var origrefindex = targetAxisReferenceIndex;\n  targetAxisReferenceIndex = Math.min(targetAxisReferenceIndex, listsize - 1);\n  targetAxisReferenceIndex -= targetAxisReferenceIndex % crosscount; // derive target row\n\n  var targetAxisRowOffset = Math.ceil(targetAxisReferenceIndex / crosscount);\n  var maxAxisRowOffset = listRowcount - viewportVisibleRowcount;\n\n  if (targetAxisRowOffset > maxAxisRowOffset) {\n    targetAxisRowOffset = maxAxisRowOffset;\n    targetAxisReferenceIndex = targetAxisRowOffset * crosscount;\n  } // -----------------------[ calc cradleReferenceRow & Index ]------------------------\n  // leading edge\n  // let targetCradleReferenceIndex = Math.max(0,targetAxisReferenceIndex - leadingrunwayitemcount)\n\n\n  var targetCradleRowOffset = Math.max(0, targetAxisRowOffset - runwayRowcount); // trailing edge\n\n  var targetCradleEndRowOffset = targetCradleRowOffset + (cradleRowcount - 1);\n  var listEndRowOffset = listRowcount - 1;\n\n  if (targetCradleEndRowOffset > listEndRowOffset) {\n    var diff = targetCradleEndRowOffset - listEndRowOffset;\n    targetCradleRowOffset -= diff;\n    targetCradleEndRowOffset -= diff;\n  }\n\n  var targetCradleReferenceIndex = targetCradleRowOffset * crosscount; // ---------------------[ calc cradle content count ]---------------------\n\n  var newCradleContentCount = cradleRowcount * crosscount;\n\n  if (targetCradleEndRowOffset == listEndRowOffset) {\n    var endRowRemainderCount = listsize % crosscount;\n\n    if (endRowRemainderCount) {\n      newCradleContentCount -= crosscount - endRowRemainderCount;\n    }\n  } // --------------------[ calc css positioning ]-----------------------\n\n\n  var targetScrollblockPixelOffset = targetAxisRowOffset * rowLength - targetAxisPixelOffset; // ----------------------[ return required values ]---------------------\n\n  return {\n    targetCradleReferenceIndex: targetCradleReferenceIndex,\n    targetAxisReferenceIndex: targetAxisReferenceIndex,\n    targetAxisRowOffset: targetAxisRowOffset,\n    targetScrollblockPixelOffset: targetScrollblockPixelOffset,\n    newCradleContentCount: newCradleContentCount\n  };\n};\n\nexports.getContentListRequirements = getContentListRequirements; // ======================[ for updateCradleContent ]===========================\n// -1 = shift row to head. 1 = shift row to tail. 0 = do not shift a row.\n\nvar getShiftInstruction = function getShiftInstruction(_a) {\n  var orientation = _a.orientation,\n      triggerlineEntries = _a.triggerlineEntries;\n  var entries = triggerlineEntries.filter(function (entry) {\n    // const isIntersecting = entry.isIntersecting\n    var triggerlinename = entry.target.dataset.type;\n    var rootboundpos = orientation == 'vertical' ? entry.rootBounds.y : entry.rootBounds.x;\n    var entryboundpos = orientation == 'vertical' ? entry.boundingClientRect.y : entry.boundingClientRect.x;\n    return triggerlinename == 'triggerline-tail' && entryboundpos <= rootboundpos || triggerlinename == 'triggerline-head' && entryboundpos >= rootboundpos;\n  });\n  if (entries.length == 0) return 0;\n  var entry = entries[entries.length - 1]; // if more than one take the last\n  // const isIntersecting = entry.isIntersecting\n\n  var triggerlinename = entry.target.dataset.type;\n  var retval;\n\n  if (triggerlinename == 'triggerline-tail') {\n    retval = -1; // shift row to head\n  } else if (triggerlinename == 'triggerline-head') {\n    retval = 1; // shift row to tail\n  } else {\n    retval = 0; // do not shift a row\n  }\n\n  return retval;\n};\n\nexports.getShiftInstruction = getShiftInstruction; // A negative shift instruction is into the head, a positive shift is into the tail.\n// called only from updateCradleContent\n\nvar calcContentShift = function calcContentShift(_a) {\n  // ------------------------[ 1. initialize ]-----------------------\n  var _b, _c;\n\n  var shiftinstruction = _a.shiftinstruction,\n      cradleInheritedProperties = _a.cradleInheritedProperties,\n      cradleInternalProperties = _a.cradleInternalProperties,\n      cradleContent = _a.cradleContent,\n      cradleElements = _a.cradleElements,\n      scrollPos = _a.scrollPos;\n  var isScrollingViewportForward = shiftinstruction < 0;\n  var gap = cradleInheritedProperties.gap,\n      orientation = cradleInheritedProperties.orientation,\n      cellHeight = cradleInheritedProperties.cellHeight,\n      cellWidth = cradleInheritedProperties.cellWidth,\n      listsize = cradleInheritedProperties.listsize,\n      triggerlineOffset = cradleInheritedProperties.triggerlineOffset;\n  var axisElement = cradleElements.axisRef.current;\n  var cradleContentList = cradleContent.cradleCellComponents,\n      tailcontentlist = cradleContent.tailCellComponents;\n  var crosscount = cradleInternalProperties.crosscount,\n      cradleRowcount = cradleInternalProperties.cradleRowcount,\n      listRowcount = cradleInternalProperties.listRowcount,\n      viewportRowcount = cradleInternalProperties.viewportRowcount,\n      runwayRowcount = cradleInternalProperties.runwayRowcount;\n  var rowLength = (orientation == 'vertical' ? cellHeight : cellWidth) + gap; // -----------[ 2. calculate axis reference row shift ]-------------------\n  // extra gaps can be caused by rapid scrolling\n\n  var cradleAxisOffset = orientation == 'vertical' ? axisElement.offsetTop : axisElement.offsetLeft; // viewportAxisOffset will be negative for scroll forward and positive for scroll backward\n\n  var viewportAxisOffset = // the pixel distance between the viewport frame and the axis, toward the head\n  cradleAxisOffset - scrollPos;\n  var triggerAxisOffset = isScrollingViewportForward ? // scroll forward engages the tail triggerline which is below the axis\n  // the tail triggerline must be placed to intersect to re-trigger\n  viewportAxisOffset + triggerlineOffset : // scrollbackward engages the head triggerline which is above the axis\n  // the head triggerline muse be placed not to intersect to retrigger\n  viewportAxisOffset - (rowLength - triggerlineOffset); // negative for moving rows out of head into tail;\n  // positive for moving rows out of tail into head\n  // +/- 1 gurantees boundary location results in move\n\n  var triggerRowShift = isScrollingViewportForward ? Math.floor((triggerAxisOffset ? triggerAxisOffset : -1) / rowLength) : Math.ceil((triggerAxisOffset ? triggerAxisOffset : 1) / rowLength);\n  var axisReferenceRowshift = -triggerRowShift; // ------------[ 5. calc new cradle and axis reference row offset ]-------------\n  // base value for cradle reference shift; may change if beyond list bounds\n\n  var cradleReferenceRowshift = axisReferenceRowshift;\n  var previousCradleReferenceIndex = ((_b = cradleContentList[0]) === null || _b === void 0 ? void 0 : _b.props.index) || 0;\n  var previousCradleRowOffset = Math.ceil(previousCradleReferenceIndex / crosscount);\n  var previousAxisReferenceIndex = ((_c = tailcontentlist[0]) === null || _c === void 0 ? void 0 : _c.props.index) || 0;\n  var previousAxisRowOffset = Math.ceil(previousAxisReferenceIndex / crosscount); // base values\n\n  var newCradleReferenceRowOffset = previousCradleRowOffset + cradleReferenceRowshift;\n  var newAxisReferenceRowOffset = previousAxisRowOffset + axisReferenceRowshift; // --------[ 6. adjust cradle contents for start and end of list ]-------\n  // ...to maintain constant number of cradle rows\n\n  var listEndrowOffset = listRowcount - 1;\n\n  if (isScrollingViewportForward) {\n    // a. if scrolling forward near the start of the list, new cradle row offset and\n    // cradle row shift count has to be adjusted to accommodate the leading runway\n    // b. if scrolling forward (toward tail of list), as the cradle last row offset approaches \n    // listrow new cradle offset and cradle row shift have to be adjusted to prevent shortening \n    // of cradle content.\n    var targetCradleReferenceRowOffset = Math.max(0, newAxisReferenceRowOffset - runwayRowcount + (runwayRowcount ? -1 : 0) // one row is visible, not runway\n    );\n    var headrowDiff = newCradleReferenceRowOffset - targetCradleReferenceRowOffset;\n\n    if (headrowDiff > 0) {\n      newCradleReferenceRowOffset -= headrowDiff;\n      cradleReferenceRowshift -= headrowDiff;\n    } // case of being in bounds of trailing runway (end of list)\n\n\n    var targetCradleEndrowOffset = newCradleReferenceRowOffset + (cradleRowcount - 1);\n    var tailrowdiff = Math.max(0, targetCradleEndrowOffset - listEndrowOffset);\n\n    if (tailrowdiff > 0) {\n      newCradleReferenceRowOffset -= tailrowdiff;\n      cradleReferenceRowshift -= tailrowdiff;\n    }\n  } else {\n    // !isScrollingViewportForward = scroll backward\n    // c. if scrolling backward (toward head of list), as the cradlerowoffset hits 0, cradle changes have\n    // to be adjusted to prevent shortening of cradle content\n    // d. if scrolling backward near the end of the list, cradle changes has to be adjusted to accomodate\n    // the trailing runway\n    if (newCradleReferenceRowOffset < 0) {\n      cradleReferenceRowshift -= newCradleReferenceRowOffset;\n      newCradleReferenceRowOffset = 0;\n    } // case of in bounds of trailing runway (end of list)\n\n\n    var computedNextCradleEndrowOffset = previousCradleRowOffset + (cradleRowcount - 1) + cradleReferenceRowshift;\n    var targetcradleEndrowoffset = Math.min(listEndrowOffset, newAxisReferenceRowOffset + (viewportRowcount - 1) + (runwayRowcount - 1));\n    var tailrowdiff = Math.max(0, targetcradleEndrowoffset - computedNextCradleEndrowOffset);\n\n    if (tailrowdiff > 0) {\n      cradleReferenceRowshift += tailrowdiff;\n      newCradleReferenceRowOffset += tailrowdiff;\n    }\n  } // ----------------------[ 7. map rows to item references ]----------------------\n\n\n  var newCradleReferenceIndex = newCradleReferenceRowOffset * crosscount;\n  var cradleReferenceItemShift = cradleReferenceRowshift * crosscount;\n  var newAxisReferenceIndex = newAxisReferenceRowOffset * crosscount;\n  var axisReferenceItemShift = axisReferenceRowshift * crosscount;\n  var newCradleContentCount = cradleRowcount * crosscount; // base count\n\n  var includesLastRow = newCradleReferenceRowOffset + cradleRowcount >= listRowcount;\n\n  if (includesLastRow) {\n    var partialspaces = listsize % crosscount;\n    var itemsShortfall = partialspaces == 0 ? 0 : crosscount - partialspaces;\n    newCradleContentCount -= itemsShortfall;\n  } // create head and tail change counts\n\n\n  var changeOfCradleContentCount = cradleContentList.length - newCradleContentCount;\n  var listStartChangeCount = -cradleReferenceItemShift;\n  var listEndChangeCount = -listStartChangeCount - changeOfCradleContentCount; // -------------[ 8. calculate new axis pixel position ]------------------\n\n  var newAxisPixelOffset = viewportAxisOffset + axisReferenceRowshift * rowLength; // ---------------------[ 9. return required values ]-------------------\n\n  return {\n    newCradleReferenceIndex: newCradleReferenceIndex,\n    cradleReferenceItemShift: cradleReferenceItemShift,\n    newAxisReferenceIndex: newAxisReferenceIndex,\n    axisReferenceItemShift: axisReferenceItemShift,\n    newAxisPixelOffset: newAxisPixelOffset,\n    newCradleContentCount: newCradleContentCount,\n    listStartChangeCount: listStartChangeCount,\n    listEndChangeCount: listEndChangeCount\n  };\n};\n\nexports.calcContentShift = calcContentShift; // =====================[ shared by both setCradleContent and updateCradleContent ]====================\n// update content\n// adds itemshells at end of contentlist according to headindexcount and tailindescount,\n// or if indexcount values are <0 removes them.\n\nvar getCellShellComponentList = function getCellShellComponentList(_a) {\n  var cradleInheritedProperties = _a.cradleInheritedProperties,\n      cradleContentCount = _a.cradleContentCount,\n      cradleReferenceIndex = _a.cradleReferenceIndex,\n      listStartChangeCount = _a.listStartChangeCount,\n      listEndChangeCount = _a.listEndChangeCount,\n      contentlist = _a.localContentList,\n      callbacks = _a.callbacks,\n      instanceIdCounterRef = _a.instanceIdCounterRef;\n\n  var localContentlist = __spreadArray([], contentlist, true);\n\n  var lastindexoffset = cradleReferenceIndex + localContentlist.length - 1;\n  var headContentlist = [],\n      tailContentlist = []; // const lowerbound = cradleReferenceIndex - listStartChangeCount,\n  //     upperbound = (cradleReferenceIndex - listStartChangeCount) + (cradleContentCount + 1)\n\n  var deletedtailitems = [],\n      deletedheaditems = [];\n\n  if (listStartChangeCount >= 0) {\n    // acquire new items\n    for (var newindex = cradleReferenceIndex - listStartChangeCount; newindex < cradleReferenceIndex; newindex++) {\n      headContentlist.push(acquireItem({\n        index: newindex,\n        cradleInheritedProperties: cradleInheritedProperties,\n        callbacks: callbacks,\n        instanceIdCounterRef: instanceIdCounterRef\n      }));\n    }\n  } else {\n    deletedheaditems = localContentlist.splice(0, -listStartChangeCount);\n  }\n\n  if (listEndChangeCount >= 0) {\n    // acquire new items\n    for (var newindex = lastindexoffset + 1; newindex < lastindexoffset + 1 + listEndChangeCount; newindex++) {\n      tailContentlist.push(acquireItem({\n        index: newindex,\n        cradleInheritedProperties: cradleInheritedProperties,\n        callbacks: callbacks,\n        instanceIdCounterRef: instanceIdCounterRef\n      }));\n    }\n  } else {\n    deletedtailitems = localContentlist.splice(listEndChangeCount, -listEndChangeCount);\n  }\n\n  var deletedItems = deletedheaditems.concat(deletedtailitems);\n  var componentList = headContentlist.concat(localContentlist, tailContentlist);\n  return [componentList, deletedItems];\n};\n\nexports.getCellShellComponentList = getCellShellComponentList; // butterfly model. Leading (head) all or partially hidden; tail, visible plus following hidden\n\nvar allocateContentList = function allocateContentList(_a) {\n  var _b;\n\n  var contentlist = _a.contentlist,\n      // of cradle, in items (React components)\n  axisReferenceIndex = _a.axisReferenceIndex;\n  var offsetindex = (_b = contentlist[0]) === null || _b === void 0 ? void 0 : _b.props.index; // TODO: Cannot read property 'props' of undefined\n\n  var headitemcount = axisReferenceIndex - offsetindex;\n  var headlist = contentlist.slice(0, headitemcount);\n  var taillist = contentlist.slice(headitemcount);\n  return [headlist, taillist];\n};\n\nexports.allocateContentList = allocateContentList;\n\nvar deletePortals = function deletePortals(portalHandler, deleteList) {\n  for (var _i = 0, deleteList_1 = deleteList; _i < deleteList_1.length; _i++) {\n    var item = deleteList_1[_i];\n    portalHandler.deletePortal(item.props.index);\n  }\n\n  if (deleteList.length) portalHandler.renderPortalList();\n};\n\nexports.deletePortals = deletePortals; // =====================[ acquire item ]======================\n\nvar acquireItem = function acquireItem(_a) {\n  var index = _a.index,\n      cradleInheritedProperties = _a.cradleInheritedProperties,\n      callbacks = _a.callbacks,\n      instanceIdCounterRef = _a.instanceIdCounterRef;\n  var instanceID = instanceIdCounterRef.current++;\n  var orientation = cradleInheritedProperties.orientation,\n      cellHeight = cradleInheritedProperties.cellHeight,\n      cellWidth = cradleInheritedProperties.cellWidth,\n      getItem = cradleInheritedProperties.getItem,\n      placeholder = cradleInheritedProperties.placeholder,\n      listsize = cradleInheritedProperties.listsize,\n      scrollerName = cradleInheritedProperties.scrollerName,\n      scrollerID = cradleInheritedProperties.scrollerID;\n  return react_1[\"default\"].createElement(cellshell_1[\"default\"], {\n    key: index,\n    orientation: orientation,\n    cellHeight: cellHeight,\n    cellWidth: cellWidth,\n    index: index,\n    callbacks: callbacks,\n    getItem: getItem,\n    listsize: listsize,\n    placeholder: placeholder,\n    instanceID: instanceID,\n    scrollerName: scrollerName,\n    scrollerID: scrollerID\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/cradle/contentfunctions.tsx\n");

/***/ }),

/***/ "./src/cradle/contenthandler.tsx":
/*!***************************************!*\
  !*** ./src/cradle/contenthandler.tsx ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(" // contenthandler.tsx\n// copyright (c) 2021 Henrik Bechmann, Toronto, Licence: MIT\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\nvar contentfunctions_1 = __webpack_require__(/*! ./contentfunctions */ \"./src/cradle/contentfunctions.tsx\");\n\nvar ContentHandler =\n/** @class */\nfunction () {\n  function ContentHandler(cradleParameters) {\n    var _this = this;\n\n    this.content = {\n      cradleCellComponents: null,\n      headCellComponents: [],\n      tailCellComponents: []\n    };\n    this.itemElements = new Map();\n    this.instanceIdCounterRef = {\n      current: 0\n    };\n    this.instanceIdMap = new Map(); // Two public methods - setCradleContent and updateCradleContent\n    // reset cradle, including allocation between head and tail parts of the cradle\n    // called only from cradle state handler\n    // ==========================[ SET CONTENT ]===========================\n    //initially (dosetup), after reposition (doreposition), or with finishresize, pivot, \n    // or user size param reconfigure or reload\n    // setCradleContent sets the scrollblock's scroll position, as well as config and content\n\n    this.setCradleContent = function (cradleState) {\n      // ------------------------------[ 1. initialize ]---------------------------\n      var viewportInterruptProperties = _this.cradleParameters.viewportInterruptPropertiesRef.current;\n      var cradleInheritedProperties = _this.cradleParameters.cradleInheritedPropertiesRef.current;\n      var cradleInternalProperties = _this.cradleParameters.cradleInternalPropertiesRef.current;\n      var cradleHandlers = _this.cradleParameters.handlersRef.current;\n      var portalHandler = cradleHandlers.portalHandler,\n          scaffoldHandler = cradleHandlers.scaffoldHandler,\n          serviceHandler = cradleHandlers.serviceHandler,\n          interruptHandler = cradleHandlers.interruptHandler; // the triggerlines and cradle wings will be moved, so disconnect them from their observers.\n      // they are reconnected with 'renderupdatedcontent' state in cradle.tsx\n\n      interruptHandler.axisTriggerlinesIntersect.observer.disconnect();\n      interruptHandler.cradleIntersect.observer.disconnect();\n      var cradlePositionData = scaffoldHandler.cradlePositionData;\n      var viewportElement = viewportInterruptProperties.elementref.current;\n      var requestedAxisReferenceIndex = cradlePositionData.targetAxisReferenceIndex;\n      var targetAxisPixelOffset = cradlePositionData.targetAxisPixelOffset;\n      var orientation = cradleInheritedProperties.orientation,\n          gap = cradleInheritedProperties.gap,\n          padding = cradleInheritedProperties.padding,\n          cellHeight = cradleInheritedProperties.cellHeight,\n          cellWidth = cradleInheritedProperties.cellWidth;\n\n      if (cradleState == 'doreposition' || cradleState == 'reconfigure') {\n        targetAxisPixelOffset = gap; // default\n      }\n\n      var localContentList = [];\n      var cradleContent = _this.content; // ----------------------[ 2. get content requirements ]----------------------\n\n      var isVertical = orientation == 'vertical';\n      var rowLength = isVertical ? cellHeight + gap : cellWidth + gap;\n\n      var _a = (0, contentfunctions_1.getContentListRequirements)({\n        rowLength: rowLength,\n        targetAxisReferenceIndex: requestedAxisReferenceIndex,\n        targetAxisPixelOffset: targetAxisPixelOffset,\n        cradleInheritedProperties: cradleInheritedProperties,\n        cradleInternalProperties: cradleInternalProperties,\n        viewportElement: viewportInterruptProperties.elementref.current\n      }),\n          targetCradleReferenceIndex = _a.targetCradleReferenceIndex,\n          targetAxisReferenceIndex = _a.targetAxisReferenceIndex,\n          targetAxisRowOffset = _a.targetAxisRowOffset,\n          cradleContentCount = _a.newCradleContentCount,\n          scrollblockPixelOffset = _a.targetScrollblockPixelOffset;\n\n      var scrollPosAdjustment;\n\n      if (targetAxisReferenceIndex == 0) {\n        scrollPosAdjustment = 0;\n      } else if (cradleState == 'doreposition') {\n        scrollPosAdjustment = padding; //+ gap\n      } else {\n        scrollPosAdjustment = padding;\n      }\n\n      var axisPixelOffset = targetAxisPixelOffset; // ----------------------[ 3. get and config content ]----------------------\n      // returns content constrained by cradleRowcount\n\n      var _b = (0, contentfunctions_1.getCellShellComponentList)({\n        cradleInheritedProperties: cradleInheritedProperties,\n        // cradleInternalProperties,\n        cradleContentCount: cradleContentCount,\n        cradleReferenceIndex: targetCradleReferenceIndex,\n        listStartChangeCount: 0,\n        listEndChangeCount: cradleContentCount,\n        localContentList: localContentList,\n        callbacks: _this.internalCallbacksRef.current,\n        instanceIdCounterRef: _this.instanceIdCounterRef\n      }),\n          childlist = _b[0],\n          deleteditems = _b[1];\n\n      if (deleteditems.length) (0, contentfunctions_1.deletePortals)(portalHandler, deleteditems);\n\n      var _c = (0, contentfunctions_1.allocateContentList)({\n        contentlist: childlist,\n        axisReferenceIndex: targetAxisReferenceIndex\n      }),\n          headcontentlist = _c[0],\n          tailcontentlist = _c[1];\n\n      cradleContent.cradleCellComponents = childlist;\n      cradleContent.headCellComponents = headcontentlist;\n      cradleContent.tailCellComponents = tailcontentlist;\n      cradlePositionData.targetAxisReferenceIndex = targetAxisReferenceIndex;\n      cradlePositionData.targetAxisPixelOffset = axisPixelOffset;\n\n      if (serviceHandler.serviceCalls.referenceIndexCallbackRef.current) {\n        var cstate = cradleState;\n        serviceHandler.serviceCalls.referenceIndexCallbackRef.current(cradlePositionData.targetAxisReferenceIndex, 'setCradleContent', cstate);\n      } //  ----------------------[ 4. set CSS ]-----------------------\n\n\n      cradlePositionData.blockScrollPos = scrollblockPixelOffset + scrollPosAdjustment;\n      viewportElement[cradlePositionData.blockScrollProperty] = cradlePositionData.blockScrollPos;\n      var cradleElements = scaffoldHandler.elements; //cradleElementsRef.current\n\n      var axisElement = cradleElements.axisRef.current;\n      var headElement = cradleElements.headRef.current;\n\n      if (orientation == 'vertical') {\n        var top_1 = targetAxisRowOffset * rowLength + padding;\n        axisElement.style.top = top_1 + 'px';\n        axisElement.style.left = 'auto';\n        headElement.style.paddingBottom = headcontentlist.length ? gap + 'px' : 0;\n      } else {\n        // orientation = 'horizontal'\n        axisElement.style.top = 'auto';\n        var left = targetAxisRowOffset * rowLength + padding;\n        axisElement.style.left = left + 'px';\n        headElement.style.paddingRight = headcontentlist.length ? gap + 'px' : 0;\n      } //  ----------------------[ 5. reset interrupts ]-----------------------\n\n\n      interruptHandler.axisTriggerlinesIntersect.connectElements();\n      interruptHandler.cradleIntersect.connectElements();\n      interruptHandler.signals.pauseTriggerlinesObserver = false; // interruptHandler.signals.pauseCradleIntersectionObserver = false\n    }; // =============================[ UPDATE through scroll ]===============================\n    // updateCradleContent does not touch the viewport element's scroll position for the scrollblock\n    // instead it reconfigures elements within the cradle\n\n\n    this.updateCradleContent = function (triggerlineEntries, source) {\n      // ----------------------[ 1. initialize ]-------------------------\n      var _a;\n\n      var _b;\n\n      if (source === void 0) {\n        source = 'notifications';\n      } // handler support\n\n\n      var _c = _this.cradleParameters.handlersRef.current,\n          portalHandler = _c.portalHandler,\n          scrollHandler = _c.scrollHandler,\n          scaffoldHandler = _c.scaffoldHandler,\n          stateHandler = _c.stateHandler,\n          interruptHandler = _c.interruptHandler; // scroll data\n\n      var scrollData = scrollHandler.scrollData;\n      var scrollPos = scrollData.currentupdate; // first abandon option/3; nothing to do\n\n      if (scrollPos < 0) {\n        // for Safari elastic bounce at top of scroll\n        return;\n      } // cradle scaffold and user cells\n\n\n      var cradleElements = scaffoldHandler.elements;\n      var cradleContent = _this.content;\n      var modelcontentlist = cradleContent.cradleCellComponents;\n      var oldCradleReferenceIndex = ((_b = modelcontentlist[0]) === null || _b === void 0 ? void 0 : _b.props.index) || 0; // --------------------[ 2. get shift instruction ]-----------------------\n\n      var cradleInheritedProperties = _this.cradleParameters.cradleInheritedPropertiesRef.current;\n      var orientation = cradleInheritedProperties.orientation; // -1 is move a row up to the head, +1 is move a row down to the tail, 0 is no shift\n\n      var shiftinstruction = (0, contentfunctions_1.getShiftInstruction)({\n        orientation: orientation,\n        triggerlineEntries: triggerlineEntries\n      }); // second abandon option/3; nothing to do\n\n      if (shiftinstruction == 0) {\n        return;\n      } // --------------------------------[ 3. Calculate shifts ]-------------------------------\n      // cradle properties\n      // const cradleInheritedProperties = this.cradleParameters.cradleInheritedPropertiesRef.current\n\n\n      var cradleInternalProperties = _this.cradleParameters.cradleInternalPropertiesRef.current;\n      var viewportElement = _this.cradleParameters.viewportInterruptPropertiesRef.current.elementref.current;\n\n      var _d = (0, contentfunctions_1.calcContentShift)({\n        shiftinstruction: shiftinstruction,\n        cradleInheritedProperties: cradleInheritedProperties,\n        cradleInternalProperties: cradleInternalProperties,\n        cradleContent: cradleContent,\n        cradleElements: cradleElements,\n        scrollPos: scrollPos\n      }),\n          newCradleReferenceIndex = _d.newCradleReferenceIndex,\n          cradleItemShift = _d.cradleReferenceItemShift,\n          axisReferenceIndex = _d.newAxisReferenceIndex,\n          axisItemShift = _d.axisReferenceItemShift,\n          axisPixelOffset = _d.newAxisPixelOffset,\n          cradleContentCount = _d.newCradleContentCount,\n          listStartChangeCount = _d.listStartChangeCount,\n          listEndChangeCount = _d.listEndChangeCount; // third abandon option/3; nothing to do\n\n\n      if (axisItemShift == 0 && cradleItemShift == 0) {\n        // TODO: is this possible?\n        return;\n      } // the triggerlines will be moved, so disconnect them from their observer.\n      // they are reconnected with 'renderupdatedcontent' state in cradle.tsx\n\n\n      interruptHandler.axisTriggerlinesIntersect.observer.disconnect();\n      interruptHandler.signals.pauseTriggerlinesObserver = true; // ----------------------------------[ 4. reconfigure cradle content ]--------------------------\n      // collect modified content\n\n      var updatedContentList,\n          deletedContentItems = [];\n\n      if (listStartChangeCount || listEndChangeCount) {\n        // if either is non-0 then modify content\n        _a = (0, contentfunctions_1.getCellShellComponentList)({\n          cradleInheritedProperties: cradleInheritedProperties,\n          // cradleInternalProperties,\n          cradleContentCount: cradleContentCount,\n          localContentList: modelcontentlist,\n          listStartChangeCount: listStartChangeCount,\n          listEndChangeCount: listEndChangeCount,\n          cradleReferenceIndex: oldCradleReferenceIndex,\n          callbacks: _this.internalCallbacksRef.current,\n          instanceIdCounterRef: _this.instanceIdCounterRef\n        }), updatedContentList = _a[0], deletedContentItems = _a[1];\n      } else {\n        updatedContentList = modelcontentlist;\n      }\n\n      if (deletedContentItems.length) (0, contentfunctions_1.deletePortals)(portalHandler, deletedContentItems); // ----------------------------------[ 5. allocate cradle content ]--------------------------\n\n      var _e = (0, contentfunctions_1.allocateContentList)({\n        contentlist: updatedContentList,\n        axisReferenceIndex: axisReferenceIndex\n      }),\n          headcontent = _e[0],\n          tailcontent = _e[1];\n\n      cradleContent.cradleCellComponents = updatedContentList;\n      cradleContent.headCellComponents = headcontent;\n      cradleContent.tailCellComponents = tailcontent; // -------------------------------[ 6. set css changes ]-------------------------\n\n      var axisElement = cradleElements.axisRef.current;\n      var headElement = cradleElements.headRef.current;\n\n      if (cradleInheritedProperties.orientation == 'vertical') {\n        var topPos = scrollPos + axisPixelOffset;\n        axisElement.style.top = topPos + 'px';\n        axisElement.style.left = 'auto';\n        headElement.style.paddingBottom = headcontent.length ? cradleInheritedProperties.gap + 'px' : 0;\n      } else {\n        // 'horizontal'\n        var leftPos = scrollPos + axisPixelOffset;\n        axisElement.style.top = 'auto';\n        axisElement.style.left = leftPos + 'px';\n        headElement.style.paddingRight = headcontent.length ? cradleInheritedProperties.gap + 'px' : 0;\n      }\n\n      var cradlePositionData = scaffoldHandler.cradlePositionData;\n      cradlePositionData.targetAxisReferenceIndex = axisReferenceIndex;\n      cradlePositionData.targetAxisPixelOffset = axisPixelOffset; //  ----------------------[ 7. reset interrupts ]-----------------------\n      // trigger lines have been moved, so observer must be reset\n\n      interruptHandler.axisTriggerlinesIntersect.connectElements();\n      interruptHandler.signals.pauseTriggerlinesObserver = false;\n      stateHandler.setCradleState('renderupdatedcontent');\n    };\n\n    this.cradleParameters = cradleParameters;\n    this.internalCallbacksRef = cradleParameters.internalCallbacksRef;\n  }\n\n  return ContentHandler;\n}();\n\nexports[\"default\"] = ContentHandler;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/cradle/contenthandler.tsx\n");

/***/ }),

/***/ "./src/cradle/interrupthandler.tsx":
/*!*****************************************!*\
  !*** ./src/cradle/interrupthandler.tsx ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("// interruptshandler.tsx\n// copyright (c) 2021 Henrik Bechmann, Toronto, Licence: MIT\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n/*\n    TODO: trigger reposition if triggerline entries come back with isIntersecting the same for both\n*/\n\nvar resize_observer_1 = __webpack_require__(/*! @juggle/resize-observer */ \"./node_modules/@juggle/resize-observer/lib/exports/resize-observer.js\");\n\nvar ResizeObserver = window['ResizeObserver'] || resize_observer_1.ResizeObserver;\n\nvar InterruptHandler =\n/** @class */\nfunction () {\n  function InterruptHandler(cradleParameters) {\n    var _this = this;\n\n    this.isTailCradleInView = false;\n    this.isHeadCradleInView = false; // TODO: stub\n\n    this.cradleresizeobservercallback = function (entries) {\n      if (_this.signals.pauseCradleResizeObserver) return;\n    };\n\n    this.axisTriggerlinesObserverCallback = function (entries) {\n      if (_this.signals.pauseTriggerlinesObserver) {\n        return;\n      }\n\n      var testrootbounds = entries[0].rootBounds;\n\n      if (testrootbounds.width == 0 && testrootbounds.height == 0) {\n        // reparenting\n        return;\n      }\n\n      var _a = _this.cradleParameters.handlersRef.current,\n          contentHandler = _a.contentHandler,\n          stateHandler = _a.stateHandler,\n          scrollHandler = _a.scrollHandler;\n\n      if (stateHandler.isMountedRef.current) {\n        var scrollData = scrollHandler.scrollData;\n\n        if (scrollData.start != scrollData.current || scrollData.current != scrollData.previous) {\n          scrollData.previousupdate = scrollData.currentupdate;\n          scrollData.currentupdate = scrollData.current;\n          contentHandler.updateCradleContent(entries, 'triggerlinesObserver');\n        }\n      }\n    };\n\n    this.cradleIntersectionObserverCallback = function (entries) {\n      var _a;\n\n      var signals = _this.signals;\n      var _b = _this.cradleParameters.handlersRef.current,\n          stateHandler = _b.stateHandler,\n          contentHandler = _b.contentHandler;\n\n      if (signals.pauseCradleIntersectionObserver) {\n        return;\n      }\n\n      for (var i = 0; i < entries.length; i++) {\n        var entry = entries[i];\n\n        if (entry.target.dataset.type == 'head') {\n          _this.isHeadCradleInView = entry.isIntersecting || entry.rootBounds.width == 0 && entry.rootBounds.height == 0 // reparenting\n          ;\n        } else {\n          _this.isTailCradleInView = entry.isIntersecting || entry.rootBounds.width == 0 && entry.rootBounds.height == 0 // reparenting\n          ;\n        }\n      }\n\n      _this.signals.repositioningRequired = !_this.isHeadCradleInView && !_this.isTailCradleInView;\n      var viewportInterruptProperties = _this.cradleParameters.viewportInterruptPropertiesRef.current;\n\n      if (_this.signals.repositioningRequired) // start reposition if no other interrupts are underway\n        {\n          var cradleState = stateHandler.cradleStateRef.current;\n\n          if (!viewportInterruptProperties.isResizing && !((_a = viewportInterruptProperties.portal) === null || _a === void 0 ? void 0 : _a.isReparenting) && !(cradleState == 'repositioningRender') && !(cradleState == 'repositioningContinuation') && !(cradleState == 'renderupdatedcontent') && // TODO: *TEST*\n          !(cradleState == 'finishresize') && !(cradleState == 'doreposition') && !(cradleState == 'pivot')) {\n            var element = viewportInterruptProperties.elementref.current;\n\n            if (!element) {\n              console.log('SYSTEM: viewport element not set in cradleIntersectionObserverCallback', _this.cradleParameters.cradleInheritedPropertiesRef.current.scrollerID, viewportInterruptProperties);\n              return;\n            } // TODO this is a duplicate setting procedure with viewport.tsx\n\n\n            var rect = element.getBoundingClientRect();\n            var top_1 = rect.top,\n                right = rect.right,\n                bottom = rect.bottom,\n                left = rect.left;\n            var width = right - left,\n                height = bottom - top_1;\n            viewportInterruptProperties.viewportDimensions = {\n              top: top_1,\n              right: right,\n              bottom: bottom,\n              left: left,\n              width: width,\n              height: height\n            }; // update for scrolltracker\n\n            var cradleContent = contentHandler.content;\n            cradleContent.headCellComponents = [];\n            cradleContent.tailCellComponents = [];\n            stateHandler.setCradleState('startreposition');\n          }\n        }\n    }; // for adjusting to content re-sizing\n\n\n    this.cradleResize = {\n      observer: null,\n      callback: this.cradleresizeobservercallback,\n      connectElements: function connectElements() {\n        var observer = _this.cradleResize.observer;\n        var cradleElements = _this.cradleParameters.handlersRef.current.scaffoldHandler.elements;\n        observer.observe(cradleElements.headRef.current);\n        observer.observe(cradleElements.tailRef.current);\n      },\n      createObserver: function createObserver() {\n        _this.cradleResize.observer = new ResizeObserver(_this.cradleResize.callback);\n        return _this.cradleResize.observer;\n      }\n    };\n    this.cradleIntersect = {\n      observer: null,\n      callback: this.cradleIntersectionObserverCallback,\n      connectElements: function connectElements() {\n        var observer = _this.cradleIntersect.observer;\n        var cradleElements = _this.cradleParameters.handlersRef.current.scaffoldHandler.elements;\n        observer.observe(cradleElements.headRef.current);\n        observer.observe(cradleElements.tailRef.current);\n      },\n      createObserver: function createObserver() {\n        var viewportInterruptProperties = _this.cradleParameters.viewportInterruptPropertiesRef.current;\n        _this.cradleIntersect.observer = new IntersectionObserver(_this.cradleIntersect.callback, {\n          root: viewportInterruptProperties.elementref.current,\n          threshold: 0\n        });\n        return _this.cradleIntersect.observer;\n      }\n    };\n    this.axisTriggerlinesIntersect = {\n      observer: null,\n      callback: this.axisTriggerlinesObserverCallback,\n      connectElements: function connectElements() {\n        var observer = _this.axisTriggerlinesIntersect.observer;\n        var cradleElements = _this.cradleParameters.handlersRef.current.scaffoldHandler.elements;\n        observer.observe(cradleElements.headTriggerlineRef.current);\n        observer.observe(cradleElements.tailTriggerlineRef.current);\n      },\n      createObserver: function createObserver() {\n        var viewportInterruptProperties = _this.cradleParameters.viewportInterruptPropertiesRef.current;\n        _this.axisTriggerlinesIntersect.observer = new IntersectionObserver(_this.axisTriggerlinesIntersect.callback, {\n          root: viewportInterruptProperties.elementref.current,\n          threshold: 0\n        });\n        return _this.axisTriggerlinesIntersect.observer;\n      }\n    };\n    this.signals = {\n      repositioningRequired: false,\n      pauseTriggerlinesObserver: false,\n      pauseCradleIntersectionObserver: false,\n      pauseCradleResizeObserver: false,\n      pauseScrollingEffects: false\n    };\n    this.cradleParameters = cradleParameters;\n  }\n\n  return InterruptHandler;\n}();\n\nexports[\"default\"] = InterruptHandler;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Z3JpZC1zY3JvbGxlci8uL3NyYy9jcmFkbGUvaW50ZXJydXB0aGFuZGxlci50c3g/YTk2NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbnRlcnJ1cHRzaGFuZGxlci50c3hcbi8vIGNvcHlyaWdodCAoYykgMjAyMSBIZW5yaWsgQmVjaG1hbm4sIFRvcm9udG8sIExpY2VuY2U6IE1JVFxuXG4ndXNlIHN0cmljdCdcblxuLypcbiAgICBUT0RPOiB0cmlnZ2VyIHJlcG9zaXRpb24gaWYgdHJpZ2dlcmxpbmUgZW50cmllcyBjb21lIGJhY2sgd2l0aCBpc0ludGVyc2VjdGluZyB0aGUgc2FtZSBmb3IgYm90aFxuKi9cblxuaW1wb3J0IHsgUmVzaXplT2JzZXJ2ZXIgYXMgUmVzaXplT2JzZXJ2ZXJQb2x5ZmlsbH0gZnJvbSAnQGp1Z2dsZS9yZXNpemUtb2JzZXJ2ZXInXG5cbmNvbnN0IFJlc2l6ZU9ic2VydmVyID0gd2luZG93WydSZXNpemVPYnNlcnZlciddIHx8IFJlc2l6ZU9ic2VydmVyUG9seWZpbGxcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSW50ZXJydXB0SGFuZGxlciB7XG5cbiAgICBjb25zdHJ1Y3RvcihjcmFkbGVQYXJhbWV0ZXJzKSB7XG5cbiAgICAgICB0aGlzLmNyYWRsZVBhcmFtZXRlcnMgPSBjcmFkbGVQYXJhbWV0ZXJzXG5cbiAgICB9XG5cbiAgICBwcml2YXRlIGNyYWRsZVBhcmFtZXRlcnNcblxuICAgIHByaXZhdGUgaXNUYWlsQ3JhZGxlSW5WaWV3ID0gZmFsc2VcbiAgICBwcml2YXRlIGlzSGVhZENyYWRsZUluVmlldyA9IGZhbHNlXG5cbiAgICAvLyBUT0RPOiBzdHViXG4gICAgcHJpdmF0ZSBjcmFkbGVyZXNpemVvYnNlcnZlcmNhbGxiYWNrID0gKGVudHJpZXMpID0+IHtcblxuICAgICAgIGlmICh0aGlzLnNpZ25hbHMucGF1c2VDcmFkbGVSZXNpemVPYnNlcnZlcikgcmV0dXJuXG5cbiAgICB9XG5cbiAgICBwcml2YXRlIGF4aXNUcmlnZ2VybGluZXNPYnNlcnZlckNhbGxiYWNrID0gKGVudHJpZXMpID0+IHtcblxuICAgICAgICBpZiAodGhpcy5zaWduYWxzLnBhdXNlVHJpZ2dlcmxpbmVzT2JzZXJ2ZXIpIHsgXG5cbiAgICAgICAgICAgIHJldHVyblxuXG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCB0ZXN0cm9vdGJvdW5kcyA9IGVudHJpZXNbMF0ucm9vdEJvdW5kc1xuICAgICAgICBpZiAoKHRlc3Ryb290Ym91bmRzLndpZHRoID09IDApICYmICh0ZXN0cm9vdGJvdW5kcy5oZWlnaHQgPT0gMCkpIHsgLy8gcmVwYXJlbnRpbmdcblxuICAgICAgICAgICAgcmV0dXJuXG5cbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgIGNvbnRlbnRIYW5kbGVyLFxuICAgICAgICAgICAgc3RhdGVIYW5kbGVyLFxuICAgICAgICAgICAgc2Nyb2xsSGFuZGxlclxuICAgICAgICB9ID0gdGhpcy5jcmFkbGVQYXJhbWV0ZXJzLmhhbmRsZXJzUmVmLmN1cnJlbnRcblxuICAgICAgICBpZiAoc3RhdGVIYW5kbGVyLmlzTW91bnRlZFJlZi5jdXJyZW50KSB7XG4gICAgICAgICAgICBjb25zdCB7IHNjcm9sbERhdGEgfSA9IHNjcm9sbEhhbmRsZXJcbiAgICAgICAgICAgIGlmICgoc2Nyb2xsRGF0YS5zdGFydCAhPSBzY3JvbGxEYXRhLmN1cnJlbnQpIHx8XG4gICAgICAgICAgICAgICAgKHNjcm9sbERhdGEuY3VycmVudCAhPSBzY3JvbGxEYXRhLnByZXZpb3VzKSkge1xuXG4gICAgICAgICAgICAgICAgc2Nyb2xsRGF0YS5wcmV2aW91c3VwZGF0ZSA9IHNjcm9sbERhdGEuY3VycmVudHVwZGF0ZVxuICAgICAgICAgICAgICAgIHNjcm9sbERhdGEuY3VycmVudHVwZGF0ZSA9IHNjcm9sbERhdGEuY3VycmVudFxuXG4gICAgICAgICAgICAgICAgY29udGVudEhhbmRsZXIudXBkYXRlQ3JhZGxlQ29udGVudChlbnRyaWVzLCd0cmlnZ2VybGluZXNPYnNlcnZlcicpXG5cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgY3JhZGxlSW50ZXJzZWN0aW9uT2JzZXJ2ZXJDYWxsYmFjayA9IChlbnRyaWVzKSA9PiB7XG5cbiAgICAgICAgY29uc3Qgc2lnbmFscyA9IHRoaXMuc2lnbmFsc1xuICAgICAgICBjb25zdCB7IHN0YXRlSGFuZGxlciwgY29udGVudEhhbmRsZXIgfSA9IHRoaXMuY3JhZGxlUGFyYW1ldGVycy5oYW5kbGVyc1JlZi5jdXJyZW50XG5cbiAgICAgICAgaWYgKHNpZ25hbHMucGF1c2VDcmFkbGVJbnRlcnNlY3Rpb25PYnNlcnZlcikge1xuXG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZW50cmllcy5sZW5ndGg7IGkrKyApIHtcbiAgICAgICAgICAgIGxldCBlbnRyeSA9IGVudHJpZXNbaV1cbiAgICAgICAgICAgIGlmIChlbnRyeS50YXJnZXQuZGF0YXNldC50eXBlID09ICdoZWFkJykge1xuICAgICAgICAgICAgICAgIHRoaXMuaXNIZWFkQ3JhZGxlSW5WaWV3ID0gXG4gICAgICAgICAgICAgICAgICAgIChlbnRyeS5pc0ludGVyc2VjdGluZyB8fCBcbiAgICAgICAgICAgICAgICAgICAgICAgICgoZW50cnkucm9vdEJvdW5kcy53aWR0aCA9PSAwKSAmJiAoZW50cnkucm9vdEJvdW5kcy5oZWlnaHQgPT0gMCkpIC8vIHJlcGFyZW50aW5nXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLmlzVGFpbENyYWRsZUluVmlldyA9IFxuICAgICAgICAgICAgICAgICAgICAoZW50cnkuaXNJbnRlcnNlY3RpbmcgIHx8IFxuICAgICAgICAgICAgICAgICAgICAgICAgKChlbnRyeS5yb290Qm91bmRzLndpZHRoID09IDApICYmIChlbnRyeS5yb290Qm91bmRzLmhlaWdodCA9PSAwKSkgLy8gcmVwYXJlbnRpbmdcbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnNpZ25hbHMucmVwb3NpdGlvbmluZ1JlcXVpcmVkID0gKCF0aGlzLmlzSGVhZENyYWRsZUluVmlldyAmJiAhdGhpcy5pc1RhaWxDcmFkbGVJblZpZXcpXG5cbiAgICAgICAgY29uc3Qgdmlld3BvcnRJbnRlcnJ1cHRQcm9wZXJ0aWVzID0gdGhpcy5jcmFkbGVQYXJhbWV0ZXJzLnZpZXdwb3J0SW50ZXJydXB0UHJvcGVydGllc1JlZi5jdXJyZW50XG5cbiAgICAgICAgaWYgKHRoaXMuc2lnbmFscy5yZXBvc2l0aW9uaW5nUmVxdWlyZWQpIC8vIHN0YXJ0IHJlcG9zaXRpb24gaWYgbm8gb3RoZXIgaW50ZXJydXB0cyBhcmUgdW5kZXJ3YXlcbiAgICAgICAge1xuICAgICAgICAgICAgY29uc3QgY3JhZGxlU3RhdGUgPSBzdGF0ZUhhbmRsZXIuY3JhZGxlU3RhdGVSZWYuY3VycmVudFxuXG4gICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgIXZpZXdwb3J0SW50ZXJydXB0UHJvcGVydGllcy5pc1Jlc2l6aW5nICYmXG4gICAgICAgICAgICAgICAgIXZpZXdwb3J0SW50ZXJydXB0UHJvcGVydGllcy5wb3J0YWw/LmlzUmVwYXJlbnRpbmcgJiZcbiAgICAgICAgICAgICAgICAhKGNyYWRsZVN0YXRlID09ICdyZXBvc2l0aW9uaW5nUmVuZGVyJykgJiYgXG4gICAgICAgICAgICAgICAgIShjcmFkbGVTdGF0ZSA9PSAncmVwb3NpdGlvbmluZ0NvbnRpbnVhdGlvbicpICYmXG4gICAgICAgICAgICAgICAgIShjcmFkbGVTdGF0ZSA9PSAncmVuZGVydXBkYXRlZGNvbnRlbnQnKSAmJiAvLyBUT0RPOiAqVEVTVCpcbiAgICAgICAgICAgICAgICAhKGNyYWRsZVN0YXRlID09ICdmaW5pc2hyZXNpemUnKSAmJlxuICAgICAgICAgICAgICAgICEoY3JhZGxlU3RhdGUgPT0gJ2RvcmVwb3NpdGlvbicpICYmIFxuICAgICAgICAgICAgICAgICEoY3JhZGxlU3RhdGUgPT0gJ3Bpdm90JylcbiAgICAgICAgICAgICAgICApIFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSB2aWV3cG9ydEludGVycnVwdFByb3BlcnRpZXMuZWxlbWVudHJlZi5jdXJyZW50XG4gICAgICAgICAgICAgICAgaWYgKCFlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdTWVNURU06IHZpZXdwb3J0IGVsZW1lbnQgbm90IHNldCBpbiBjcmFkbGVJbnRlcnNlY3Rpb25PYnNlcnZlckNhbGxiYWNrJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY3JhZGxlUGFyYW1ldGVycy5jcmFkbGVJbmhlcml0ZWRQcm9wZXJ0aWVzUmVmLmN1cnJlbnQuc2Nyb2xsZXJJRCx2aWV3cG9ydEludGVycnVwdFByb3BlcnRpZXMpXG4gICAgICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBUT0RPIHRoaXMgaXMgYSBkdXBsaWNhdGUgc2V0dGluZyBwcm9jZWR1cmUgd2l0aCB2aWV3cG9ydC50c3hcbiAgICAgICAgICAgICAgICBjb25zdCByZWN0ID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVxuICAgICAgICAgICAgICAgIGNvbnN0IHt0b3AsIHJpZ2h0LCBib3R0b20sIGxlZnR9ID0gcmVjdFxuICAgICAgICAgICAgICAgIGNvbnN0IHdpZHRoID0gcmlnaHQgLSBsZWZ0LCBoZWlnaHQgPSBib3R0b20gLSB0b3BcbiAgICAgICAgICAgICAgICB2aWV3cG9ydEludGVycnVwdFByb3BlcnRpZXMudmlld3BvcnREaW1lbnNpb25zID0ge3RvcCwgcmlnaHQsIGJvdHRvbSwgbGVmdCwgd2lkdGgsIGhlaWdodH0gLy8gdXBkYXRlIGZvciBzY3JvbGx0cmFja2VyXG5cbiAgICAgICAgICAgICAgICBjb25zdCBjcmFkbGVDb250ZW50ID0gY29udGVudEhhbmRsZXIuY29udGVudFxuICAgICAgICAgICAgICAgIGNyYWRsZUNvbnRlbnQuaGVhZENlbGxDb21wb25lbnRzID0gW11cbiAgICAgICAgICAgICAgICBjcmFkbGVDb250ZW50LnRhaWxDZWxsQ29tcG9uZW50cyA9IFtdXG5cbiAgICAgICAgICAgICAgICBzdGF0ZUhhbmRsZXIuc2V0Q3JhZGxlU3RhdGUoJ3N0YXJ0cmVwb3NpdGlvbicpXG5cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgfVxuXG4gICAvLyBmb3IgYWRqdXN0aW5nIHRvIGNvbnRlbnQgcmUtc2l6aW5nXG4gICBwdWJsaWMgY3JhZGxlUmVzaXplID0ge1xuICAgICAgb2JzZXJ2ZXI6bnVsbCxcbiAgICAgIGNhbGxiYWNrOnRoaXMuY3JhZGxlcmVzaXplb2JzZXJ2ZXJjYWxsYmFjayxcbiAgICAgICAgY29ubmVjdEVsZW1lbnRzOigpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG9ic2VydmVyID0gdGhpcy5jcmFkbGVSZXNpemUub2JzZXJ2ZXJcbiAgICAgICAgICAgIGNvbnN0IGNyYWRsZUVsZW1lbnRzID0gdGhpcy5jcmFkbGVQYXJhbWV0ZXJzLmhhbmRsZXJzUmVmLmN1cnJlbnQuc2NhZmZvbGRIYW5kbGVyLmVsZW1lbnRzXG4gICAgICAgICAgICBvYnNlcnZlci5vYnNlcnZlKGNyYWRsZUVsZW1lbnRzLmhlYWRSZWYuY3VycmVudClcbiAgICAgICAgICAgIG9ic2VydmVyLm9ic2VydmUoY3JhZGxlRWxlbWVudHMudGFpbFJlZi5jdXJyZW50KVxuICAgICAgICB9LFxuICAgICAgY3JlYXRlT2JzZXJ2ZXI6KCkgPT4ge1xuXG4gICAgICAgIHRoaXMuY3JhZGxlUmVzaXplLm9ic2VydmVyID0gbmV3IFJlc2l6ZU9ic2VydmVyKHRoaXMuY3JhZGxlUmVzaXplLmNhbGxiYWNrKVxuICAgICAgICByZXR1cm4gdGhpcy5jcmFkbGVSZXNpemUub2JzZXJ2ZXJcblxuICAgICAgfVxuICAgfVxuXG4gICBwdWJsaWMgY3JhZGxlSW50ZXJzZWN0ID0geyAgICBcbiAgICAgICAgb2JzZXJ2ZXI6bnVsbCwgICAgXG4gICAgICAgIGNhbGxiYWNrOnRoaXMuY3JhZGxlSW50ZXJzZWN0aW9uT2JzZXJ2ZXJDYWxsYmFjayxcbiAgICAgICAgY29ubmVjdEVsZW1lbnRzOigpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG9ic2VydmVyID0gdGhpcy5jcmFkbGVJbnRlcnNlY3Qub2JzZXJ2ZXJcbiAgICAgICAgICAgIGNvbnN0IGNyYWRsZUVsZW1lbnRzID0gdGhpcy5jcmFkbGVQYXJhbWV0ZXJzLmhhbmRsZXJzUmVmLmN1cnJlbnQuc2NhZmZvbGRIYW5kbGVyLmVsZW1lbnRzXG4gICAgICAgICAgICBvYnNlcnZlci5vYnNlcnZlKGNyYWRsZUVsZW1lbnRzLmhlYWRSZWYuY3VycmVudClcbiAgICAgICAgICAgIG9ic2VydmVyLm9ic2VydmUoY3JhZGxlRWxlbWVudHMudGFpbFJlZi5jdXJyZW50KVxuICAgICAgICB9LFxuICAgICAgICBjcmVhdGVPYnNlcnZlcjooKSA9PiB7XG4gICAgICAgICAgICBsZXQgdmlld3BvcnRJbnRlcnJ1cHRQcm9wZXJ0aWVzID0gdGhpcy5jcmFkbGVQYXJhbWV0ZXJzLnZpZXdwb3J0SW50ZXJydXB0UHJvcGVydGllc1JlZi5jdXJyZW50XG4gICAgICAgICAgICB0aGlzLmNyYWRsZUludGVyc2VjdC5vYnNlcnZlciA9IG5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcihcbiAgICAgICAgICAgICAgICB0aGlzLmNyYWRsZUludGVyc2VjdC5jYWxsYmFjayxcbiAgICAgICAgICAgICAgICB7cm9vdDp2aWV3cG9ydEludGVycnVwdFByb3BlcnRpZXMuZWxlbWVudHJlZi5jdXJyZW50LCB0aHJlc2hvbGQ6MH1cbiAgICAgICAgICAgICkgICAgXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jcmFkbGVJbnRlcnNlY3Qub2JzZXJ2ZXJcbiAgICAgICAgfVxuICAgIH1cblxuICAgcHVibGljIGF4aXNUcmlnZ2VybGluZXNJbnRlcnNlY3QgPSB7XG4gICAgICAgIG9ic2VydmVyOm51bGwsXG4gICAgICAgIGNhbGxiYWNrOnRoaXMuYXhpc1RyaWdnZXJsaW5lc09ic2VydmVyQ2FsbGJhY2ssXG4gICAgICAgIGNvbm5lY3RFbGVtZW50czooKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBvYnNlcnZlciA9IHRoaXMuYXhpc1RyaWdnZXJsaW5lc0ludGVyc2VjdC5vYnNlcnZlclxuICAgICAgICAgICAgY29uc3QgY3JhZGxlRWxlbWVudHMgPSB0aGlzLmNyYWRsZVBhcmFtZXRlcnMuaGFuZGxlcnNSZWYuY3VycmVudC5zY2FmZm9sZEhhbmRsZXIuZWxlbWVudHNcbiAgICAgICAgICAgIG9ic2VydmVyLm9ic2VydmUoY3JhZGxlRWxlbWVudHMuaGVhZFRyaWdnZXJsaW5lUmVmLmN1cnJlbnQpXG4gICAgICAgICAgICBvYnNlcnZlci5vYnNlcnZlKGNyYWRsZUVsZW1lbnRzLnRhaWxUcmlnZ2VybGluZVJlZi5jdXJyZW50KVxuICAgICAgICB9LFxuICAgICAgICBjcmVhdGVPYnNlcnZlcjooKSA9PiB7XG4gICAgICAgICAgICBsZXQgdmlld3BvcnRJbnRlcnJ1cHRQcm9wZXJ0aWVzID0gdGhpcy5jcmFkbGVQYXJhbWV0ZXJzLnZpZXdwb3J0SW50ZXJydXB0UHJvcGVydGllc1JlZi5jdXJyZW50XG4gICAgICAgICAgICB0aGlzLmF4aXNUcmlnZ2VybGluZXNJbnRlcnNlY3Qub2JzZXJ2ZXIgPSBuZXcgSW50ZXJzZWN0aW9uT2JzZXJ2ZXIoXG4gICAgICAgICAgICAgICAgdGhpcy5heGlzVHJpZ2dlcmxpbmVzSW50ZXJzZWN0LmNhbGxiYWNrLFxuICAgICAgICAgICAgICAgIHtyb290OnZpZXdwb3J0SW50ZXJydXB0UHJvcGVydGllcy5lbGVtZW50cmVmLmN1cnJlbnQsIHRocmVzaG9sZDowfVxuICAgICAgICAgICAgKVxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuYXhpc1RyaWdnZXJsaW5lc0ludGVyc2VjdC5vYnNlcnZlclxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIHNpZ25hbHMgPSB7XG4gICAgICAgIHJlcG9zaXRpb25pbmdSZXF1aXJlZDogZmFsc2UsXG4gICAgICAgIHBhdXNlVHJpZ2dlcmxpbmVzT2JzZXJ2ZXI6IGZhbHNlLCBcbiAgICAgICAgcGF1c2VDcmFkbGVJbnRlcnNlY3Rpb25PYnNlcnZlcjpmYWxzZSxcbiAgICAgICAgcGF1c2VDcmFkbGVSZXNpemVPYnNlcnZlcjogZmFsc2UsXG4gICAgICAgIHBhdXNlU2Nyb2xsaW5nRWZmZWN0czogZmFsc2UsXG4gICAgfVxuXG59XG4iXSwibmFtZXMiOlsiUmVzaXplT2JzZXJ2ZXIiLCJ3aW5kb3ciLCJyZXNpemVfb2JzZXJ2ZXJfMSIsImNyYWRsZVBhcmFtZXRlcnMiLCJlbnRyaWVzIiwiX3RoaXMiLCJzaWduYWxzIiwicGF1c2VDcmFkbGVSZXNpemVPYnNlcnZlciIsInBhdXNlVHJpZ2dlcmxpbmVzT2JzZXJ2ZXIiLCJ0ZXN0cm9vdGJvdW5kcyIsInJvb3RCb3VuZHMiLCJ3aWR0aCIsImhlaWdodCIsImhhbmRsZXJzUmVmIiwiY3VycmVudCIsImNvbnRlbnRIYW5kbGVyIiwic3RhdGVIYW5kbGVyIiwic2Nyb2xsSGFuZGxlciIsImlzTW91bnRlZFJlZiIsInNjcm9sbERhdGEiLCJzdGFydCIsInByZXZpb3VzIiwicHJldmlvdXN1cGRhdGUiLCJjdXJyZW50dXBkYXRlIiwidXBkYXRlQ3JhZGxlQ29udGVudCIsInBhdXNlQ3JhZGxlSW50ZXJzZWN0aW9uT2JzZXJ2ZXIiLCJpIiwibGVuZ3RoIiwiZW50cnkiLCJ0YXJnZXQiLCJkYXRhc2V0IiwidHlwZSIsImlzSGVhZENyYWRsZUluVmlldyIsImlzSW50ZXJzZWN0aW5nIiwiaXNUYWlsQ3JhZGxlSW5WaWV3IiwicmVwb3NpdGlvbmluZ1JlcXVpcmVkIiwidmlld3BvcnRJbnRlcnJ1cHRQcm9wZXJ0aWVzIiwidmlld3BvcnRJbnRlcnJ1cHRQcm9wZXJ0aWVzUmVmIiwiY3JhZGxlU3RhdGUiLCJjcmFkbGVTdGF0ZVJlZiIsImlzUmVzaXppbmciLCJwb3J0YWwiLCJfYSIsImlzUmVwYXJlbnRpbmciLCJlbGVtZW50IiwiZWxlbWVudHJlZiIsImNvbnNvbGUiLCJsb2ciLCJjcmFkbGVJbmhlcml0ZWRQcm9wZXJ0aWVzUmVmIiwic2Nyb2xsZXJJRCIsInJlY3QiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJyaWdodCIsImJvdHRvbSIsImxlZnQiLCJ0b3BfMSIsInZpZXdwb3J0RGltZW5zaW9ucyIsInRvcCIsImNyYWRsZUNvbnRlbnQiLCJjb250ZW50IiwiaGVhZENlbGxDb21wb25lbnRzIiwidGFpbENlbGxDb21wb25lbnRzIiwic2V0Q3JhZGxlU3RhdGUiLCJvYnNlcnZlciIsImNhbGxiYWNrIiwiY3JhZGxlcmVzaXplb2JzZXJ2ZXJjYWxsYmFjayIsImNvbm5lY3RFbGVtZW50cyIsImNyYWRsZVJlc2l6ZSIsImNyYWRsZUVsZW1lbnRzIiwic2NhZmZvbGRIYW5kbGVyIiwiZWxlbWVudHMiLCJvYnNlcnZlIiwiaGVhZFJlZiIsInRhaWxSZWYiLCJjcmVhdGVPYnNlcnZlciIsImNyYWRsZUludGVyc2VjdGlvbk9ic2VydmVyQ2FsbGJhY2siLCJjcmFkbGVJbnRlcnNlY3QiLCJJbnRlcnNlY3Rpb25PYnNlcnZlciIsInJvb3QiLCJ0aHJlc2hvbGQiLCJheGlzVHJpZ2dlcmxpbmVzT2JzZXJ2ZXJDYWxsYmFjayIsImF4aXNUcmlnZ2VybGluZXNJbnRlcnNlY3QiLCJoZWFkVHJpZ2dlcmxpbmVSZWYiLCJ0YWlsVHJpZ2dlcmxpbmVSZWYiLCJwYXVzZVNjcm9sbGluZ0VmZmVjdHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/cradle/interrupthandler.tsx\n");

/***/ }),

/***/ "./src/cradle/portalhandler.tsx":
/*!**************************************!*\
  !*** ./src/cradle/portalhandler.tsx ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(" // portalhandler.tsx\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PortalList = exports.PortalWrapper = exports.PortalHandler = void 0;\n/*\n    The infinite list scroller stores user cell data in a central hidden portal cache for each\n    infinitegridscroller root, from whence the data is pulled into the relevant CellShell for display\n*/\n\nvar react_1 = __importStar(__webpack_require__(/*! react */ \"react\"));\n\nvar react_reverse_portal_1 = __webpack_require__(/*! react-reverse-portal */ \"./node_modules/react-reverse-portal/dist/web/index.js\"); // global scroller data, organized by session scrollerID\n\n\nvar PortalHandler =\n/** @class */\nfunction () {\n  function PortalHandler() {\n    //===========================[ REPOSITORY AND LIST MANAGEMENT ]==================================\n    var _this = this;\n\n    this.scrollerProps = {\n      setListState: null,\n      modified: false,\n      portalMetadataMap: new Map(),\n      portalMap: new Map(),\n      portalList: null\n    }; // set state of the PortalList component of the scroller to trigger render\n\n    this.renderPortalList = function () {\n      if (_this.scrollerProps.modified) {\n        _this.scrollerProps.portalList = Array.from(_this.scrollerProps.portalMap.values());\n        _this.scrollerProps.modified = false;\n      }\n\n      _this.scrollerProps.setListState(); // trigger display update\n\n    };\n  } // initialize scroller repository\n\n\n  PortalHandler.prototype.resetScrollerPortalRepository = function () {\n    // keep the setListState callback\n    this.scrollerProps.portalMap.clear();\n    this.scrollerProps.portalMetadataMap.clear();\n    this.scrollerProps.portalList = null;\n    this.scrollerProps.modified = false;\n  }; // ==========================[ INDIVIDUAL PORTAL MANAGEMENT ]============================\n  // add a portal list item. The index is the scroller's portal dataset index\n\n\n  PortalHandler.prototype.fetchOrCreatePortal = function (index, content) {\n    if (this.hasPortal(index)) {\n      return this.getPortal(index);\n    } // if not found, create new portal\n\n\n    var _a = createInPortal(content, index),\n        inportal = _a[0],\n        reverseportal = _a[1];\n\n    this.scrollerProps.portalMap.set(index, react_1[\"default\"].createElement(exports.PortalWrapper, {\n      inportal: inportal,\n      key: index,\n      index: index\n    }));\n    this.scrollerProps.modified = true;\n    var portalMetadata = {\n      reverseportal: reverseportal,\n      isReparenting: false,\n      hasusercontent: false\n    };\n    this.scrollerProps.portalMetadataMap.set(index, portalMetadata);\n    this.renderPortalList();\n    return portalMetadata;\n  }; // update the content of a portal list item\n\n\n  PortalHandler.prototype.updatePortal = function (index, content) {\n    var portalMetadata = this.getPortal(index);\n    var portalComponent = updateInPortal(content, portalMetadata.reverseportal);\n    this.scrollerProps.portalMap.set(index, react_1[\"default\"].createElement(exports.PortalWrapper, {\n      inportal: portalComponent,\n      key: index,\n      index: index\n    }));\n    this.scrollerProps.modified = true;\n    this.renderPortalList();\n    return portalMetadata;\n  }; // delete a portal list item\n\n\n  PortalHandler.prototype.deletePortal = function (index) {\n    this.scrollerProps.portalMetadataMap[\"delete\"](index);\n    this.scrollerProps.portalMap[\"delete\"](index);\n    this.scrollerProps.modified = true;\n  }; // query existence of a portal list item\n\n\n  PortalHandler.prototype.hasPortal = function (index) {\n    return this.scrollerProps.portalMetadataMap.has(index);\n  }; // get a portal list item's meta data\n\n\n  PortalHandler.prototype.getPortal = function (index) {\n    return this.scrollerProps.portalMetadataMap.get(index);\n  };\n\n  return PortalHandler;\n}();\n\nexports.PortalHandler = PortalHandler; // ==========================[ Utility functions ]============================\n// get a react-reverse-portal InPortal component, with its metadata\n// with user content and container\n\nvar createInPortal = function createInPortal(content, index) {\n  var reversePortal = (0, react_reverse_portal_1.createHtmlPortalNode)();\n  var container = reversePortal.element;\n  container.style.inset = '0px';\n  container.style.position = 'absolute';\n  container.dataset.type = 'portalcontainer';\n  container.dataset.index = index;\n  container.setAttribute('key', index);\n  return [react_1[\"default\"].createElement(react_reverse_portal_1.InPortal, {\n    node: reversePortal\n  }, content), reversePortal];\n}; // update an InPortal component's user content\n\n\nvar updateInPortal = function updateInPortal(content, reversePortal) {\n  return react_1[\"default\"].createElement(react_reverse_portal_1.InPortal, {\n    node: reversePortal\n  }, content);\n}; // ========================[ Utility components ]==============================\n\n\nvar wrapperstyle = {\n  display: 'none'\n}; // static; should take same dimensions as container CellShell\n// hidden portal wrapper for clarity and usage of conventional react relisting services\n\nvar PortalWrapper = function PortalWrapper(_a) {\n  var inportal = _a.inportal,\n      index = _a.index;\n  return react_1[\"default\"].createElement(\"div\", {\n    \"data-type\": 'portalwrapper',\n    \"data-index\": index,\n    style: wrapperstyle,\n    key: index\n  }, inportal);\n};\n\nexports.PortalWrapper = PortalWrapper; // portal list component for rapid relisting of updates, using external callback for set state\n\nvar PortalList = function PortalList(_a) {\n  var scrollerProps = _a.scrollerProps;\n\n  var _b = (0, react_1.useState)(null),\n      portalList = _b[0],\n      setPortalList = _b[1];\n\n  var isMountedRef = (0, react_1.useRef)(true);\n  (0, react_1.useEffect)(function () {\n    scrollerProps.setListState = function () {\n      isMountedRef.current && setPortalList(scrollerProps.portalList);\n    };\n\n    return function () {\n      isMountedRef.current = false;\n    };\n  }, []);\n  return portalList;\n};\n\nexports.PortalList = PortalList;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/cradle/portalhandler.tsx\n");

/***/ }),

/***/ "./src/cradle/scaffoldhandler.tsx":
/*!****************************************!*\
  !*** ./src/cradle/scaffoldhandler.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval(" // cradlehandler.tsx\n// copyright (c) 2021 Henrik Bechmann, Toronto, Licence: MIT\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\nvar ScaffoldHandler =\n/** @class */\nfunction () {\n  function ScaffoldHandler(cradleParameters) {\n    // cradlePositionData controls the relative positions of the scaffold elements\n    this.cradlePositionData = {\n      /*\n          \"block\" = cradleblock, which is the element that is scrolled\n               blockScrollPos is set by scrollHandler during and after scrolling,\n          and by setCradleContent in contentHandler, which repositions the cradle.\n               blockScrollPos is used by\n              - cradle initialization in response to reparenting interrupt\n              - setCradleContent\n           */\n      blockScrollPos: null,\n\n      /*\n          values can be \"scrollTop\" or \"scrollLeft\" (of the viewport element) depending on orientation\n               blockScrollProperty is set by the orientation reconfiguration effect in cradle module.\n               it is used where blockScrollPos is used above.\n      */\n      blockScrollProperty: null,\n\n      /*\n          targetAxisReferenceIndex is set by\n              - setCradleContent\n              - updateCradleContent\n              - scaffoldHandler (initialization)\n              - scrollHandler (during and after scroll)\n              - host scrollToItem call\n               targetAxisReferenceIndex is used by\n              - scrollTrackerArgs in cradle module\n              - requestedAxisReferenceIndex in setCradleContent\n      */\n      targetAxisReferenceIndex: null,\n\n      /*\n          targetAxisPixelOffset is set by\n              - setCradleContent\n              - updateCradleContent\n              - scaffoldHandler (initialization)\n              - scrollHandler (during and after scroll)\n              - pivot effect (change of orientation) in cradle module\n               targetAxisPixelOffset is used by\n              - previousAxisOffset in pivot effect\n              - setCradleContent\n           */\n      targetAxisPixelOffset: null\n    };\n    this.cradleParameters = cradleParameters;\n    var _a = cradleParameters.cradleInternalPropertiesRef.current.cradleElementsRef.current,\n        axisRef = _a.axisRef,\n        headRef = _a.headRef,\n        tailRef = _a.tailRef,\n        headTriggerlineRef = _a.headTriggerlineRef,\n        tailTriggerlineRef = _a.tailTriggerlineRef;\n    this.elements = {\n      axisRef: axisRef,\n      headRef: headRef,\n      tailRef: tailRef,\n      headTriggerlineRef: headTriggerlineRef,\n      tailTriggerlineRef: tailTriggerlineRef\n    };\n    var _b = this.cradleParameters.cradleInheritedPropertiesRef.current,\n        defaultVisibleIndex = _b.defaultVisibleIndex,\n        listsize = _b.listsize,\n        padding = _b.padding; // progression of references: implied->target\n\n    this.cradlePositionData.targetAxisReferenceIndex = Math.min(defaultVisibleIndex, listsize - 1) || 0;\n    this.cradlePositionData.targetAxisPixelOffset = 0;\n  }\n\n  return ScaffoldHandler;\n}();\n\nexports[\"default\"] = ScaffoldHandler;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY3JhZGxlL3NjYWZmb2xkaGFuZGxlci50c3guanMiLCJtYXBwaW5ncyI6IkNBQUE7QUFDQTs7Ozs7O0FBRUE7QUFBQTtBQUFBO0VBRUkseUJBQVlBLGdCQUFaLEVBQTRCO0lBa0M1QjtJQUNPLDBCQUFxQjtNQUV4Qjs7Ozs7Ozs7TUFXQUMsY0FBYyxFQUFDLElBYlM7O01BZXhCOzs7OztNQU9BQyxtQkFBbUIsRUFBQyxJQXRCSTs7TUF3QnhCOzs7Ozs7Ozs7OztNQVlBQyx3QkFBd0IsRUFBQyxJQXBDRDs7TUFzQ3hCOzs7Ozs7Ozs7OztNQWFBQyxxQkFBcUIsRUFBQztJQW5ERSxDQUFyQjtJQWpDSCxLQUFLSixnQkFBTCxHQUF3QkEsZ0JBQXhCO0lBRU0sU0FNRkEsZ0JBQWdCLENBQUNLLDJCQUFqQixDQUE2Q0MsT0FBN0MsQ0FBcURDLGlCQUFyRCxDQUF1RUQsT0FOckU7SUFBQSxJQUNGRSxPQUFPLGFBREw7SUFBQSxJQUVGQyxPQUFPLGFBRkw7SUFBQSxJQUdGQyxPQUFPLGFBSEw7SUFBQSxJQUlGQyxrQkFBa0Isd0JBSmhCO0lBQUEsSUFLRkMsa0JBQWtCLHdCQUxoQjtJQU9OLEtBQUtDLFFBQUwsR0FBZ0I7TUFDWkwsT0FBTyxTQURLO01BRVpDLE9BQU8sU0FGSztNQUdaQyxPQUFPLFNBSEs7TUFJWkMsa0JBQWtCLG9CQUpOO01BS1pDLGtCQUFrQjtJQUxOLENBQWhCO0lBUU0sU0FJRixLQUFLWixnQkFBTCxDQUFzQmMsNEJBQXRCLENBQW1EUixPQUpqRDtJQUFBLElBQ0ZTLG1CQUFtQix5QkFEakI7SUFBQSxJQUVGQyxRQUFRLGNBRk47SUFBQSxJQUdGQyxPQUFPLGFBSEwsQ0FuQmtCLENBeUJ4Qjs7SUFDQSxLQUFLQyxrQkFBTCxDQUF3QmYsd0JBQXhCLEdBQ0tnQixJQUFJLENBQUNDLEdBQUwsQ0FBU0wsbUJBQVQsRUFBOEJDLFFBQVEsR0FBRyxDQUF6QyxLQUFnRCxDQURyRDtJQUVBLEtBQUtFLGtCQUFMLENBQXdCZCxxQkFBeEIsR0FBZ0QsQ0FBaEQ7RUFFSDs7RUE4REw7QUFBQyxDQTlGRCIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0LWluZmluaXRlLWdyaWQtc2Nyb2xsZXIvLi9zcmMvY3JhZGxlL3NjYWZmb2xkaGFuZGxlci50c3g/ZmMyZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBjcmFkbGVoYW5kbGVyLnRzeFxuLy8gY29weXJpZ2h0IChjKSAyMDIxIEhlbnJpayBCZWNobWFubiwgVG9yb250bywgTGljZW5jZTogTUlUXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNjYWZmb2xkSGFuZGxlciB7IFxuXG4gICAgY29uc3RydWN0b3IoY3JhZGxlUGFyYW1ldGVycykge1xuXG4gICAgICAgIHRoaXMuY3JhZGxlUGFyYW1ldGVycyA9IGNyYWRsZVBhcmFtZXRlcnNcblxuICAgICAgICBjb25zdCB7XG4gICAgICAgICAgICBheGlzUmVmLCBcbiAgICAgICAgICAgIGhlYWRSZWYsIFxuICAgICAgICAgICAgdGFpbFJlZixcbiAgICAgICAgICAgIGhlYWRUcmlnZ2VybGluZVJlZixcbiAgICAgICAgICAgIHRhaWxUcmlnZ2VybGluZVJlZlxuICAgICAgICB9ID0gY3JhZGxlUGFyYW1ldGVycy5jcmFkbGVJbnRlcm5hbFByb3BlcnRpZXNSZWYuY3VycmVudC5jcmFkbGVFbGVtZW50c1JlZi5jdXJyZW50XG4gICAgICAgIHRoaXMuZWxlbWVudHMgPSB7XG4gICAgICAgICAgICBheGlzUmVmLFxuICAgICAgICAgICAgaGVhZFJlZixcbiAgICAgICAgICAgIHRhaWxSZWYsXG4gICAgICAgICAgICBoZWFkVHJpZ2dlcmxpbmVSZWYsXG4gICAgICAgICAgICB0YWlsVHJpZ2dlcmxpbmVSZWZcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgIGRlZmF1bHRWaXNpYmxlSW5kZXgsIFxuICAgICAgICAgICAgbGlzdHNpemUsIFxuICAgICAgICAgICAgcGFkZGluZ1xuICAgICAgICB9ID0gdGhpcy5jcmFkbGVQYXJhbWV0ZXJzLmNyYWRsZUluaGVyaXRlZFByb3BlcnRpZXNSZWYuY3VycmVudFxuXG4gICAgICAgIC8vIHByb2dyZXNzaW9uIG9mIHJlZmVyZW5jZXM6IGltcGxpZWQtPnRhcmdldFxuICAgICAgICB0aGlzLmNyYWRsZVBvc2l0aW9uRGF0YS50YXJnZXRBeGlzUmVmZXJlbmNlSW5kZXggPSBcbiAgICAgICAgICAgIChNYXRoLm1pbihkZWZhdWx0VmlzaWJsZUluZGV4LChsaXN0c2l6ZSAtIDEpKSB8fCAwKVxuICAgICAgICB0aGlzLmNyYWRsZVBvc2l0aW9uRGF0YS50YXJnZXRBeGlzUGl4ZWxPZmZzZXQgPSAwXG5cbiAgICB9XG5cbiAgICBwcml2YXRlIGNyYWRsZVBhcmFtZXRlcnNcblxuICAgIC8vIGNyYWRsZVBvc2l0aW9uRGF0YSBjb250cm9scyB0aGUgcmVsYXRpdmUgcG9zaXRpb25zIG9mIHRoZSBzY2FmZm9sZCBlbGVtZW50c1xuICAgIHB1YmxpYyBjcmFkbGVQb3NpdGlvbkRhdGEgPSB7XG5cbiAgICAgICAgLypcbiAgICAgICAgICAgIFwiYmxvY2tcIiA9IGNyYWRsZWJsb2NrLCB3aGljaCBpcyB0aGUgZWxlbWVudCB0aGF0IGlzIHNjcm9sbGVkXG5cbiAgICAgICAgICAgIGJsb2NrU2Nyb2xsUG9zIGlzIHNldCBieSBzY3JvbGxIYW5kbGVyIGR1cmluZyBhbmQgYWZ0ZXIgc2Nyb2xsaW5nLFxuICAgICAgICAgICAgYW5kIGJ5IHNldENyYWRsZUNvbnRlbnQgaW4gY29udGVudEhhbmRsZXIsIHdoaWNoIHJlcG9zaXRpb25zIHRoZSBjcmFkbGUuXG5cbiAgICAgICAgICAgIGJsb2NrU2Nyb2xsUG9zIGlzIHVzZWQgYnlcbiAgICAgICAgICAgICAgICAtIGNyYWRsZSBpbml0aWFsaXphdGlvbiBpbiByZXNwb25zZSB0byByZXBhcmVudGluZyBpbnRlcnJ1cHRcbiAgICAgICAgICAgICAgICAtIHNldENyYWRsZUNvbnRlbnRcblxuICAgICAgICAqL1xuICAgICAgICBibG9ja1Njcm9sbFBvczpudWxsLFxuXG4gICAgICAgIC8qXG4gICAgICAgICAgICB2YWx1ZXMgY2FuIGJlIFwic2Nyb2xsVG9wXCIgb3IgXCJzY3JvbGxMZWZ0XCIgKG9mIHRoZSB2aWV3cG9ydCBlbGVtZW50KSBkZXBlbmRpbmcgb24gb3JpZW50YXRpb25cblxuICAgICAgICAgICAgYmxvY2tTY3JvbGxQcm9wZXJ0eSBpcyBzZXQgYnkgdGhlIG9yaWVudGF0aW9uIHJlY29uZmlndXJhdGlvbiBlZmZlY3QgaW4gY3JhZGxlIG1vZHVsZS5cblxuICAgICAgICAgICAgaXQgaXMgdXNlZCB3aGVyZSBibG9ja1Njcm9sbFBvcyBpcyB1c2VkIGFib3ZlLlxuICAgICAgICAqL1xuICAgICAgICBibG9ja1Njcm9sbFByb3BlcnR5Om51bGwsXG5cbiAgICAgICAgLypcbiAgICAgICAgICAgIHRhcmdldEF4aXNSZWZlcmVuY2VJbmRleCBpcyBzZXQgYnlcbiAgICAgICAgICAgICAgICAtIHNldENyYWRsZUNvbnRlbnRcbiAgICAgICAgICAgICAgICAtIHVwZGF0ZUNyYWRsZUNvbnRlbnRcbiAgICAgICAgICAgICAgICAtIHNjYWZmb2xkSGFuZGxlciAoaW5pdGlhbGl6YXRpb24pXG4gICAgICAgICAgICAgICAgLSBzY3JvbGxIYW5kbGVyIChkdXJpbmcgYW5kIGFmdGVyIHNjcm9sbClcbiAgICAgICAgICAgICAgICAtIGhvc3Qgc2Nyb2xsVG9JdGVtIGNhbGxcblxuICAgICAgICAgICAgdGFyZ2V0QXhpc1JlZmVyZW5jZUluZGV4IGlzIHVzZWQgYnlcbiAgICAgICAgICAgICAgICAtIHNjcm9sbFRyYWNrZXJBcmdzIGluIGNyYWRsZSBtb2R1bGVcbiAgICAgICAgICAgICAgICAtIHJlcXVlc3RlZEF4aXNSZWZlcmVuY2VJbmRleCBpbiBzZXRDcmFkbGVDb250ZW50XG4gICAgICAgICovXG4gICAgICAgIHRhcmdldEF4aXNSZWZlcmVuY2VJbmRleDpudWxsLFxuXG4gICAgICAgIC8qXG4gICAgICAgICAgICB0YXJnZXRBeGlzUGl4ZWxPZmZzZXQgaXMgc2V0IGJ5XG4gICAgICAgICAgICAgICAgLSBzZXRDcmFkbGVDb250ZW50XG4gICAgICAgICAgICAgICAgLSB1cGRhdGVDcmFkbGVDb250ZW50XG4gICAgICAgICAgICAgICAgLSBzY2FmZm9sZEhhbmRsZXIgKGluaXRpYWxpemF0aW9uKVxuICAgICAgICAgICAgICAgIC0gc2Nyb2xsSGFuZGxlciAoZHVyaW5nIGFuZCBhZnRlciBzY3JvbGwpXG4gICAgICAgICAgICAgICAgLSBwaXZvdCBlZmZlY3QgKGNoYW5nZSBvZiBvcmllbnRhdGlvbikgaW4gY3JhZGxlIG1vZHVsZVxuXG4gICAgICAgICAgICB0YXJnZXRBeGlzUGl4ZWxPZmZzZXQgaXMgdXNlZCBieVxuICAgICAgICAgICAgICAgIC0gcHJldmlvdXNBeGlzT2Zmc2V0IGluIHBpdm90IGVmZmVjdFxuICAgICAgICAgICAgICAgIC0gc2V0Q3JhZGxlQ29udGVudFxuXG4gICAgICAgICovXG4gICAgICAgIHRhcmdldEF4aXNQaXhlbE9mZnNldDpudWxsLFxuXG4gICAgfVxuXG4gICAgcHVibGljIGVsZW1lbnRzXG5cbn0iXSwibmFtZXMiOlsiY3JhZGxlUGFyYW1ldGVycyIsImJsb2NrU2Nyb2xsUG9zIiwiYmxvY2tTY3JvbGxQcm9wZXJ0eSIsInRhcmdldEF4aXNSZWZlcmVuY2VJbmRleCIsInRhcmdldEF4aXNQaXhlbE9mZnNldCIsImNyYWRsZUludGVybmFsUHJvcGVydGllc1JlZiIsImN1cnJlbnQiLCJjcmFkbGVFbGVtZW50c1JlZiIsImF4aXNSZWYiLCJoZWFkUmVmIiwidGFpbFJlZiIsImhlYWRUcmlnZ2VybGluZVJlZiIsInRhaWxUcmlnZ2VybGluZVJlZiIsImVsZW1lbnRzIiwiY3JhZGxlSW5oZXJpdGVkUHJvcGVydGllc1JlZiIsImRlZmF1bHRWaXNpYmxlSW5kZXgiLCJsaXN0c2l6ZSIsInBhZGRpbmciLCJjcmFkbGVQb3NpdGlvbkRhdGEiLCJNYXRoIiwibWluIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/cradle/scaffoldhandler.tsx\n");

/***/ }),

/***/ "./src/cradle/scrollhandler.tsx":
/*!**************************************!*\
  !*** ./src/cradle/scrollhandler.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval(" // scrollhandler.tsx\n// copyright (c) 2021 Henrik Bechmann, Toronto, Licence: MIT\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar SCROLL_TIMEOUT_FOR_ONAFTERSCROLL = 500;\n\nvar ScrollHandler =\n/** @class */\nfunction () {\n  function ScrollHandler(cradleParameters) {\n    var _this = this;\n\n    this.scrollData = {\n      start: 0,\n      current: 0,\n      previous: 0,\n      previousupdate: 0,\n      currentupdate: 0\n    };\n    this._scrolltimerid = null;\n    this.isScrolling = false;\n\n    this.onScroll = function (e) {\n      var viewportInterruptProperties = _this.cradleParameters.viewportInterruptPropertiesRef.current;\n      var viewportElement = viewportInterruptProperties.elementref.current;\n      var scrollPositionCurrent = _this.cradleParameters.cradleInheritedPropertiesRef.current.orientation == 'vertical' ? viewportElement.scrollTop : viewportElement.scrollLeft;\n\n      if (scrollPositionCurrent < 0) {\n        // for Safari\n        return;\n      }\n\n      clearTimeout(_this._scrolltimerid);\n      var signals = _this.cradleParameters.handlersRef.current.interruptHandler.signals;\n\n      if (signals.pauseScrollingEffects) {\n        return;\n      }\n\n      if (!_this.isScrolling) {\n        _this.isScrolling = true;\n        _this.scrollData.start = scrollPositionCurrent;\n        _this.scrollData.currentupdate = scrollPositionCurrent;\n      }\n\n      var scaffoldHandler = _this.cradleParameters.handlersRef.current.scaffoldHandler;\n      var cradlePositionData = scaffoldHandler.cradlePositionData; // keep up to date in case of reparenting interrupt\n\n      cradlePositionData.blockScrollPos = scrollPositionCurrent;\n      _this.scrollData.previous = _this.scrollData.current;\n      _this.scrollData.current = scrollPositionCurrent;\n      var stateHandler = _this.cradleParameters.handlersRef.current.stateHandler;\n      var cradleState = stateHandler.cradleStateRef.current;\n      var _a = _this.cradleParameters.handlersRef.current,\n          contentHandler = _a.contentHandler,\n          serviceHandler = _a.serviceHandler;\n\n      if (!viewportInterruptProperties.isResizing) {\n        if (cradleState == 'ready' || cradleState == 'repositioningRender' || cradleState == 'repositioningContinuation') {\n          if (cradleState == 'ready') {\n            // const itemindex = cradlePositionData.targetAxisReferenceIndex\n            var axisVisiblePixelOffset = void 0;\n            var cradleElements = scaffoldHandler.elements;\n            var axisElement = cradleElements.axisRef.current;\n            var viewportElement_1 = _this.cradleParameters.viewportInterruptPropertiesRef.current.elementref.current;\n\n            if (_this.cradleParameters.cradleInheritedPropertiesRef.current.orientation == 'vertical') {\n              axisVisiblePixelOffset = axisElement.offsetTop - viewportElement_1.scrollTop;\n            } else {\n              axisVisiblePixelOffset = axisElement.offsetLeft - viewportElement_1.scrollLeft;\n            } // cradlePositionData.targetAxisReferenceIndex = itemindex\n\n\n            cradlePositionData.targetAxisPixelOffset = axisVisiblePixelOffset;\n          }\n\n          if (cradleState == 'repositioningRender' || cradleState == 'repositioningContinuation') {\n            _this.calcImpliedRepositioningData();\n\n            if (cradleState == 'repositioningRender') stateHandler.setCradleState('repositioningContinuation');\n          } // TODO: re-instate the following\n\n\n          serviceHandler.serviceCalls.referenceIndexCallbackRef.current && serviceHandler.serviceCalls.referenceIndexCallbackRef.current(cradlePositionData.targetAxisReferenceIndex, 'scrolling', cradleState);\n        }\n      }\n\n      _this._scrolltimerid = setTimeout(function () {\n        _this.onAfterScroll();\n      }, SCROLL_TIMEOUT_FOR_ONAFTERSCROLL);\n      return false;\n    };\n\n    this.onAfterScroll = function () {\n      _this.isScrolling = false;\n      var _a = _this.cradleParameters.handlersRef.current,\n          stateHandler = _a.stateHandler,\n          contentHandler = _a.contentHandler;\n      var viewportInterruptProperties = _this.cradleParameters.viewportInterruptPropertiesRef.current;\n      var cradleState = stateHandler.cradleStateRef.current;\n\n      switch (cradleState) {\n        case 'repositioningRender':\n        case 'repositioningContinuation':\n          {\n            _this.updateBlockScrollPos();\n\n            stateHandler.setCradleState('doreposition');\n            break;\n          }\n\n        default:\n          {\n            if (_this.scrollData.start != _this.scrollData.current || _this.scrollData.current != _this.scrollData.previous) {\n              if (stateHandler.isMountedRef.current) {\n                _this.updateReferenceData();\n              }\n            }\n          }\n      }\n\n      var scaffoldHandler = _this.cradleParameters.handlersRef.current.scaffoldHandler;\n      var cradlePositionData = scaffoldHandler.cradlePositionData;\n    }; // after scroll, but not after repositioning\n\n\n    this.updateReferenceData = function () {\n      var _a = _this.cradleParameters.handlersRef.current,\n          stateHandler = _a.stateHandler,\n          scaffoldHandler = _a.scaffoldHandler;\n      var cradleProps = _this.cradleParameters.cradleInheritedPropertiesRef.current;\n      var viewportInterruptProperties = _this.cradleParameters.viewportInterruptPropertiesRef.current;\n      if (!stateHandler.isMountedRef.current) return;\n      var axisVisiblePixelOffset;\n      var cradleElements = scaffoldHandler.elements;\n      var viewportElement = viewportInterruptProperties.elementref.current;\n\n      if (cradleProps.orientation == 'vertical') {\n        axisVisiblePixelOffset = cradleElements.axisRef.current.offsetTop - viewportElement.scrollTop;\n      } else {\n        axisVisiblePixelOffset = cradleElements.axisRef.current.offsetLeft - viewportElement.scrollLeft;\n      }\n\n      var cradlePositionData = scaffoldHandler.cradlePositionData;\n      cradlePositionData.targetAxisPixelOffset = axisVisiblePixelOffset;\n\n      if (!viewportInterruptProperties.isResizing) {\n        _this.updateBlockScrollPos();\n      }\n    }; // called from finishreposition state change call above\n    // called from updateReferenceData\n\n\n    this.updateBlockScrollPos = function () {\n      var cradleProps = _this.cradleParameters.cradleInheritedPropertiesRef.current;\n      var viewportInterruptProperties = _this.cradleParameters.viewportInterruptPropertiesRef.current;\n      var scaffoldHandler = _this.cradleParameters.handlersRef.current.scaffoldHandler;\n      var cradlePositionData = scaffoldHandler.cradlePositionData;\n      var viewportElement = viewportInterruptProperties.elementref.current;\n\n      if (cradleProps.orientation == 'vertical') {\n        cradlePositionData.blockScrollPos = viewportElement.scrollTop;\n      } else {\n        cradlePositionData.blockScrollPos = viewportElement.scrollLeft;\n      }\n    };\n\n    this.calcImpliedRepositioningData = function () {\n      var viewportInterruptProperties = _this.cradleParameters.viewportInterruptPropertiesRef.current;\n      var cradleProps = _this.cradleParameters.cradleInheritedPropertiesRef.current;\n      var cradleConfig = _this.cradleParameters.cradleInternalPropertiesRef.current;\n      var crosscount = cradleConfig.crosscount;\n      var viewportElement = viewportInterruptProperties.elementref.current;\n      var orientation = cradleProps.orientation,\n          listsize = cradleProps.listsize;\n      var scrollPos, cellLength;\n\n      if (orientation == 'vertical') {\n        scrollPos = viewportElement.scrollTop;\n        cellLength = cradleProps.cellHeight + cradleProps.gap;\n      } else {\n        scrollPos = viewportElement.scrollLeft;\n        cellLength = cradleProps.cellWidth + cradleProps.gap;\n      }\n\n      var axisPixelOffset = cellLength - scrollPos % cellLength;\n\n      if (axisPixelOffset == cellLength + cradleProps.padding) {\n        axisPixelOffset = 0;\n      }\n\n      var axisRowIndex = Math.ceil((scrollPos - cradleProps.padding) / cellLength);\n      var axisReferenceIndex = axisRowIndex * crosscount;\n      axisReferenceIndex = Math.min(axisReferenceIndex, listsize - 1);\n      var diff = axisReferenceIndex % crosscount;\n      axisReferenceIndex -= diff;\n      if (axisReferenceIndex == 0) axisPixelOffset = 0; // defensive\n\n      var cradlePositionData = _this.cradleParameters.handlersRef.current.scaffoldHandler.cradlePositionData;\n      cradlePositionData.targetAxisReferenceIndex = axisReferenceIndex;\n      cradlePositionData.targetAxisPixelOffset = axisPixelOffset;\n    };\n\n    this.cradleParameters = cradleParameters;\n  }\n\n  return ScrollHandler;\n}();\n\nexports[\"default\"] = ScrollHandler;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/cradle/scrollhandler.tsx\n");

/***/ }),

/***/ "./src/cradle/servicehandler.tsx":
/*!***************************************!*\
  !*** ./src/cradle/servicehandler.tsx ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval(" // servicehandler.tsx\n// copyright (c) 2021 Henrik Bechmann, Toronto, Licence: MIT\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\nvar ServiceHandler =\n/** @class */\nfunction () {\n  function ServiceHandler(cradleParameters) {\n    var _this = this;\n\n    this.getVisibleList = function () {\n      var contentHandler = _this.cradleParameters.handlersRef.current.contentHandler;\n      var cradleContent = contentHandler.content;\n      var viewportInterruptProperties = _this.cradleParameters.viewportInterruptPropertiesRef.current;\n      var scaffoldHandler = _this.cradleParameters.handlersRef.current.scaffoldHandler;\n      var cradleElements = scaffoldHandler.elements;\n      return getVisibleItemsList({\n        itemElementMap: contentHandler.itemElements,\n        viewportElement: viewportInterruptProperties.elementref.current,\n        cradleElements: cradleElements,\n        cradleProps: _this.cradleParameters.cradleInheritedPropertiesRef.current,\n        cradleContent: cradleContent\n      });\n    };\n\n    this.getContentList = function () {\n      var contentHandler = _this.cradleParameters.handlersRef.current.contentHandler;\n      var contentlist = Array.from(contentHandler.itemElements);\n      contentlist.sort(function (a, b) {\n        return a[0] < b[0] ? -1 : 1;\n      });\n      return contentlist;\n    }; // TODO: adjust axisPixelOffset to match new data\n\n\n    this.reload = function () {\n      var signals = _this.cradleParameters.handlersRef.current.interruptHandler.signals;\n      var stateHandler = _this.cradleParameters.handlersRef.current.stateHandler;\n      signals.pauseCradleIntersectionObserver = true;\n      signals.pauseTriggerlinesObserver = true;\n      signals.pauseScrollingEffects = true;\n      stateHandler.setCradleState('reload');\n    };\n\n    this.scrollToItem = function (index) {\n      var signals = _this.cradleParameters.handlersRef.current.interruptHandler.signals;\n      var _a = _this.cradleParameters.handlersRef.current,\n          scaffoldHandler = _a.scaffoldHandler,\n          stateHandler = _a.stateHandler;\n      signals.pauseScrollingEffects = true;\n      scaffoldHandler.cradlePositionData.targetAxisReferenceIndex = index;\n      stateHandler.setCradleState('doreposition');\n    };\n\n    this.cradleParameters = cradleParameters;\n    this.serviceCalls = cradleParameters.externalCallbacksRef.current;\n  }\n\n  return ServiceHandler;\n}();\n\nexports[\"default\"] = ServiceHandler;\n\nvar getVisibleItemsList = function getVisibleItemsList(_a) {\n  var itemElementMap = _a.itemElementMap,\n      viewportElement = _a.viewportElement,\n      cradleElements = _a.cradleElements,\n      cradleProps = _a.cradleProps,\n      cradleContent = _a.cradleContent;\n  var headElement = cradleElements.headRef.current;\n  var axisElement = cradleElements.axisRef.current;\n  var orientation = cradleProps.orientation;\n  var headlist = cradleContent.headCellComponents;\n  var itemlistindexes = Array.from(itemElementMap.keys());\n  itemlistindexes.sort(function (a, b) {\n    return a < b ? -1 : 1;\n  });\n  var headlistindexes = [];\n\n  for (var _i = 0, headlist_1 = headlist; _i < headlist_1.length; _i++) {\n    var item = headlist_1[_i];\n    headlistindexes.push(parseInt(item.props.index));\n  }\n\n  var list = [];\n  var cradleTop = headElement.offsetTop + axisElement.offsetTop,\n      cradleLeft = headElement.offsetLeft + axisElement.offsetLeft;\n  var scrollblockTopOffset = -viewportElement.scrollTop,\n      scrollblockLeftOffset = -viewportElement.scrollLeft,\n      viewportHeight = viewportElement.offsetHeight,\n      viewportWidth = viewportElement.offsetWidth,\n      viewportTopOffset = -scrollblockTopOffset,\n      viewportBottomOffset = -scrollblockTopOffset + viewportHeight;\n\n  for (var _b = 0, itemlistindexes_1 = itemlistindexes; _b < itemlistindexes_1.length; _b++) {\n    var index = itemlistindexes_1[_b];\n    var element = itemElementMap.get(index).current;\n    var inheadlist = headlistindexes.includes(index);\n    var top_1 = inheadlist ? element.offsetTop : (orientation == 'vertical' ? headElement.offsetHeight : 0) + element.offsetTop,\n        left = inheadlist ? element.offsetLeft : (orientation == 'horizontal' ? headElement.offsetWidth : 0) + element.offsetLeft,\n        width = element.offsetWidth,\n        height = element.offsetHeight,\n        right = left + width,\n        bottom = top_1 + height;\n    var itemTopOffset = scrollblockTopOffset + cradleTop + top_1,\n        // offset from top of viewport\n    itemBottomOffset = scrollblockTopOffset + cradleTop + bottom,\n        // offset from top of viewport\n    itemLeftOffset = scrollblockLeftOffset + cradleLeft + left,\n        itemRightOffset = scrollblockLeftOffset + cradleLeft + right;\n    var isVisible = false; // default\n\n    var topPortion = void 0,\n        bottomPortion = void 0,\n        leftPortion = void 0,\n        rightPortion = void 0;\n\n    if (itemTopOffset < 0 && itemBottomOffset > 0) {\n      if (orientation == 'vertical') isVisible = true;\n      bottomPortion = itemBottomOffset;\n      topPortion = bottomPortion - height;\n    } else if (itemTopOffset >= 0 && itemBottomOffset < viewportHeight) {\n      if (orientation == 'vertical') isVisible = true;\n      topPortion = height;\n      bottomPortion = 0;\n    } else if (itemTopOffset > 0 && itemTopOffset - viewportHeight < 0) {\n      if (orientation == 'vertical') isVisible = true;\n      topPortion = viewportHeight - itemTopOffset;\n      bottomPortion = topPortion - height;\n    } else {\n      if (orientation == 'vertical') continue;\n    }\n\n    if (itemLeftOffset < 0 && itemRightOffset > 0) {\n      if (orientation == 'horizontal') isVisible = true;\n      rightPortion = itemRightOffset;\n      leftPortion = rightPortion - width;\n    } else if (itemLeftOffset >= 0 && itemRightOffset < viewportWidth) {\n      if (orientation == 'horizontal') isVisible = true;\n      leftPortion = width;\n      rightPortion = 0;\n    } else if (itemLeftOffset > 0 && itemLeftOffset - viewportWidth < 0) {\n      if (orientation == 'horizontal') isVisible = true;\n      leftPortion = viewportWidth - itemLeftOffset;\n      rightPortion = leftPortion - width;\n    } else {\n      if (orientation == 'horizontal') continue;\n    }\n\n    var verticalRatio = topPortion > 0 ? topPortion / height : bottomPortion / height,\n        horizontalRatio = leftPortion > 0 ? leftPortion / width : rightPortion / height;\n    var itemData = {\n      index: index,\n      isVisible: isVisible,\n      top: top_1,\n      right: right,\n      bottom: bottom,\n      left: left,\n      width: width,\n      height: height,\n      itemTopOffset: itemTopOffset,\n      itemBottomOffset: itemBottomOffset,\n      topPortion: topPortion,\n      bottomPortion: bottomPortion,\n      itemLeftOffset: itemLeftOffset,\n      itemRightOffset: itemRightOffset,\n      leftPortion: leftPortion,\n      rightPortion: rightPortion,\n      verticalRatio: verticalRatio,\n      horizontalRatio: horizontalRatio\n    };\n    list.push(itemData);\n  }\n\n  return list;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/cradle/servicehandler.tsx\n");

/***/ }),

/***/ "./src/cradle/statehandler.tsx":
/*!*************************************!*\
  !*** ./src/cradle/statehandler.tsx ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval(" // statehandler.tsx\n// copyright (c) 2021 Henrik Bechmann, Toronto, Licence: MIT\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\nvar StateHandler =\n/** @class */\nfunction () {\n  function StateHandler(cradleParameters) {\n    this.cradleParameters = cradleParameters;\n    var internalProperties = cradleParameters.cradleInternalPropertiesRef.current;\n    this.setCradleState = internalProperties.setCradleState;\n    this.cradleStateRef = internalProperties.cradleStateRef;\n    this.isMountedRef = internalProperties.isMountedRef;\n  }\n\n  return StateHandler;\n}();\n\nexports[\"default\"] = StateHandler;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY3JhZGxlL3N0YXRlaGFuZGxlci50c3guanMiLCJtYXBwaW5ncyI6IkNBQUE7QUFDQTs7Ozs7O0FBRUE7QUFBQTtBQUFBO0VBRUksc0JBQVlBLGdCQUFaLEVBQTRCO0lBRXpCLEtBQUtBLGdCQUFMLEdBQXdCQSxnQkFBeEI7SUFFQSxJQUFNQyxrQkFBa0IsR0FBR0QsZ0JBQWdCLENBQUNFLDJCQUFqQixDQUE2Q0MsT0FBeEU7SUFFQSxLQUFLQyxjQUFMLEdBQXNCSCxrQkFBa0IsQ0FBQ0csY0FBekM7SUFDQSxLQUFLQyxjQUFMLEdBQXNCSixrQkFBa0IsQ0FBQ0ksY0FBekM7SUFDQSxLQUFLQyxZQUFMLEdBQW9CTCxrQkFBa0IsQ0FBQ0ssWUFBdkM7RUFFRjs7RUFRTDtBQUFDLENBcEJEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtaW5maW5pdGUtZ3JpZC1zY3JvbGxlci8uL3NyYy9jcmFkbGUvc3RhdGVoYW5kbGVyLnRzeD82Mzk1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHN0YXRlaGFuZGxlci50c3hcbi8vIGNvcHlyaWdodCAoYykgMjAyMSBIZW5yaWsgQmVjaG1hbm4sIFRvcm9udG8sIExpY2VuY2U6IE1JVFxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTdGF0ZUhhbmRsZXIge1xuXG4gICAgY29uc3RydWN0b3IoY3JhZGxlUGFyYW1ldGVycykge1xuXG4gICAgICAgdGhpcy5jcmFkbGVQYXJhbWV0ZXJzID0gY3JhZGxlUGFyYW1ldGVyc1xuXG4gICAgICAgY29uc3QgaW50ZXJuYWxQcm9wZXJ0aWVzID0gY3JhZGxlUGFyYW1ldGVycy5jcmFkbGVJbnRlcm5hbFByb3BlcnRpZXNSZWYuY3VycmVudFxuXG4gICAgICAgdGhpcy5zZXRDcmFkbGVTdGF0ZSA9IGludGVybmFsUHJvcGVydGllcy5zZXRDcmFkbGVTdGF0ZVxuICAgICAgIHRoaXMuY3JhZGxlU3RhdGVSZWYgPSBpbnRlcm5hbFByb3BlcnRpZXMuY3JhZGxlU3RhdGVSZWZcbiAgICAgICB0aGlzLmlzTW91bnRlZFJlZiA9IGludGVybmFsUHJvcGVydGllcy5pc01vdW50ZWRSZWZcbiAgICAgICBcbiAgICB9XG5cbiAgICBwcml2YXRlIGNyYWRsZVBhcmFtZXRlcnNcblxuICAgIHB1YmxpYyBjcmFkbGVTdGF0ZVJlZlxuICAgIHB1YmxpYyBzZXRDcmFkbGVTdGF0ZVxuICAgIHB1YmxpYyBpc01vdW50ZWRSZWZcblxufVxuIl0sIm5hbWVzIjpbImNyYWRsZVBhcmFtZXRlcnMiLCJpbnRlcm5hbFByb3BlcnRpZXMiLCJjcmFkbGVJbnRlcm5hbFByb3BlcnRpZXNSZWYiLCJjdXJyZW50Iiwic2V0Q3JhZGxlU3RhdGUiLCJjcmFkbGVTdGF0ZVJlZiIsImlzTW91bnRlZFJlZiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/cradle/statehandler.tsx\n");

/***/ }),

/***/ "./src/cradle/styleshandler.tsx":
/*!**************************************!*\
  !*** ./src/cradle/styleshandler.tsx ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval(" // styleshandler.tsx\n// copyright (c) 2021 Henrik Bechmann, Toronto, Licence: MIT\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\nvar StylesHandler =\n/** @class */\nfunction () {\n  function StylesHandler(cradleParameters) {\n    var _this = this;\n\n    this.setCradleStyles = function (_a) {\n      var orientation = _a.orientation,\n          cellHeight = _a.cellHeight,\n          cellWidth = _a.cellWidth,\n          gap = _a.gap,\n          padding = _a.padding,\n          crosscount = _a.crosscount,\n          viewportheight = _a.viewportheight,\n          viewportwidth = _a.viewportwidth,\n          userstyles = _a.userstyles,\n          triggerlineOffset = _a.triggerlineOffset; // TODO: change 'cradle' to 'head' and 'tail' for more granularity\n      // TODO: triggerline offset for head styles experimentally set to negative\n      //    to assure a brealline is always available for notification\n\n      var headstyles = _this.getHeadStyles(gap, padding, orientation, userstyles.cradle);\n\n      var tailstyles = _this.getTailStyles(gap, padding, orientation, userstyles.cradle);\n\n      var axisstyles = _this.getAxisStyles(gap, padding, orientation, userstyles.axis);\n\n      var triggerlineheadstyles = _this.getTriggerlineHeadStyles(orientation, cellHeight, cellWidth, triggerlineOffset, gap);\n\n      var triggerlinetailstyles = _this.getTriggerlineTailStyles(orientation, cellHeight, cellWidth, triggerlineOffset, gap);\n\n      var cradledividerstyles = {\n        zIndex: 1,\n        position: 'absolute',\n        width: '100%',\n        height: '100%',\n        boxShadow: '0 0 5px 3px red'\n      };\n      headstyles.gridGap = gap + 'px';\n      tailstyles.gridGap = gap + 'px';\n\n      if (orientation == 'horizontal') {\n        headstyles.padding = \"\".concat(padding, \"px 0 \").concat(padding, \"px \").concat(padding, \"px\");\n        headstyles.width = 'auto';\n        headstyles.height = '100%';\n        headstyles.gridAutoFlow = 'column'; // explict crosscount next line as workaround for FF problem - \n        //     sets length of horiz cradle items in one line (row), not multi-row config\n\n        headstyles.gridTemplateRows = cellHeight ? \"repeat(\".concat(crosscount, \", minmax(\").concat(cellHeight, \"px, 1fr))\") : 'auto';\n        headstyles.gridTemplateColumns = 'none';\n        tailstyles.padding = \"\".concat(padding, \"px \").concat(padding, \"px \").concat(padding, \"px 0\");\n        tailstyles.width = 'auto';\n        tailstyles.height = '100%';\n        tailstyles.gridAutoFlow = 'column'; // explict crosscount next line as workaround for FF problem - \n        //     sets length of horiz cradle items in one line (row), not multi-row config\n\n        tailstyles.gridTemplateRows = cellHeight ? \"repeat(\".concat(crosscount, \", minmax(\").concat(cellHeight, \"px, 1fr))\") : 'auto';\n        tailstyles.gridTemplateColumns = 'none';\n      } else if (orientation == 'vertical') {\n        headstyles.padding = \"\".concat(padding, \"px \").concat(padding, \"px 0 \").concat(padding, \"px\");\n        headstyles.width = '100%';\n        headstyles.height = 'auto';\n        headstyles.gridAutoFlow = 'row';\n        headstyles.gridTemplateRows = 'none';\n        headstyles.gridTemplateColumns = cellWidth ? \"repeat(auto-fit, minmax(\".concat(cellWidth, \"px, 1fr))\") : 'auto';\n        tailstyles.padding = \"0 \".concat(padding, \"px \").concat(padding, \"px \").concat(padding, \"px\");\n        tailstyles.width = '100%';\n        tailstyles.height = 'auto';\n        tailstyles.gridAutoFlow = 'row';\n        tailstyles.gridTemplateRows = 'none';\n        tailstyles.gridTemplateColumns = cellWidth ? \"repeat(auto-fit, minmax(\".concat(cellWidth, \"px, 1fr))\") : 'auto';\n      }\n\n      return [headstyles, tailstyles, axisstyles, triggerlineheadstyles, triggerlinetailstyles, cradledividerstyles];\n    };\n\n    this.getHeadStyles = function (gap, padding, orientation, userheadstyles) {\n      var bottom, left, top, right;\n\n      if (orientation == 'vertical') {\n        bottom = 0;\n        left = 0;\n        right = 0;\n        top = 'auto';\n      } else {\n        bottom = 0;\n        left = 'auto';\n        right = 0;\n        top = 0;\n      }\n\n      return __assign(__assign({}, {\n        position: 'absolute',\n        backgroundColor: 'blue',\n        display: 'grid',\n        gridGap: gap + 'px',\n        padding: padding + 'px',\n        justifyContent: 'start',\n        alignContent: 'start',\n        boxSizing: 'border-box',\n        bottom: bottom,\n        left: left,\n        right: right,\n        top: top\n      }), userheadstyles);\n    };\n\n    this.getTailStyles = function (gap, padding, orientation, usertailstyles) {\n      var bottom, left, top, right;\n\n      if (orientation == 'vertical') {\n        bottom = 'auto';\n        left = 0;\n        right = 0;\n        top = 0;\n      } else {\n        bottom = 0;\n        left = 0;\n        right = 'auto';\n        top = 0;\n      }\n\n      return __assign(__assign({}, {\n        position: 'absolute',\n        backgroundColor: 'blue',\n        display: 'grid',\n        gridGap: gap + 'px',\n        padding: padding + 'px',\n        justifyContent: 'start',\n        alignContent: 'start',\n        boxSizing: 'border-box',\n        top: top,\n        left: left,\n        right: right,\n        bottom: bottom\n      }), usertailstyles);\n    };\n\n    this.getAxisStyles = function (gap, padding, orientation, useraxisstyles) {\n      var top, left, width, height; // for axis\n\n      if (orientation == 'vertical') {\n        top = padding + 'px';\n        left = 'auto';\n        width = '100%';\n        height = 'auto';\n      } else {\n        top = 'auto';\n        left = padding + 'px';\n        width = 0;\n        height = '100%';\n      }\n\n      return __assign(__assign({}, {\n        position: 'relative',\n        top: top,\n        left: left,\n        width: width,\n        height: height\n      }), useraxisstyles);\n    };\n\n    this.getTriggerlineTailStyles = function (orientation, cellHeight, cellWidth, triggerlineOffset, gap) {\n      var transform; // for position relative to axis\n\n      var position = 'absolute',\n          // backgroundColor = 'blue',\n      width = '100%',\n          height = '100%';\n\n      if (orientation == 'horizontal') {\n        // width = '5px'\n        // height = '100%'\n        transform = \"translateX(\".concat(triggerlineOffset + 'px', \")\");\n      } else {\n        // width = '100%'\n        // height = '5px'\n        transform = \"translateY(\".concat(triggerlineOffset + 'px', \")\");\n      }\n\n      return __assign({}, {\n        position: position,\n        width: width,\n        height: height,\n        transform: transform // backgroundColor\n\n      });\n    };\n\n    this.getTriggerlineHeadStyles = function (orientation, cellHeight, cellWidth, triggerlineOffset, gap) {\n      var transform; // for position relative to axis\n\n      var position = 'absolute',\n          // backgroundColor = 'blue',\n      width = '100%',\n          height = '100%';\n\n      if (orientation == 'horizontal') {\n        // width = '5px'\n        // height = '100%'\n        transform = \"translateX(\".concat(-(cellWidth + gap - triggerlineOffset) + 'px', \")\");\n      } else {\n        // width = '100%'\n        // height = '5px'\n        transform = \"translateY(\".concat(-(cellHeight + gap - triggerlineOffset) + 'px', \")\");\n      }\n\n      return __assign({}, {\n        position: position,\n        width: width,\n        height: height,\n        transform: transform // backgroundColor,\n\n      });\n    };\n\n    this.cradleParameters = cradleParameters;\n  }\n\n  return StylesHandler;\n}();\n\nexports[\"default\"] = StylesHandler;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/cradle/styleshandler.tsx\n");

/***/ }),

/***/ "./src/infinitegridscroller.tsx":
/*!**************************************!*\
  !*** ./src/infinitegridscroller.tsx ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("// infinitegridscroller.tsx\n// copyright (c) 2019-2022 Henrik Bechmann, Toronto, Licence: MIT\n\n/*\n    ROADMAP:\n        setCradleContent draws from cache\n        suspense analog\n        review all code\n        modes: uniform, variable, dynamic\n        insert, remove, swap functions\n        test changing all gridscroller parameters\n\n    BUGS:\n\n    TODO:\n        reload from/to for insertions and substitutions\n        provide user with isReparenting flag to be able to reset scroll\n        check use of useCallback\n        resize triggered by root only, unless variable\n        intersection applied to cradle only\n        test for two root portals\n        promote system constants to 'advanced' parameter, eg RESIZE_TIMEOUT_FOR_ONAFTERSRESIZE\n        calc minwidth by form factor\n        review scroller-frame for appropriate dimensions - s/b inset:0;position:absolute\n        add grid-template-rows: max-content to parent for safari issue grid-auto-flow: column not filling column\n*/\n\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\nvar react_1 = __importStar(__webpack_require__(/*! react */ \"react\"));\n\nvar viewport_1 = __importDefault(__webpack_require__(/*! ./viewport */ \"./src/viewport.tsx\"));\n\nvar scrollblock_1 = __importDefault(__webpack_require__(/*! ./scrollblock */ \"./src/scrollblock.tsx\"));\n\nvar cradle_1 = __importDefault(__webpack_require__(/*! ./cradle */ \"./src/cradle.tsx\")); // -------------------[ global session ID generator ]----------------\n\n\nvar globalScrollerID = 0;\n\nvar getSessionID = function getSessionID() {\n  return globalScrollerID++;\n}; // ===================================[ INITIALIZE ]===========================\n\n/*\n    The job of InfiniteGridScroller is to pass parameters to dependents.\n    Viewport contains the scrollblock, fullsize for adjusted cell height/width, which in turn contains the cradle\n        - a component that contains CellShells (which contain displayed items or transitional placeholders).\n    The CellShells are skeletons which contain the host content components.\n\n    Host content is created in a portal cache (via PortalAgent) and then portal'd to its host CellShell\n\n    Scrollblock virtually represents the entirety of the list, and is the scroller\n\n    Cradle contains the list items, and is 'virtualized' -- it appears as\n      though it is the full scrollblock, but in fact it is only slightly larger than\n      the viewport.\n    - individual items are framed by CellShell, managed by Cradle\n\n    Overall the infinitegridscroller manages the (often asynchronous) interactions of the\n    components of the mechanism\n*/\n\n\nvar InfiniteGridScroller = function InfiniteGridScroller(props) {\n  // ------------------[ normalize properties ]--------------------\n  // const props = Object.assign({},args) // args should be immutable\n  var orientation = props.orientation,\n      // vertical or horizontal\n  gap = props.gap,\n      // space between grid cells, not including the leading and trailing edges\n  padding = props.padding,\n      // the space between the items and the viewport, applied to the cradle\n  cellHeight = props.cellHeight,\n      // the outer pixel height - literal for vertical; approximate for horizontal\n  cellWidth = props.cellWidth,\n      // the outer pixel width - literal for horizontal; approximate for vertical\n  layout = props.layout,\n      // uniform, variable (doesn't use axis), dynamic (uses axis)\n  dense = props.dense,\n      // boolean (only with preload)\n  runwaySize = props.runwaySize,\n      // the number of items outside the view of each side of the viewport \n  // -- gives time to assemble before display\n  listSize = props.listSize,\n      // the exact number of the size of the virtual list; will eventually be changable.\n  defaultVisibleIndex = props.indexOffset,\n      // the 0-based starting index of the list, when first loaded\n  getItem = props.getItem,\n      // function provided by host - parameter is index number, set by system; return value is \n  // host-selected component or promise of a component\n  functions = props.functions,\n      // properties to get direct access to some component utilites, optional\n  placeholder = props.placeholder,\n      // a sparse component to stand in for content until the content arrives; \n  // optional, replaces default placeholder\n  styles = props.styles,\n      // passive style over-rides (eg. color, opacity); has \n  // properties viewport, scrollblock, cradle, or scrolltracker\n  // to come...\n  // cache = \"preload\" or \"keepload\" or \"none\"\n  // advanced, technical settings like useRequestIdleCallback, and RequestIdleCallbackTimeout\n  scrollerName = props.scrollerName,\n      // for debugging\n  triggerlineOffset = props.triggerlineOffset,\n      indexOffset = props.indexOffset;\n  var gridSpecs = {\n    orientation: orientation,\n    gap: gap,\n    padding: padding,\n    cellHeight: cellHeight,\n    cellWidth: cellWidth,\n    layout: layout,\n    dense: dense\n  }; // set defaults\n\n  functions !== null && functions !== void 0 ? functions : functions = {};\n  styles !== null && styles !== void 0 ? styles : styles = {};\n  gap !== null && gap !== void 0 ? gap : gap = 0;\n  padding !== null && padding !== void 0 ? padding : padding = 0;\n  runwaySize !== null && runwaySize !== void 0 ? runwaySize : runwaySize = 3;\n  runwaySize = Math.max(0, runwaySize);\n  indexOffset !== null && indexOffset !== void 0 ? indexOffset : indexOffset = 0;\n  listSize !== null && listSize !== void 0 ? listSize : listSize = 0;\n  listSize = Math.max(0, listSize);\n  layout !== null && layout !== void 0 ? layout : layout = 'uniform'; // constraints\n\n  indexOffset = Math.max(0, indexOffset); // non-negative\n\n  indexOffset = Math.min(listSize - 1, indexOffset); // not larger than list\n\n  if (!['horizontal', 'vertical'].includes(orientation)) {\n    orientation = 'vertical';\n  } // TODO: rationalize with cellHeight & cellWidth; must be less than half\n\n\n  triggerlineOffset !== null && triggerlineOffset !== void 0 ? triggerlineOffset : triggerlineOffset = 10;\n  var gridSpecsRef = (0, react_1.useRef)(gridSpecs);\n  var stylesRef = (0, react_1.useRef)(styles);\n  var functionsRef = (0, react_1.useRef)(functions); // satisfy React Object.is for attributes\n\n  if (!compareProps(gridSpecs, gridSpecsRef.current)) {\n    gridSpecsRef.current = gridSpecs;\n  }\n\n  if (!compareProps(styles, stylesRef.current)) {\n    stylesRef.current = styles;\n  }\n\n  if (!compareProps(functions, functionsRef.current)) {\n    functionsRef.current = functions;\n  } // for mount\n\n\n  var scrollerSessionIDRef = (0, react_1.useRef)(null);\n\n  if (scrollerSessionIDRef.current === null) {\n    scrollerSessionIDRef.current = getSessionID();\n  }\n\n  var scrollerID = scrollerSessionIDRef.current; // --------------------[ render ]---------------------\n\n  return react_1[\"default\"].createElement(react_1[\"default\"].StrictMode, null, react_1[\"default\"].createElement(viewport_1[\"default\"], {\n    gridSpecs: gridSpecsRef.current,\n    styles: stylesRef.current,\n    scrollerID: scrollerID\n  }, react_1[\"default\"].createElement(scrollblock_1[\"default\"], {\n    gridSpecs: gridSpecsRef.current,\n    styles: stylesRef.current,\n    scrollerID: scrollerID,\n    listsize: listSize\n  }, react_1[\"default\"].createElement(cradle_1[\"default\"], {\n    gridSpecs: gridSpecsRef.current,\n    styles: stylesRef.current,\n    scrollerID: scrollerID,\n    scrollerName: scrollerName,\n    listsize: listSize,\n    functions: functionsRef.current,\n    defaultVisibleIndex: defaultVisibleIndex,\n    getItem: getItem,\n    placeholder: placeholder,\n    runwayRowcountSpec: runwaySize,\n    triggerlineOffset: triggerlineOffset\n  }))));\n};\n\nexports[\"default\"] = InfiniteGridScroller; // utilities\n\nfunction compareProps(obj1, obj2) {\n  var keys = Object.keys(obj1);\n  var same;\n\n  for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n    var key = keys_1[_i];\n\n    if (!Object.is(obj1[key], obj2[key])) {\n      return false;\n    }\n  }\n\n  return true;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/infinitegridscroller.tsx\n");

/***/ }),

/***/ "./src/placeholder.tsx":
/*!*****************************!*\
  !*** ./src/placeholder.tsx ***!
  \*****************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(" // placeholder.tsx\n// copyright (c) 2020 Henrik Bechmann, Toronto, Licence: MIT\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\nvar react_1 = __importStar(__webpack_require__(/*! react */ \"react\"));\n\nvar Placeholder = function Placeholder(_a) {\n  var index = _a.index,\n      listsize = _a.listsize,\n      error = _a.error;\n  var stylesRef = (0, react_1.useRef)({\n    position: 'relative',\n    boxSizing: 'border-box',\n    backgroundColor: 'cyan',\n    border: '2px solid black',\n    height: '100%',\n    width: '100%'\n  });\n  var itemStylesRef = (0, react_1.useRef)({\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    padding: '3px',\n    opacity: .5,\n    borderRadius: '8px',\n    backgroundColor: 'white',\n    margin: '3px',\n    fontSize: 'smaller'\n  });\n  return react_1[\"default\"].createElement(\"div\", {\n    style: stylesRef.current\n  }, !error ? react_1[\"default\"].createElement(\"div\", {\n    style: itemStylesRef.current\n  }, index + 1, \"/\", listsize, \" (loading...)\") : react_1[\"default\"].createElement(\"div\", {\n    style: itemStylesRef.current\n  }, \"item is not available at this time\"));\n};\n\nexports[\"default\"] = Placeholder;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGxhY2Vob2xkZXIudHN4LmpzIiwibWFwcGluZ3MiOiJDQUFBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQTs7QUFFQSxJQUFNQSxXQUFXLEdBQUcsU0FBZEEsV0FBYyxDQUFDQyxFQUFELEVBQXlCO01BQXZCQyxLQUFLO01BQUVDLFFBQVE7TUFBRUMsS0FBSztFQUV4QyxJQUFNQyxTQUFTLEdBQUcsb0JBQU87SUFDckJDLFFBQVEsRUFBQyxVQURZO0lBRXJCQyxTQUFTLEVBQUMsWUFGVztJQUdyQkMsZUFBZSxFQUFDLE1BSEs7SUFJckJDLE1BQU0sRUFBQyxpQkFKYztJQUtyQkMsTUFBTSxFQUFDLE1BTGM7SUFNckJDLEtBQUssRUFBQztFQU5lLENBQVAsQ0FBbEI7RUFRQSxJQUFNQyxhQUFhLEdBQUcsb0JBQ2xCO0lBQ0lOLFFBQVEsRUFBQyxVQURiO0lBRUlPLEdBQUcsRUFBQyxDQUZSO0lBR0lDLElBQUksRUFBQyxDQUhUO0lBSUlDLE9BQU8sRUFBQyxLQUpaO0lBS0lDLE9BQU8sRUFBQyxFQUxaO0lBTUlDLFlBQVksRUFBQyxLQU5qQjtJQU9JVCxlQUFlLEVBQUMsT0FQcEI7SUFRSVUsTUFBTSxFQUFDLEtBUlg7SUFTSUMsUUFBUSxFQUFDO0VBVGIsQ0FEa0IsQ0FBdEI7RUFjQSxPQUFPQztJQUFLQyxLQUFLLEVBQUloQixTQUFTLENBQUNpQjtFQUF4QixHQUNELENBQUNsQixLQUFELEdBQ0VnQjtJQUFLQyxLQUFLLEVBQUlULGFBQWEsQ0FBQ1U7RUFBNUIsR0FBc0NwQixLQUFLLEdBQUcsQ0FBOUMsT0FBa0RDLFFBQWxELGtCQURGLEdBRUVpQjtJQUFLQyxLQUFLLEVBQUlULGFBQWEsQ0FBQ1U7RUFBNUIsR0FBbUMsb0NBQW5DLENBSEQsQ0FBUDtBQU9ILENBL0JEOztBQWlDQUMsa0JBQUFBLEdBQWV2QixXQUFmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtaW5maW5pdGUtZ3JpZC1zY3JvbGxlci8uL3NyYy9wbGFjZWhvbGRlci50c3g/MTEzMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwbGFjZWhvbGRlci50c3hcbi8vIGNvcHlyaWdodCAoYykgMjAyMCBIZW5yaWsgQmVjaG1hbm4sIFRvcm9udG8sIExpY2VuY2U6IE1JVFxuXG5pbXBvcnQgUmVhY3QsIHt1c2VSZWYsIHVzZUVmZmVjdCwgdXNlU3RhdGUsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnXG5cbmNvbnN0IFBsYWNlaG9sZGVyID0gKHtpbmRleCwgbGlzdHNpemUsIGVycm9yfSkgPT4ge1xuXG4gICAgY29uc3Qgc3R5bGVzUmVmID0gdXNlUmVmKHtcbiAgICAgICAgcG9zaXRpb246J3JlbGF0aXZlJyxcbiAgICAgICAgYm94U2l6aW5nOidib3JkZXItYm94JyxcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOidjeWFuJyxcbiAgICAgICAgYm9yZGVyOicycHggc29saWQgYmxhY2snLFxuICAgICAgICBoZWlnaHQ6JzEwMCUnLFxuICAgICAgICB3aWR0aDonMTAwJSdcbiAgICB9IGFzIFJlYWN0LkNTU1Byb3BlcnRpZXMpXG4gICAgY29uc3QgaXRlbVN0eWxlc1JlZiA9IHVzZVJlZihcbiAgICAgICAge1xuICAgICAgICAgICAgcG9zaXRpb246J2Fic29sdXRlJyxcbiAgICAgICAgICAgIHRvcDowLFxuICAgICAgICAgICAgbGVmdDowLFxuICAgICAgICAgICAgcGFkZGluZzonM3B4JyxcbiAgICAgICAgICAgIG9wYWNpdHk6LjUsXG4gICAgICAgICAgICBib3JkZXJSYWRpdXM6JzhweCcsXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6J3doaXRlJywgXG4gICAgICAgICAgICBtYXJnaW46JzNweCcsXG4gICAgICAgICAgICBmb250U2l6ZTonc21hbGxlcicsXG4gICAgICAgIH0gYXMgUmVhY3QuQ1NTUHJvcGVydGllc1xuICAgIClcblxuICAgIHJldHVybiA8ZGl2IHN0eWxlID0ge3N0eWxlc1JlZi5jdXJyZW50fT5cbiAgICAgICAgeyAhZXJyb3I/XG4gICAgICAgICAgICA8ZGl2IHN0eWxlID0ge2l0ZW1TdHlsZXNSZWYuY3VycmVudH0+e2luZGV4ICsgMX0ve2xpc3RzaXplfSAobG9hZGluZy4uLik8L2Rpdj46XG4gICAgICAgICAgICA8ZGl2IHN0eWxlID0ge2l0ZW1TdHlsZXNSZWYuY3VycmVudH0+aXRlbSBpcyBub3QgYXZhaWxhYmxlIGF0IHRoaXMgdGltZTwvZGl2PlxuICAgICAgICB9XG4gICAgICAgIFxuICAgIDwvZGl2PlxufVxuXG5leHBvcnQgZGVmYXVsdCBQbGFjZWhvbGRlciJdLCJuYW1lcyI6WyJQbGFjZWhvbGRlciIsIl9hIiwiaW5kZXgiLCJsaXN0c2l6ZSIsImVycm9yIiwic3R5bGVzUmVmIiwicG9zaXRpb24iLCJib3hTaXppbmciLCJiYWNrZ3JvdW5kQ29sb3IiLCJib3JkZXIiLCJoZWlnaHQiLCJ3aWR0aCIsIml0ZW1TdHlsZXNSZWYiLCJ0b3AiLCJsZWZ0IiwicGFkZGluZyIsIm9wYWNpdHkiLCJib3JkZXJSYWRpdXMiLCJtYXJnaW4iLCJmb250U2l6ZSIsInJlYWN0XzEiLCJzdHlsZSIsImN1cnJlbnQiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/placeholder.tsx\n");

/***/ }),

/***/ "./src/scrollblock.tsx":
/*!*****************************!*\
  !*** ./src/scrollblock.tsx ***!
  \*****************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("// scrollblock.tsx\n// copyright (c) 2019-2022 Henrik Bechmann, Toronto, Licence: MIT\n\n/*\n    TODO\n    update length for cradle adjustments based on variable length changes in cell shells.\n\n*/\n\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\nvar react_1 = __importStar(__webpack_require__(/*! react */ \"react\"));\n\nvar viewport_1 = __webpack_require__(/*! ./viewport */ \"./src/viewport.tsx\");\n\nvar Scrollblock = function Scrollblock(_a) {\n  var children = _a.children,\n      listsize = _a.listsize,\n      gridSpecs = _a.gridSpecs,\n      styles = _a.styles,\n      scrollerID = _a.scrollerID;\n  var orientation = gridSpecs.orientation,\n      gap = gridSpecs.gap,\n      padding = gridSpecs.padding,\n      cellHeight = gridSpecs.cellHeight,\n      cellWidth = gridSpecs.cellWidth,\n      layout = gridSpecs.layout,\n      dense = gridSpecs.dense; // -------------------------[ context and state ]-------------------------\n\n  var viewportInterruptProperties = (0, react_1.useContext)(viewport_1.ViewportInterrupt); // -----------------------------------[ data heap ]-------------------------\n\n  var baseScrollBlockLengthRef = (0, react_1.useRef)(null); // const scrollblockRef = useRef(null)\n\n  var divlinerstyleRef = (0, react_1.useRef)(Object.assign({\n    backgroundColor: 'white',\n    position: 'relative'\n  }, styles.cradle));\n\n  var _b = (0, react_1.useState)(divlinerstyleRef.current),\n      divlinerstyle = _b[0],\n      saveDivlinerstyle = _b[1]; // to trigger render\n\n\n  var _c = viewportInterruptProperties.viewportDimensions,\n      width = _c.width,\n      height = _c.height;\n  (0, react_1.useLayoutEffect)(function () {\n    updateBaseBlockLength();\n    divlinerstyleRef.current = updateScrollblockStyles(orientation, divlinerstyleRef, baseScrollBlockLengthRef);\n    saveDivlinerstyle(divlinerstyleRef.current);\n  }, [orientation, height, width, listsize, cellHeight, cellWidth, gap, padding]);\n  var updateBaseBlockLength = (0, react_1.useCallback)(function () {\n    var basescrollblocklength = calcBaseScrollblockLength({\n      orientation: orientation,\n      viewportheight: height,\n      viewportwidth: width,\n      listsize: listsize,\n      cellHeight: cellHeight,\n      cellWidth: cellWidth,\n      gap: gap,\n      padding: padding\n    });\n    baseScrollBlockLengthRef.current = basescrollblocklength;\n  }, [orientation, height, width, listsize, cellHeight, cellWidth, gap, padding]);\n  return react_1[\"default\"].createElement(\"div\", {\n    \"data-type\": 'scrollblock',\n    style: divlinerstyleRef.current\n  }, children);\n}; // Scrollblock\n// all the parameters can affect the length\n\n\nvar calcBaseScrollblockLength = function calcBaseScrollblockLength(_a) {\n  var orientation = _a.orientation,\n      viewportheight = _a.viewportheight,\n      viewportwidth = _a.viewportwidth,\n      listsize = _a.listsize,\n      cellHeight = _a.cellHeight,\n      cellWidth = _a.cellWidth,\n      gap = _a.gap,\n      padding = _a.padding; // dependents of orientation\n\n  var crosslength;\n  var cellLength;\n  var viewportcrosslength;\n\n  if (orientation == 'vertical') {\n    crosslength = cellWidth + gap;\n    cellLength = cellHeight + gap;\n    viewportcrosslength = viewportwidth;\n  } else {\n    // 'horizontal'\n    crosslength = cellHeight + gap;\n    cellLength = cellWidth + gap;\n    viewportcrosslength = viewportheight;\n  } // adjustments to viewportcrosslength\n\n\n  viewportcrosslength -= padding * 2;\n  viewportcrosslength += gap;\n  if (viewportcrosslength < crosslength) viewportcrosslength = crosslength; // must be at least one\n\n  var crosscount = Math.floor(viewportcrosslength / crosslength);\n  var listlength = Math.ceil(listsize / crosscount);\n  var straightlength = listlength * cellLength - (listlength > 0 ? gap : 0) + padding * 2;\n  return straightlength;\n};\n\nvar updateScrollblockStyles = function updateScrollblockStyles(orientation, stylesRef, baseScrollblocklengthRef) {\n  var localstyles = Object.assign({}, stylesRef.current);\n  var height;\n  var width;\n\n  if (orientation == 'horizontal') {\n    height = '100%';\n    width = baseScrollblocklengthRef.current + 'px';\n  } else if (orientation == 'vertical') {\n    height = baseScrollblocklengthRef.current + 'px';\n    width = '100%';\n  }\n\n  localstyles.height = height;\n  localstyles.width = width;\n  return localstyles;\n};\n\nexports[\"default\"] = Scrollblock;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scrollblock.tsx\n");

/***/ }),

/***/ "./src/scrolltracker.tsx":
/*!*******************************!*\
  !*** ./src/scrolltracker.tsx ***!
  \*******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(" // scrolltracker.tsx\n// copyright (c) 2020 Henrik Bechmann, Toronto, Licence: MIT\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\nvar react_1 = __importStar(__webpack_require__(/*! react */ \"react\"));\n\nvar ScrollTracker = function ScrollTracker(_a) {\n  var top = _a.top,\n      left = _a.left,\n      offset = _a.offset,\n      listsize = _a.listsize,\n      styles = _a.styles;\n  var trackdata = \"\".concat(offset + 1, \"/\").concat(listsize);\n  var styleRef = (0, react_1.useRef)(Object.assign({\n    top: top + 'px',\n    left: left + 'px',\n    position: 'fixed',\n    zIndex: 3,\n    backgroundColor: 'white',\n    border: '1px solid gray',\n    borderRadius: '10px',\n    fontSize: 'smaller',\n    padding: '3px'\n  }, styles.scrolltracker));\n  return react_1[\"default\"].createElement(\"div\", {\n    \"data-name\": 'scrolltracker',\n    style: styleRef.current\n  }, trackdata);\n};\n\nexports[\"default\"] = ScrollTracker;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2Nyb2xsdHJhY2tlci50c3guanMiLCJtYXBwaW5ncyI6IkNBQUE7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBOztBQUVBLElBQU1BLGFBQWEsR0FBRyxTQUFoQkEsYUFBZ0IsQ0FBQ0MsRUFBRCxFQUF3QztNQUFyQ0MsR0FBRztNQUFFQyxJQUFJO01BQUVDLE1BQU07TUFBRUMsUUFBUTtNQUFFQyxNQUFNO0VBRXhELElBQUlDLFNBQVMsR0FBRyxVQUFHSCxNQUFNLEdBQUcsQ0FBWixFQUFhLEdBQWIsRUFBYUksTUFBYixDQUFpQkgsUUFBakIsQ0FBaEI7RUFFQSxJQUFJSSxRQUFRLEdBQUcsb0JBQU9DLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjO0lBQ2hDVCxHQUFHLEVBQUVBLEdBQUcsR0FBRyxJQURxQjtJQUVoQ0MsSUFBSSxFQUFFQSxJQUFJLEdBQUcsSUFGbUI7SUFHaENTLFFBQVEsRUFBQyxPQUh1QjtJQUloQ0MsTUFBTSxFQUFDLENBSnlCO0lBS2hDQyxlQUFlLEVBQUMsT0FMZ0I7SUFNaENDLE1BQU0sRUFBRSxnQkFOd0I7SUFPaENDLFlBQVksRUFBQyxNQVBtQjtJQVFoQ0MsUUFBUSxFQUFDLFNBUnVCO0lBU2hDQyxPQUFPLEVBQUM7RUFUd0IsQ0FBZCxFQVVHWixNQUFNLENBQUNhLGFBVlYsQ0FBUCxDQUFmO0VBWUEsT0FBT0M7SUFBQSxhQUFpQixlQUFqQjtJQUFpQ0MsS0FBSyxFQUFJWixRQUFRLENBQUNhO0VBQW5ELEdBQThEZixTQUE5RCxDQUFQO0FBQ0gsQ0FqQkQ7O0FBbUJBZ0Isa0JBQUFBLEdBQWV2QixhQUFmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtaW5maW5pdGUtZ3JpZC1zY3JvbGxlci8uL3NyYy9zY3JvbGx0cmFja2VyLnRzeD9mZjgxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNjcm9sbHRyYWNrZXIudHN4XG4vLyBjb3B5cmlnaHQgKGMpIDIwMjAgSGVucmlrIEJlY2htYW5uLCBUb3JvbnRvLCBMaWNlbmNlOiBNSVRcblxuaW1wb3J0IFJlYWN0LCB7dXNlUmVmfSBmcm9tICdyZWFjdCdcblxuY29uc3QgU2Nyb2xsVHJhY2tlciA9ICh7IHRvcCwgbGVmdCwgb2Zmc2V0LCBsaXN0c2l6ZSwgc3R5bGVzIH0pID0+IHtcblxuICAgIGxldCB0cmFja2RhdGEgPSBgJHtvZmZzZXQgKyAxfS8ke2xpc3RzaXplfWBcblxuICAgIGxldCBzdHlsZVJlZiA9IHVzZVJlZihPYmplY3QuYXNzaWduKHtcbiAgICAgICAgdG9wOiB0b3AgKyAncHgnLFxuICAgICAgICBsZWZ0OiBsZWZ0ICsgJ3B4JyxcbiAgICAgICAgcG9zaXRpb246J2ZpeGVkJyxcbiAgICAgICAgekluZGV4OjMsXG4gICAgICAgIGJhY2tncm91bmRDb2xvcjond2hpdGUnLFxuICAgICAgICBib3JkZXI6ICcxcHggc29saWQgZ3JheScsXG4gICAgICAgIGJvcmRlclJhZGl1czonMTBweCcsXG4gICAgICAgIGZvbnRTaXplOidzbWFsbGVyJyxcbiAgICAgICAgcGFkZGluZzonM3B4J1xuICAgIH0gYXMgUmVhY3QuQ1NTUHJvcGVydGllcyxzdHlsZXMuc2Nyb2xsdHJhY2tlcikpXG5cbiAgICByZXR1cm4gPGRpdiBkYXRhLW5hbWUgPSAnc2Nyb2xsdHJhY2tlcicgc3R5bGUgPSB7c3R5bGVSZWYuY3VycmVudH0gPnt0cmFja2RhdGF9PC9kaXY+XG59XG5cbmV4cG9ydCBkZWZhdWx0IFNjcm9sbFRyYWNrZXIiXSwibmFtZXMiOlsiU2Nyb2xsVHJhY2tlciIsIl9hIiwidG9wIiwibGVmdCIsIm9mZnNldCIsImxpc3RzaXplIiwic3R5bGVzIiwidHJhY2tkYXRhIiwiY29uY2F0Iiwic3R5bGVSZWYiLCJPYmplY3QiLCJhc3NpZ24iLCJwb3NpdGlvbiIsInpJbmRleCIsImJhY2tncm91bmRDb2xvciIsImJvcmRlciIsImJvcmRlclJhZGl1cyIsImZvbnRTaXplIiwicGFkZGluZyIsInNjcm9sbHRyYWNrZXIiLCJyZWFjdF8xIiwic3R5bGUiLCJjdXJyZW50IiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scrolltracker.tsx\n");

/***/ }),

/***/ "./src/viewport.tsx":
/*!**************************!*\
  !*** ./src/viewport.tsx ***!
  \**************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("// viewport.tsx\n// copyright (c) 2019-2022 Henrik Bechmann, Toronto, Licence: MIT\n\n/*\n    The role of viewport is to provide data to its children (scrollblock and cradle),\n    and act as the visible screen portal of the list being shown\n*/\n\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.ViewportInterrupt = void 0;\n\nvar react_1 = __importStar(__webpack_require__(/*! react */ \"react\"));\n\nexports.ViewportInterrupt = react_1[\"default\"].createContext(null); // for children\n\nvar resize_observer_1 = __webpack_require__(/*! @juggle/resize-observer */ \"./node_modules/@juggle/resize-observer/lib/exports/resize-observer.js\");\n\nvar cradle_1 = __webpack_require__(/*! ./cradle */ \"./src/cradle.tsx\");\n\nvar ResizeObserver = window['ResizeObserver'] || resize_observer_1.ResizeObserver; // control constant\n\nvar RESIZE_TIMEOUT_FOR_ONAFTERSRESIZE = 250;\n\nvar Viewport = function Viewport(_a) {\n  // -----------------------[ initialize ]------------------\n  var children = _a.children,\n      gridSpecs = _a.gridSpecs,\n      styles = _a.styles,\n      scrollerID = _a.scrollerID;\n  var orientation = gridSpecs.orientation,\n      gap = gridSpecs.gap,\n      padding = gridSpecs.padding,\n      cellHeight = gridSpecs.cellHeight,\n      cellWidth = gridSpecs.cellWidth,\n      layout = gridSpecs.layout,\n      dense = gridSpecs.dense;\n\n  var _b = (0, react_1.useState)('setup'),\n      viewportState = _b[0],\n      setViewportState = _b[1]; // setup, resizing, resized, render\n\n\n  var viewportStateRef = (0, react_1.useRef)(null); // for useCallback -> resizeCallback scope\n\n  viewportStateRef.current = viewportState; // this is only set if viewport is a child of an infiniteScroller\n\n  var parentPortalHandler = (0, react_1.useContext)(cradle_1.CradlePortalsContext);\n  var isMountedRef = (0, react_1.useRef)(true); // monitor for unmounted\n\n  (0, react_1.useEffect)(function () {\n    // unmount\n    return function () {\n      isMountedRef.current = false;\n    };\n  }, []);\n  var viewportdivRef = (0, react_1.useRef)(null); // viewportInterruptPropertiesRef is passed as a resizing interrupt (through context) to children\n  // initialize\n\n  var viewportInterruptPropertiesRef = (0, react_1.useRef)({\n    portal: null,\n    isResizing: false,\n    index: null,\n    viewportDimensions: null,\n    elementref: null\n  }); // --------------------[ resizer setup ]-----------------------\n\n  var resizeTimeridRef = (0, react_1.useRef)(null);\n  var isResizingRef = (0, react_1.useRef)(false);\n  var resizeObserverRef = (0, react_1.useRef)(null); // set up resizeObserver\n\n  (0, react_1.useEffect)(function () {\n    // initialize\n    resizeObserverRef.current = new ResizeObserver(resizeCallback);\n    resizeObserverRef.current.observe(viewportdivRef.current); // unmount\n\n    return function () {\n      resizeObserverRef.current.disconnect();\n    };\n  }, []); // used by resizeObserver; generates interrupt\n\n  var resizeCallback = (0, react_1.useCallback)(function (entries) {\n    if (viewportStateRef.current == 'setup') {\n      return;\n    }\n\n    var target = entries[0].target; // first register shouldn't generate interrupt\n\n    if (!target.dataset.initialized) {\n      target.dataset.initialized = true;\n      return;\n    } // generate interrupt response, if initiating resize\n\n\n    if (!isResizingRef.current) {\n      viewportInterruptPropertiesRef.current.isResizing = isResizingRef.current = true; // new object creation triggers a realtime interrupt message to cradle through context\n\n      viewportInterruptPropertiesRef.current = Object.assign({}, viewportInterruptPropertiesRef.current);\n      if (isMountedRef.current) setViewportState('resizing');\n    }\n\n    clearTimeout(resizeTimeridRef.current);\n    resizeTimeridRef.current = setTimeout(function () {\n      isResizingRef.current = false;\n\n      if (isMountedRef.current) {\n        setViewportState('resized');\n      }\n    }, RESIZE_TIMEOUT_FOR_ONAFTERSRESIZE);\n  }, []); // -------------------[ set portal for non-root viewports ]-------------\n  // sets portal in viewportInterruptPropertiesRef\n\n  (0, react_1.useEffect)(function () {\n    if (!parentPortalHandler) return; // root viewport; has no portal\n\n    var portalindex;\n    var element = viewportdivRef.current;\n\n    while (element) {\n      if (element.dataset && element.dataset.type == 'portalcontainer') {\n        // set portal & exit\n        portalindex = parseInt(element.dataset.index);\n        viewportInterruptPropertiesRef.current.portal = parentPortalHandler.getPortal(portalindex);\n        viewportInterruptPropertiesRef.current.index = portalindex;\n        break;\n      } else {\n        element = element.parentElement;\n      }\n    }\n\n    if (!element) {\n      console.log('ERROR: parent portalcontainer not found');\n      return;\n    }\n  }, []); // ----------------------------------[ calculate config values ]--------------------------------\n\n  var divlinerstyleRef = (0, react_1.useRef)(null); // initialize with inherited styles\n\n  divlinerstyleRef.current = (0, react_1.useMemo)(function () {\n    return Object.assign({\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      overflow: 'auto',\n      backgroundColor: 'red'\n    }, styles.viewport);\n  }, [styles.viewport]); // update with config values\n\n  divlinerstyleRef.current = (0, react_1.useMemo)(function () {\n    // TODO: gap\n    var mincrosslength = calcMinViewportCrossLength(orientation, cellWidth, cellHeight, gap, padding);\n    var styles = Object.assign({}, divlinerstyleRef.current); // avoid readonly\n\n    if (orientation == 'vertical') {\n      styles.minWidth = mincrosslength + 'px';\n      styles.minHeight = 'auto';\n    } else {\n      styles.minWidth = 'auto';\n      styles.minHeight = mincrosslength + 'px';\n    }\n\n    return styles;\n  }, [orientation, cellWidth, cellHeight, gap, padding]); // update viewportInterruptPropertiesRef; add viewport dimensions\n\n  viewportInterruptPropertiesRef.current = (0, react_1.useMemo)(function () {\n    if (viewportState == 'setup') return viewportInterruptPropertiesRef.current;\n\n    var _a = viewportdivRef.current.getBoundingClientRect(),\n        top = _a.top,\n        right = _a.right,\n        bottom = _a.bottom,\n        left = _a.left;\n\n    var width = right - left;\n    var height = bottom - top; // TODO this is a duplicate setting procedure with interrupthandler.tsx cradleIntersectionObserverCallback\n\n    var localViewportData = {\n      viewportDimensions: {\n        top: top,\n        right: right,\n        bottom: bottom,\n        left: left,\n        width: width,\n        height: height\n      },\n      elementref: viewportdivRef,\n      isResizing: isResizingRef.current\n    }; // trigger context change with new object\n\n    var viewportdataobject = Object.assign({}, viewportInterruptPropertiesRef.current, localViewportData);\n    return viewportdataobject;\n  }, [orientation, isResizingRef.current, viewportState]); // --------------------[ state processing ]---------------------------\n\n  (0, react_1.useLayoutEffect)(function () {\n    switch (viewportState) {\n      case 'resized':\n      case 'setup':\n        {\n          setViewportState('render');\n          break;\n        }\n    }\n  }, [viewportState]); // ----------------------[ render ]--------------------------------\n\n  return react_1[\"default\"].createElement(exports.ViewportInterrupt.Provider, {\n    value: viewportInterruptPropertiesRef.current\n  }, react_1[\"default\"].createElement(\"div\", {\n    \"data-type\": 'viewport',\n    \"data-scrollerid\": scrollerID,\n    style: divlinerstyleRef.current,\n    ref: viewportdivRef\n  }, viewportState != 'setup' && children));\n}; // Viewport\n// establish minimum width/height for the viewport -- approximately one item\n// gap only applies with multi-width items, therefore not used in calculations\n\n\nvar calcMinViewportCrossLength = function calcMinViewportCrossLength(orientation, cellWidth, cellHeight, gap, padding) {\n  var crosslength, cellLength;\n\n  if (orientation == 'vertical') {\n    cellLength = cellWidth;\n  } else {\n    cellLength = cellHeight;\n  }\n\n  crosslength = cellLength + padding * 2;\n  return crosslength;\n};\n\nexports[\"default\"] = Viewport;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/viewport.tsx\n");

/***/ }),

/***/ "./node_modules/react-reverse-portal/dist/web/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/react-reverse-portal/dist/web/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"InPortal\": () => (/* binding */ InPortal),\n/* harmony export */   \"OutPortal\": () => (/* binding */ OutPortal),\n/* harmony export */   \"createHtmlPortalNode\": () => (/* binding */ createHtmlPortalNode),\n/* harmony export */   \"createSvgPortalNode\": () => (/* binding */ createSvgPortalNode)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"react-dom\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n// Internally, the portalNode must be for either HTML or SVG elements\nvar ELEMENT_TYPE_HTML = 'html';\nvar ELEMENT_TYPE_SVG = 'svg';\n// ReactDOM can handle several different namespaces, but they're not exported publicly\n// https://github.com/facebook/react/blob/b87aabdfe1b7461e7331abb3601d9e6bb27544bc/packages/react-dom/src/shared/DOMNamespaces.js#L8-L10\nvar SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nvar validateElementType = function (domElement, elementType) {\n    if (elementType === ELEMENT_TYPE_HTML) {\n        return domElement instanceof HTMLElement;\n    }\n    if (elementType === ELEMENT_TYPE_SVG) {\n        return domElement instanceof SVGElement;\n    }\n    throw new Error(\"Unrecognized element type \\\"\" + elementType + \"\\\" for validateElementType.\");\n};\n// This is the internal implementation: the public entry points set elementType to an appropriate value\nvar createPortalNode = function (elementType, options) {\n    var initialProps = {};\n    var parent;\n    var lastPlaceholder;\n    var element;\n    if (elementType === ELEMENT_TYPE_HTML) {\n        element = document.createElement('div');\n    }\n    else if (elementType === ELEMENT_TYPE_SVG) {\n        element = document.createElementNS(SVG_NAMESPACE, 'g');\n    }\n    else {\n        throw new Error(\"Invalid element type \\\"\" + elementType + \"\\\" for createPortalNode: must be \\\"html\\\" or \\\"svg\\\".\");\n    }\n    if (options && typeof options === \"object\") {\n        for (var _i = 0, _a = Object.entries(options.attributes); _i < _a.length; _i++) {\n            var _b = _a[_i], key = _b[0], value = _b[1];\n            element.setAttribute(key, value);\n        }\n    }\n    var portalNode = {\n        element: element,\n        elementType: elementType,\n        setPortalProps: function (props) {\n            initialProps = props;\n        },\n        getInitialPortalProps: function () {\n            return initialProps;\n        },\n        mount: function (newParent, newPlaceholder) {\n            if (newPlaceholder === lastPlaceholder) {\n                // Already mounted - noop.\n                return;\n            }\n            portalNode.unmount();\n            // To support SVG and other non-html elements, the portalNode's elementType needs to match\n            // the elementType it's being rendered into\n            if (newParent !== parent) {\n                if (!validateElementType(newParent, elementType)) {\n                    throw new Error(\"Invalid element type for portal: \\\"\" + elementType + \"\\\" portalNodes must be used with \" + elementType + \" elements, but OutPortal is within <\" + newParent.tagName + \">.\");\n                }\n            }\n            newParent.replaceChild(portalNode.element, newPlaceholder);\n            parent = newParent;\n            lastPlaceholder = newPlaceholder;\n        },\n        unmount: function (expectedPlaceholder) {\n            if (expectedPlaceholder && expectedPlaceholder !== lastPlaceholder) {\n                // Skip unmounts for placeholders that aren't currently mounted\n                // They will have been automatically unmounted already by a subsequent mount()\n                return;\n            }\n            if (parent && lastPlaceholder) {\n                parent.replaceChild(lastPlaceholder, portalNode.element);\n                parent = undefined;\n                lastPlaceholder = undefined;\n            }\n        }\n    };\n    return portalNode;\n};\nvar InPortal = /** @class */ (function (_super) {\n    __extends(InPortal, _super);\n    function InPortal(props) {\n        var _this = _super.call(this, props) || this;\n        _this.addPropsChannel = function () {\n            Object.assign(_this.props.node, {\n                setPortalProps: function (props) {\n                    // Rerender the child node here if/when the out portal props change\n                    _this.setState({ nodeProps: props });\n                }\n            });\n        };\n        _this.state = {\n            nodeProps: _this.props.node.getInitialPortalProps(),\n        };\n        return _this;\n    }\n    InPortal.prototype.componentDidMount = function () {\n        this.addPropsChannel();\n    };\n    InPortal.prototype.componentDidUpdate = function () {\n        this.addPropsChannel();\n    };\n    InPortal.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, children = _a.children, node = _a.node;\n        return react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal(react__WEBPACK_IMPORTED_MODULE_0__.Children.map(children, function (child) {\n            if (!react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(child))\n                return child;\n            return react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(child, _this.state.nodeProps);\n        }), node.element);\n    };\n    return InPortal;\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\nvar OutPortal = /** @class */ (function (_super) {\n    __extends(OutPortal, _super);\n    function OutPortal(props) {\n        var _this = _super.call(this, props) || this;\n        _this.placeholderNode = react__WEBPACK_IMPORTED_MODULE_0__.createRef();\n        _this.passPropsThroughPortal();\n        return _this;\n    }\n    OutPortal.prototype.passPropsThroughPortal = function () {\n        var propsForTarget = Object.assign({}, this.props, { node: undefined });\n        this.props.node.setPortalProps(propsForTarget);\n    };\n    OutPortal.prototype.componentDidMount = function () {\n        var node = this.props.node;\n        this.currentPortalNode = node;\n        var placeholder = this.placeholderNode.current;\n        var parent = placeholder.parentNode;\n        node.mount(parent, placeholder);\n        this.passPropsThroughPortal();\n    };\n    OutPortal.prototype.componentDidUpdate = function () {\n        // We re-mount on update, just in case we were unmounted (e.g. by\n        // a second OutPortal, which has now been removed)\n        var node = this.props.node;\n        // If we're switching portal nodes, we need to clean up the current one first.\n        if (this.currentPortalNode && node !== this.currentPortalNode) {\n            this.currentPortalNode.unmount(this.placeholderNode.current);\n            this.currentPortalNode = node;\n        }\n        var placeholder = this.placeholderNode.current;\n        var parent = placeholder.parentNode;\n        node.mount(parent, placeholder);\n        this.passPropsThroughPortal();\n    };\n    OutPortal.prototype.componentWillUnmount = function () {\n        var node = this.props.node;\n        node.unmount(this.placeholderNode.current);\n    };\n    OutPortal.prototype.render = function () {\n        // Render a placeholder to the DOM, so we can get a reference into\n        // our location in the DOM, and swap it out for the portaled node.\n        // A <div> placeholder works fine even for SVG.\n        return react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { ref: this.placeholderNode });\n    };\n    return OutPortal;\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\nvar createHtmlPortalNode = createPortalNode.bind(null, ELEMENT_TYPE_HTML);\nvar createSvgPortalNode = createPortalNode.bind(null, ELEMENT_TYPE_SVG);\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-reverse-portal/dist/web/index.js\n");

/***/ }),

/***/ "./node_modules/requestidlecallback/index.js":
/*!***************************************************!*\
  !*** ./node_modules/requestidlecallback/index.js ***!
  \***************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (factory) {\n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {}\n}(function(){\n\t'use strict';\n\tvar scheduleStart, throttleDelay, lazytimer, lazyraf;\n\tvar root = typeof window != 'undefined' ?\n\t\twindow :\n\t\ttypeof __webpack_require__.g != undefined ?\n\t\t\t__webpack_require__.g :\n\t\t\tthis || {};\n\tvar requestAnimationFrame = root.cancelRequestAnimationFrame && root.requestAnimationFrame || setTimeout;\n\tvar cancelRequestAnimationFrame = root.cancelRequestAnimationFrame || clearTimeout;\n\tvar tasks = [];\n\tvar runAttempts = 0;\n\tvar isRunning = false;\n\tvar remainingTime = 7;\n\tvar minThrottle = 35;\n\tvar throttle = 125;\n\tvar index = 0;\n\tvar taskStart = 0;\n\tvar tasklength = 0;\n\tvar IdleDeadline = {\n\t\tget didTimeout(){\n\t\t\treturn false;\n\t\t},\n\t\ttimeRemaining: function(){\n\t\t\tvar timeRemaining = remainingTime - (Date.now() - taskStart);\n\t\t\treturn timeRemaining < 0 ? 0 : timeRemaining;\n\t\t},\n\t};\n\tvar setInactive = debounce(function(){\n\t\tremainingTime = 22;\n\t\tthrottle = 66;\n\t\tminThrottle = 0;\n\t});\n\n\tfunction debounce(fn){\n\t\tvar id, timestamp;\n\t\tvar wait = 99;\n\t\tvar check = function(){\n\t\t\tvar last = (Date.now()) - timestamp;\n\n\t\t\tif (last < wait) {\n\t\t\t\tid = setTimeout(check, wait - last);\n\t\t\t} else {\n\t\t\t\tid = null;\n\t\t\t\tfn();\n\t\t\t}\n\t\t};\n\t\treturn function(){\n\t\t\ttimestamp = Date.now();\n\t\t\tif(!id){\n\t\t\t\tid = setTimeout(check, wait);\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction abortRunning(){\n\t\tif(isRunning){\n\t\t\tif(lazyraf){\n\t\t\t\tcancelRequestAnimationFrame(lazyraf);\n\t\t\t}\n\t\t\tif(lazytimer){\n\t\t\t\tclearTimeout(lazytimer);\n\t\t\t}\n\t\t\tisRunning = false;\n\t\t}\n\t}\n\n\tfunction onInputorMutation(){\n\t\tif(throttle != 125){\n\t\t\tremainingTime = 7;\n\t\t\tthrottle = 125;\n\t\t\tminThrottle = 35;\n\n\t\t\tif(isRunning) {\n\t\t\t\tabortRunning();\n\t\t\t\tscheduleLazy();\n\t\t\t}\n\t\t}\n\t\tsetInactive();\n\t}\n\n\tfunction scheduleAfterRaf() {\n\t\tlazyraf = null;\n\t\tlazytimer = setTimeout(runTasks, 0);\n\t}\n\n\tfunction scheduleRaf(){\n\t\tlazytimer = null;\n\t\trequestAnimationFrame(scheduleAfterRaf);\n\t}\n\n\tfunction scheduleLazy(){\n\n\t\tif(isRunning){return;}\n\t\tthrottleDelay = throttle - (Date.now() - taskStart);\n\n\t\tscheduleStart = Date.now();\n\n\t\tisRunning = true;\n\n\t\tif(minThrottle && throttleDelay < minThrottle){\n\t\t\tthrottleDelay = minThrottle;\n\t\t}\n\n\t\tif(throttleDelay > 9){\n\t\t\tlazytimer = setTimeout(scheduleRaf, throttleDelay);\n\t\t} else {\n\t\t\tthrottleDelay = 0;\n\t\t\tscheduleRaf();\n\t\t}\n\t}\n\n\tfunction runTasks(){\n\t\tvar task, i, len;\n\t\tvar timeThreshold = remainingTime > 9 ?\n\t\t\t9 :\n\t\t\t1\n\t\t;\n\n\t\ttaskStart = Date.now();\n\t\tisRunning = false;\n\n\t\tlazytimer = null;\n\n\t\tif(runAttempts > 2 || taskStart - throttleDelay - 50 < scheduleStart){\n\t\t\tfor(i = 0, len = tasks.length; i < len && IdleDeadline.timeRemaining() > timeThreshold; i++){\n\t\t\t\ttask = tasks.shift();\n\t\t\t\ttasklength++;\n\t\t\t\tif(task){\n\t\t\t\t\ttask(IdleDeadline);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(tasks.length){\n\t\t\tscheduleLazy();\n\t\t} else {\n\t\t\trunAttempts = 0;\n\t\t}\n\t}\n\n\tfunction requestIdleCallbackShim(task){\n\t\tindex++;\n\t\ttasks.push(task);\n\t\tscheduleLazy();\n\t\treturn index;\n\t}\n\n\tfunction cancelIdleCallbackShim(id){\n\t\tvar index = id - 1 - tasklength;\n\t\tif(tasks[index]){\n\t\t\ttasks[index] = null;\n\t\t}\n\t}\n\n\tif(!root.requestIdleCallback || !root.cancelIdleCallback){\n\t\troot.requestIdleCallback = requestIdleCallbackShim;\n\t\troot.cancelIdleCallback = cancelIdleCallbackShim;\n\n\t\tif(root.document && document.addEventListener){\n\t\t\troot.addEventListener('scroll', onInputorMutation, true);\n\t\t\troot.addEventListener('resize', onInputorMutation);\n\n\t\t\tdocument.addEventListener('focus', onInputorMutation, true);\n\t\t\tdocument.addEventListener('mouseover', onInputorMutation, true);\n\t\t\t['click', 'keypress', 'touchstart', 'mousedown'].forEach(function(name){\n\t\t\t\tdocument.addEventListener(name, onInputorMutation, {capture: true, passive: true});\n\t\t\t});\n\n\t\t\tif(root.MutationObserver){\n\t\t\t\tnew MutationObserver( onInputorMutation ).observe( document.documentElement, {childList: true, subtree: true, attributes: true} );\n\t\t\t}\n\t\t}\n\t} else {\n\t\ttry{\n\t\t\troot.requestIdleCallback(function(){}, {timeout: 0});\n\t\t} catch(e){\n\t\t\t(function(rIC){\n\t\t\t\tvar timeRemainingProto, timeRemaining;\n\t\t\t\troot.requestIdleCallback = function(fn, timeout){\n\t\t\t\t\tif(timeout && typeof timeout.timeout == 'number'){\n\t\t\t\t\t\treturn rIC(fn, timeout.timeout);\n\t\t\t\t\t}\n\t\t\t\t\treturn rIC(fn);\n\t\t\t\t};\n\t\t\t\tif(root.IdleCallbackDeadline && (timeRemainingProto = IdleCallbackDeadline.prototype)){\n\t\t\t\t\ttimeRemaining = Object.getOwnPropertyDescriptor(timeRemainingProto, 'timeRemaining');\n\t\t\t\t\tif(!timeRemaining || !timeRemaining.configurable || !timeRemaining.get){return;}\n\t\t\t\t\tObject.defineProperty(timeRemainingProto, 'timeRemaining', {\n\t\t\t\t\t\tvalue:  function(){\n\t\t\t\t\t\t\treturn timeRemaining.get.call(this);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})(root.requestIdleCallback)\n\t\t}\n\t}\n\n\treturn {\n\t\trequest: requestIdleCallbackShim,\n\t\tcancel: cancelIdleCallbackShim,\n\t};\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/requestidlecallback/index.js\n");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_react__;

/***/ }),

/***/ "react-dom":
/*!****************************!*\
  !*** external "react-dom" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_react_dom__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/infinitegridscroller.tsx");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});