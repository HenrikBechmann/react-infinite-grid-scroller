{"version":3,"file":"build.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;;;;;;;ACVwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qDAAM;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,CAAC;AAC0B;;;;;;;;;;;;;;;;;;;ACtB2C;AACL;AACN;AAC3D;AACA,YAAY,qDAAK;AACjB,YAAY,iEAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA,0CAA0C,2FAAoC;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8EAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC4B;;;;;;;;;;;;;;;;;;AC9ByC;AAC1B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uFAAgC;AACxC;AACA;AACA;AACA;AACA;AACA,aAAa,yDAAS;AACtB;AACA;AACA,QAAQ,uFAAgC;AACxC;AACA;AACA;AACA;AACA;AACA,aAAa,yDAAS;AACtB;AACA;AACA,QAAQ,yFAAkC;AAC1C;AACA;AACA,QAAQ,0FAAmC;AAC3C;AACA;AACA,6CAA6C,iBAAiB;AAC9D;AACA;AACA,CAAC;AACyB;;;;;;;;;;;;;;;;ACtC1B;AACA;AACA;AACA;AACA;AACA,CAAC,4DAA4D;AACzB;;;;;;;;;;;;;;;;;;;;ACNuB;AACH;AACM;AACJ;AAC1D;AACA;AACA,oBAAoB,+BAA+B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uEAAoB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,wEAAoB;AACpD,+CAA+C,iEAAiB;AAChE,YAAY,6DAAW;AACvB,YAAY,gEAAkB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0EAAsB,CAAC,2EAAuB;AAC7E;AACA,YAAY,6DAAW;AACvB;AACA;AACA;AACA;AACA;AACA,kEAAkE,oDAAoD;AACtH;AACA;AACA;AACA,CAAC;AACmC;;;;;;;;;;;;;;;;AChDpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC+B;;;;;;;;;;;;;;;;;;ACVkC;AAC1B;AACxC;AACA;AACA,oBAAoB,+EAAiB;AACrC;AACA;AACA,6BAA6B,qDAAM;AACnC,8BAA8B,qDAAM;AACpC,yCAAyC,qDAAM;AAC/C;AACA;AACA,CAAC;AAC8B;;;;;;;;;;;;;;;;;ACbS;AACxC;AACA;AACA;AACA;AACA,QAAQ,qDAAM;AACd;AACA;AACA,CAAC;AAC6B;;;;;;;;;;;;;;;;;;;;ACT6B;AACE;AACG;AACV;AACtD;AACA;AACA;AACA,IAAI,2EAAuB;AAC3B;AACA;AACA;AACA;AACA;AACA,4BAA4B,qEAAmB;AAC/C,8BAA8B,6EAAqB;AACnD;AACA,kCAAkC,mEAAgB;AAClD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL,8CAA8C,yBAAyB;AACvE;AACA;AACA;AACA;AACA;AACuC;;;;;;;;;;;;;;;;;;;;;;;AChCgC;AACZ;AACN;AACF;AACV;AACA;AACzC;AACA;AACA;AACA,gCAAgC,2DAAgB,IAAI,qEAA0B;AAC9E,wCAAwC;AACxC;AACA,iCAAiC;AACjC,gCAAgC;AAChC,kCAAkC;AAClC,eAAe,mEAAkB;AACjC;AACA,gBAAgB,qDAAM;AACtB;AACA;AACA;AACA,qBAAqB,6DAAe;AACpC,CAAC;AACD;AACA,yCAAyC;AACzC;AACA;AACA;AACA,QAAQ,wDAAQ;AAChB;AACA;AACA;AACA;AACA,cAAc,qDAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAM;AACtB;AACA;AACA;AACA,yBAAyB,6DAAe;AACxC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,wGAAiD;AAC9D;AACA,aAAa,0FAAmC;AAChD;AACA;AACA;AACA;AACA;AAC+C;;;;;;;;;;;;;;;;;AC9EH;AAC5C;AACA,QAAQ,wDAAQ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACiC;;;;;;;;;;;;;;;;ACbjC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACkC;;;;;;;;;;;;;;;;;;ACfyB;AACK;AAChE;AACA,IAAI,2EAAuB;AAC3B;AACA;AACA;AACA;AACA,oBAAoB,6EAAqB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AAC2C;;;;;;;;;;;;;;;;;AClBgB;AAC3D;AACA,WAAW,wEAAoB,iBAAiB,qCAAqC;AACrF;AACiC;;;;;;;;;;;;;;;;;ACJ0B;AAC3D;AACA,WAAW,wEAAoB,iBAAiB,sCAAsC;AACtF;AACkC;;;;;;;;;;;;;;;;;;;;;ACJiB;AACU;AACF;;;;;;;;;;;;;;;;;;;ACF3D,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACyD;;;;;;;;;;;;;;;;AClClD,8BAA8B;;;;;;;;;;;;;;;;ACA9B;;;;;;;;;;;;;;;;;;;;;ACAqE;AACE;AACA;AACU;AACQ;AAChG;AACA;AACA,IAAI,4GAA+B;AACnC,WAAW,wFAAqB;AAChC,gBAAgB,oGAA2B;AAC3C,QAAQ,4GAA+B;AACvC;AACA,QAAQ,0FAAsB;AAC9B,QAAQ,0FAAsB;AAC9B;AACA;AACA;AACmB;;;;;;;;;;;;;;;;ACjBnB;AACA;AACA,2BAA2B,mDAAmD,cAAc;AAC5F;AACA;AACA;AACA;AACA,uBAAuB;AACvB,2CAA2C,kBAAkB;AAC7D,gCAAgC;AAChC;AACA;AACA;AACA;AAC0B;;;;;;;;;;;;;;;;;ACdwB;A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/B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,CAAC;AACkB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC0B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,0DAA0D,YAAY;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;;;;;;;;;;;;ACjNa;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,uCAAuC,mBAAO,CAAC,oFAAkB;AACjE,kBAAe;AACf;;;;;;;;;;;ACPa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc,mBAAO,CAAC,oBAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,6CAA6C,qBAAqB;AAClE;AACA,kBAAe;AACf;;;;;;;;;;;;;;;;;;;;;;ACdA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA;AACA,eAAe,gBAAgB,sCAAsC,kBAAkB;AACvF,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,CAAC;AAC8B;AACO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,gBAAgB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,kBAAkB;AACvD;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mDAAqB,CAAC,+CAAkB;AACvD,iBAAiB,iDAAoB;AACrC;AACA,mBAAmB,+CAAkB;AACrC,SAAS;AACT;AACA;AACA,CAAC,CAAC,gDAAmB;AACrB;AACA;AACA;AACA;AACA,gCAAgC,4CAAe;AAC/C;AACA;AACA;AACA;AACA,6CAA6C,gBAAgB,iBAAiB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gDAAmB,UAAU,2BAA2B;AACvE;AACA;AACA,CAAC,CAAC,gDAAmB;AACrB;AACA;AAC2E;AAC3E;;;;;;;;;;AC/KA;AACA,KAAK,IAA0C;AAC/C,EAAE,iCAAO,EAAE,oCAAE,OAAO;AAAA;AAAA;AAAA,kGAAC;AACrB,GAAG,KAAK,EAIN;AACF,CAAC;AACD;AACA;AACA;AACA;AACA,SAAS,qBAAM;AACf,GAAG,qBAAM;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,gBAAgB;AAChB;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,kCAAkC,yDAAyD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,wDAAwD,6BAA6B;AACrF,IAAI;;AAEJ;AACA,kFAAkF,kDAAkD;AACpI;AACA;AACA,GAAG;AACH;AACA,wCAAwC,GAAG,WAAW;AACtD,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E;AAC7E;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;ACpND;;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;UENA;UACA;UACA;UACA","sources":["webpack://Scroller/webpack/universalModuleDefinition","webpack://Scroller/./node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js","webpack://Scroller/./node_modules/@juggle/resize-observer/lib/ResizeObservation.js","webpack://Scroller/./node_modules/@juggle/resize-observer/lib/ResizeObserver.js","webpack://Scroller/./node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js","webpack://Scroller/./node_modules/@juggle/resize-observer/lib/ResizeObserverController.js","webpack://Scroller/./node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js","webpack://Scroller/./node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js","webpack://Scroller/./node_modules/@juggle/resize-observer/lib/ResizeObserverSize.js","webpack://Scroller/./node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js","webpack://Scroller/./node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js","webpack://Scroller/./node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js","webpack://Scroller/./node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js","webpack://Scroller/./node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js","webpack://Scroller/./node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js","webpack://Scroller/./node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js","webpack://Scroller/./node_modules/@juggle/resize-observer/lib/exports/resize-observer.js","webpack://Scroller/./node_modules/@juggle/resize-observer/lib/utils/element.js","webpack://Scroller/./node_modules/@juggle/resize-observer/lib/utils/freeze.js","webpack://Scroller/./node_modules/@juggle/resize-observer/lib/utils/global.js","webpack://Scroller/./node_modules/@juggle/resize-observer/lib/utils/process.js","webpack://Scroller/./node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js","webpack://Scroller/./node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js","webpack://Scroller/./node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js","webpack://Scroller/./node_modules/@juggle/resize-observer/lib/utils/scheduler.js","webpack://Scroller/./src/cellshell.tsx","webpack://Scroller/./src/cradle.tsx","webpack://Scroller/./src/cradle/contentagent.tsx","webpack://Scroller/./src/cradle/contentfunctions.tsx","webpack://Scroller/./src/cradle/cradleagent.tsx","webpack://Scroller/./src/cradle/cradlesuper.tsx","webpack://Scroller/./src/cradle/observersagent.tsx","webpack://Scroller/./src/cradle/scrollagent.tsx","webpack://Scroller/./src/cradle/serviceagent.tsx","webpack://Scroller/./src/cradle/signalsagent.tsx","webpack://Scroller/./src/cradle/stateagent.tsx","webpack://Scroller/./src/cradle/stylesagent.tsx","webpack://Scroller/./src/infinitegridscroller.tsx","webpack://Scroller/./src/placeholder.tsx","webpack://Scroller/./src/portalmanager.tsx","webpack://Scroller/./src/scrollblock.tsx","webpack://Scroller/./src/scrolltracker.tsx","webpack://Scroller/./src/viewport.tsx","webpack://Scroller/./node_modules/detect-browser/es/index.js","webpack://Scroller/./node_modules/react-is-mounted-hook/lib/index.js","webpack://Scroller/./node_modules/react-is-mounted-hook/lib/use-is-mounted.js","webpack://Scroller/./node_modules/react-reverse-portal/dist/web/index.js","webpack://Scroller/./node_modules/requestidlecallback/index.js","webpack://Scroller/external umd \"react\"","webpack://Scroller/external umd \"react-dom\"","webpack://Scroller/webpack/bootstrap","webpack://Scroller/webpack/runtime/compat get default export","webpack://Scroller/webpack/runtime/define property getters","webpack://Scroller/webpack/runtime/global","webpack://Scroller/webpack/runtime/hasOwnProperty shorthand","webpack://Scroller/webpack/runtime/make namespace object","webpack://Scroller/webpack/before-startup","webpack://Scroller/webpack/startup","webpack://Scroller/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"react-dom\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"react-dom\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Scroller\"] = factory(require(\"react\"), require(\"react-dom\"));\n\telse\n\t\troot[\"Scroller\"] = factory(root[\"react\"], root[\"react-dom\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE_react__, __WEBPACK_EXTERNAL_MODULE_react_dom__) {\nreturn ","import { freeze } from './utils/freeze';\nvar DOMRectReadOnly = (function () {\n    function DOMRectReadOnly(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.top = this.y;\n        this.left = this.x;\n        this.bottom = this.top + this.height;\n        this.right = this.left + this.width;\n        return freeze(this);\n    }\n    DOMRectReadOnly.prototype.toJSON = function () {\n        var _a = this, x = _a.x, y = _a.y, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left, width = _a.width, height = _a.height;\n        return { x: x, y: y, top: top, right: right, bottom: bottom, left: left, width: width, height: height };\n    };\n    DOMRectReadOnly.fromRect = function (rectangle) {\n        return new DOMRectReadOnly(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n    };\n    return DOMRectReadOnly;\n}());\nexport { DOMRectReadOnly };\n","import { ResizeObserverBoxOptions } from './ResizeObserverBoxOptions';\nimport { calculateBoxSize } from './algorithms/calculateBoxSize';\nimport { isSVG, isReplacedElement } from './utils/element';\nvar skipNotifyOnElement = function (target) {\n    return !isSVG(target)\n        && !isReplacedElement(target)\n        && getComputedStyle(target).display === 'inline';\n};\nvar ResizeObservation = (function () {\n    function ResizeObservation(target, observedBox) {\n        this.target = target;\n        this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;\n        this.lastReportedSize = {\n            inlineSize: 0,\n            blockSize: 0\n        };\n    }\n    ResizeObservation.prototype.isActive = function () {\n        var size = calculateBoxSize(this.target, this.observedBox, true);\n        if (skipNotifyOnElement(this.target)) {\n            this.lastReportedSize = size;\n        }\n        if (this.lastReportedSize.inlineSize !== size.inlineSize\n            || this.lastReportedSize.blockSize !== size.blockSize) {\n            return true;\n        }\n        return false;\n    };\n    return ResizeObservation;\n}());\nexport { ResizeObservation };\n","import { ResizeObserverController } from './ResizeObserverController';\nimport { isElement } from './utils/element';\nvar ResizeObserver = (function () {\n    function ResizeObserver(callback) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (typeof callback !== 'function') {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\");\n        }\n        ResizeObserverController.connect(this, callback);\n    }\n    ResizeObserver.prototype.observe = function (target, options) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!isElement(target)) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.observe(this, target, options);\n    };\n    ResizeObserver.prototype.unobserve = function (target) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!isElement(target)) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.unobserve(this, target);\n    };\n    ResizeObserver.prototype.disconnect = function () {\n        ResizeObserverController.disconnect(this);\n    };\n    ResizeObserver.toString = function () {\n        return 'function ResizeObserver () { [polyfill code] }';\n    };\n    return ResizeObserver;\n}());\nexport { ResizeObserver };\n","var ResizeObserverBoxOptions;\n(function (ResizeObserverBoxOptions) {\n    ResizeObserverBoxOptions[\"BORDER_BOX\"] = \"border-box\";\n    ResizeObserverBoxOptions[\"CONTENT_BOX\"] = \"content-box\";\n    ResizeObserverBoxOptions[\"DEVICE_PIXEL_CONTENT_BOX\"] = \"device-pixel-content-box\";\n})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));\nexport { ResizeObserverBoxOptions };\n","import { scheduler, updateCount } from './utils/scheduler';\nimport { ResizeObservation } from './ResizeObservation';\nimport { ResizeObserverDetail } from './ResizeObserverDetail';\nimport { resizeObservers } from './utils/resizeObservers';\nvar observerMap = new WeakMap();\nvar getObservationIndex = function (observationTargets, target) {\n    for (var i = 0; i < observationTargets.length; i += 1) {\n        if (observationTargets[i].target === target) {\n            return i;\n        }\n    }\n    return -1;\n};\nvar ResizeObserverController = (function () {\n    function ResizeObserverController() {\n    }\n    ResizeObserverController.connect = function (resizeObserver, callback) {\n        var detail = new ResizeObserverDetail(resizeObserver, callback);\n        observerMap.set(resizeObserver, detail);\n    };\n    ResizeObserverController.observe = function (resizeObserver, target, options) {\n        var detail = observerMap.get(resizeObserver);\n        var firstObservation = detail.observationTargets.length === 0;\n        if (getObservationIndex(detail.observationTargets, target) < 0) {\n            firstObservation && resizeObservers.push(detail);\n            detail.observationTargets.push(new ResizeObservation(target, options && options.box));\n            updateCount(1);\n            scheduler.schedule();\n        }\n    };\n    ResizeObserverController.unobserve = function (resizeObserver, target) {\n        var detail = observerMap.get(resizeObserver);\n        var index = getObservationIndex(detail.observationTargets, target);\n        var lastObservation = detail.observationTargets.length === 1;\n        if (index >= 0) {\n            lastObservation && resizeObservers.splice(resizeObservers.indexOf(detail), 1);\n            detail.observationTargets.splice(index, 1);\n            updateCount(-1);\n        }\n    };\n    ResizeObserverController.disconnect = function (resizeObserver) {\n        var _this = this;\n        var detail = observerMap.get(resizeObserver);\n        detail.observationTargets.slice().forEach(function (ot) { return _this.unobserve(resizeObserver, ot.target); });\n        detail.activeTargets.splice(0, detail.activeTargets.length);\n    };\n    return ResizeObserverController;\n}());\nexport { ResizeObserverController };\n","var ResizeObserverDetail = (function () {\n    function ResizeObserverDetail(resizeObserver, callback) {\n        this.activeTargets = [];\n        this.skippedTargets = [];\n        this.observationTargets = [];\n        this.observer = resizeObserver;\n        this.callback = callback;\n    }\n    return ResizeObserverDetail;\n}());\nexport { ResizeObserverDetail };\n","import { calculateBoxSizes } from './algorithms/calculateBoxSize';\nimport { freeze } from './utils/freeze';\nvar ResizeObserverEntry = (function () {\n    function ResizeObserverEntry(target) {\n        var boxes = calculateBoxSizes(target);\n        this.target = target;\n        this.contentRect = boxes.contentRect;\n        this.borderBoxSize = freeze([boxes.borderBoxSize]);\n        this.contentBoxSize = freeze([boxes.contentBoxSize]);\n        this.devicePixelContentBoxSize = freeze([boxes.devicePixelContentBoxSize]);\n    }\n    return ResizeObserverEntry;\n}());\nexport { ResizeObserverEntry };\n","import { freeze } from './utils/freeze';\nvar ResizeObserverSize = (function () {\n    function ResizeObserverSize(inlineSize, blockSize) {\n        this.inlineSize = inlineSize;\n        this.blockSize = blockSize;\n        freeze(this);\n    }\n    return ResizeObserverSize;\n}());\nexport { ResizeObserverSize };\n","import { resizeObservers } from '../utils/resizeObservers';\nimport { ResizeObserverEntry } from '../ResizeObserverEntry';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nimport { calculateBoxSize } from './calculateBoxSize';\nvar broadcastActiveObservations = function () {\n    var shallowestDepth = Infinity;\n    var callbacks = [];\n    resizeObservers.forEach(function processObserver(ro) {\n        if (ro.activeTargets.length === 0) {\n            return;\n        }\n        var entries = [];\n        ro.activeTargets.forEach(function processTarget(ot) {\n            var entry = new ResizeObserverEntry(ot.target);\n            var targetDepth = calculateDepthForNode(ot.target);\n            entries.push(entry);\n            ot.lastReportedSize = calculateBoxSize(ot.target, ot.observedBox);\n            if (targetDepth < shallowestDepth) {\n                shallowestDepth = targetDepth;\n            }\n        });\n        callbacks.push(function resizeObserverCallback() {\n            ro.callback.call(ro.observer, entries, ro.observer);\n        });\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n    });\n    for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {\n        var callback = callbacks_1[_i];\n        callback();\n    }\n    return shallowestDepth;\n};\nexport { broadcastActiveObservations };\n","import { ResizeObserverBoxOptions } from '../ResizeObserverBoxOptions';\nimport { ResizeObserverSize } from '../ResizeObserverSize';\nimport { DOMRectReadOnly } from '../DOMRectReadOnly';\nimport { isSVG, isHidden } from '../utils/element';\nimport { freeze } from '../utils/freeze';\nimport { global } from '../utils/global';\nvar cache = new WeakMap();\nvar scrollRegexp = /auto|scroll/;\nvar verticalRegexp = /^tb|vertical/;\nvar IE = (/msie|trident/i).test(global.navigator && global.navigator.userAgent);\nvar parseDimension = function (pixel) { return parseFloat(pixel || '0'); };\nvar size = function (inlineSize, blockSize, switchSizes) {\n    if (inlineSize === void 0) { inlineSize = 0; }\n    if (blockSize === void 0) { blockSize = 0; }\n    if (switchSizes === void 0) { switchSizes = false; }\n    return new ResizeObserverSize((switchSizes ? blockSize : inlineSize) || 0, (switchSizes ? inlineSize : blockSize) || 0);\n};\nvar zeroBoxes = freeze({\n    devicePixelContentBoxSize: size(),\n    borderBoxSize: size(),\n    contentBoxSize: size(),\n    contentRect: new DOMRectReadOnly(0, 0, 0, 0)\n});\nvar calculateBoxSizes = function (target, forceRecalculation) {\n    if (forceRecalculation === void 0) { forceRecalculation = false; }\n    if (cache.has(target) && !forceRecalculation) {\n        return cache.get(target);\n    }\n    if (isHidden(target)) {\n        cache.set(target, zeroBoxes);\n        return zeroBoxes;\n    }\n    var cs = getComputedStyle(target);\n    var svg = isSVG(target) && target.ownerSVGElement && target.getBBox();\n    var removePadding = !IE && cs.boxSizing === 'border-box';\n    var switchSizes = verticalRegexp.test(cs.writingMode || '');\n    var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');\n    var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');\n    var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);\n    var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);\n    var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);\n    var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);\n    var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);\n    var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);\n    var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);\n    var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);\n    var horizontalPadding = paddingLeft + paddingRight;\n    var verticalPadding = paddingTop + paddingBottom;\n    var horizontalBorderArea = borderLeft + borderRight;\n    var verticalBorderArea = borderTop + borderBottom;\n    var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;\n    var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;\n    var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;\n    var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;\n    var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;\n    var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;\n    var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;\n    var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;\n    var boxes = freeze({\n        devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),\n        borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),\n        contentBoxSize: size(contentWidth, contentHeight, switchSizes),\n        contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)\n    });\n    cache.set(target, boxes);\n    return boxes;\n};\nvar calculateBoxSize = function (target, observedBox, forceRecalculation) {\n    var _a = calculateBoxSizes(target, forceRecalculation), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize, devicePixelContentBoxSize = _a.devicePixelContentBoxSize;\n    switch (observedBox) {\n        case ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:\n            return devicePixelContentBoxSize;\n        case ResizeObserverBoxOptions.BORDER_BOX:\n            return borderBoxSize;\n        default:\n            return contentBoxSize;\n    }\n};\nexport { calculateBoxSize, calculateBoxSizes };\n","import { isHidden } from '../utils/element';\nvar calculateDepthForNode = function (node) {\n    if (isHidden(node)) {\n        return Infinity;\n    }\n    var depth = 0;\n    var parent = node.parentNode;\n    while (parent) {\n        depth += 1;\n        parent = parent.parentNode;\n    }\n    return depth;\n};\nexport { calculateDepthForNode };\n","var msg = 'ResizeObserver loop completed with undelivered notifications.';\nvar deliverResizeLoopError = function () {\n    var event;\n    if (typeof ErrorEvent === 'function') {\n        event = new ErrorEvent('error', {\n            message: msg\n        });\n    }\n    else {\n        event = document.createEvent('Event');\n        event.initEvent('error', false, false);\n        event.message = msg;\n    }\n    window.dispatchEvent(event);\n};\nexport { deliverResizeLoopError };\n","import { resizeObservers } from '../utils/resizeObservers';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nvar gatherActiveObservationsAtDepth = function (depth) {\n    resizeObservers.forEach(function processObserver(ro) {\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n        ro.skippedTargets.splice(0, ro.skippedTargets.length);\n        ro.observationTargets.forEach(function processTarget(ot) {\n            if (ot.isActive()) {\n                if (calculateDepthForNode(ot.target) > depth) {\n                    ro.activeTargets.push(ot);\n                }\n                else {\n                    ro.skippedTargets.push(ot);\n                }\n            }\n        });\n    });\n};\nexport { gatherActiveObservationsAtDepth };\n","import { resizeObservers } from '../utils/resizeObservers';\nvar hasActiveObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.activeTargets.length > 0; });\n};\nexport { hasActiveObservations };\n","import { resizeObservers } from '../utils/resizeObservers';\nvar hasSkippedObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.skippedTargets.length > 0; });\n};\nexport { hasSkippedObservations };\n","export { ResizeObserver } from '../ResizeObserver';\nexport { ResizeObserverEntry } from '../ResizeObserverEntry';\nexport { ResizeObserverSize } from '../ResizeObserverSize';\n","var isSVG = function (target) { return target instanceof SVGElement && 'getBBox' in target; };\nvar isHidden = function (target) {\n    if (isSVG(target)) {\n        var _a = target.getBBox(), width = _a.width, height = _a.height;\n        return !width && !height;\n    }\n    var _b = target, offsetWidth = _b.offsetWidth, offsetHeight = _b.offsetHeight;\n    return !(offsetWidth || offsetHeight || target.getClientRects().length);\n};\nvar isElement = function (obj) {\n    var _a, _b;\n    if (obj instanceof Element) {\n        return true;\n    }\n    var scope = (_b = (_a = obj) === null || _a === void 0 ? void 0 : _a.ownerDocument) === null || _b === void 0 ? void 0 : _b.defaultView;\n    return !!(scope && obj instanceof scope.Element);\n};\nvar isReplacedElement = function (target) {\n    switch (target.tagName) {\n        case 'INPUT':\n            if (target.type !== 'image') {\n                break;\n            }\n        case 'VIDEO':\n        case 'AUDIO':\n        case 'EMBED':\n        case 'OBJECT':\n        case 'CANVAS':\n        case 'IFRAME':\n        case 'IMG':\n            return true;\n    }\n    return false;\n};\nexport { isSVG, isHidden, isElement, isReplacedElement };\n","export var freeze = function (obj) { return Object.freeze(obj); };\n","export var global = typeof window !== 'undefined' ? window : {};\n","import { hasActiveObservations } from '../algorithms/hasActiveObservations';\nimport { hasSkippedObservations } from '../algorithms/hasSkippedObservations';\nimport { deliverResizeLoopError } from '../algorithms/deliverResizeLoopError';\nimport { broadcastActiveObservations } from '../algorithms/broadcastActiveObservations';\nimport { gatherActiveObservationsAtDepth } from '../algorithms/gatherActiveObservationsAtDepth';\nvar process = function () {\n    var depth = 0;\n    gatherActiveObservationsAtDepth(depth);\n    while (hasActiveObservations()) {\n        depth = broadcastActiveObservations();\n        gatherActiveObservationsAtDepth(depth);\n    }\n    if (hasSkippedObservations()) {\n        deliverResizeLoopError();\n    }\n    return depth > 0;\n};\nexport { process };\n","var trigger;\nvar callbacks = [];\nvar notify = function () { return callbacks.splice(0).forEach(function (cb) { return cb(); }); };\nvar queueMicroTask = function (callback) {\n    if (!trigger) {\n        var toggle_1 = 0;\n        var el_1 = document.createTextNode('');\n        var config = { characterData: true };\n        new MutationObserver(function () { return notify(); }).observe(el_1, config);\n        trigger = function () { el_1.textContent = \"\" + (toggle_1 ? toggle_1-- : toggle_1++); };\n    }\n    callbacks.push(callback);\n    trigger();\n};\nexport { queueMicroTask };\n","import { queueMicroTask } from './queueMicroTask';\nvar queueResizeObserver = function (cb) {\n    queueMicroTask(function ResizeObserver() {\n        requestAnimationFrame(cb);\n    });\n};\nexport { queueResizeObserver };\n","var resizeObservers = [];\nexport { resizeObservers };\n","import { process } from './process';\nimport { global } from './global';\nimport { queueResizeObserver } from './queueResizeObserver';\nvar watching = 0;\nvar isWatching = function () { return !!watching; };\nvar CATCH_PERIOD = 250;\nvar observerConfig = { attributes: true, characterData: true, childList: true, subtree: true };\nvar events = [\n    'resize',\n    'load',\n    'transitionend',\n    'animationend',\n    'animationstart',\n    'animationiteration',\n    'keyup',\n    'keydown',\n    'mouseup',\n    'mousedown',\n    'mouseover',\n    'mouseout',\n    'blur',\n    'focus'\n];\nvar time = function (timeout) {\n    if (timeout === void 0) { timeout = 0; }\n    return Date.now() + timeout;\n};\nvar scheduled = false;\nvar Scheduler = (function () {\n    function Scheduler() {\n        var _this = this;\n        this.stopped = true;\n        this.listener = function () { return _this.schedule(); };\n    }\n    Scheduler.prototype.run = function (timeout) {\n        var _this = this;\n        if (timeout === void 0) { timeout = CATCH_PERIOD; }\n        if (scheduled) {\n            return;\n        }\n        scheduled = true;\n        var until = time(timeout);\n        queueResizeObserver(function () {\n            var elementsHaveResized = false;\n            try {\n                elementsHaveResized = process();\n            }\n            finally {\n                scheduled = false;\n                timeout = until - time();\n                if (!isWatching()) {\n                    return;\n                }\n                if (elementsHaveResized) {\n                    _this.run(1000);\n                }\n                else if (timeout > 0) {\n                    _this.run(timeout);\n                }\n                else {\n                    _this.start();\n                }\n            }\n        });\n    };\n    Scheduler.prototype.schedule = function () {\n        this.stop();\n        this.run();\n    };\n    Scheduler.prototype.observe = function () {\n        var _this = this;\n        var cb = function () { return _this.observer && _this.observer.observe(document.body, observerConfig); };\n        document.body ? cb() : global.addEventListener('DOMContentLoaded', cb);\n    };\n    Scheduler.prototype.start = function () {\n        var _this = this;\n        if (this.stopped) {\n            this.stopped = false;\n            this.observer = new MutationObserver(this.listener);\n            this.observe();\n            events.forEach(function (name) { return global.addEventListener(name, _this.listener, true); });\n        }\n    };\n    Scheduler.prototype.stop = function () {\n        var _this = this;\n        if (!this.stopped) {\n            this.observer && this.observer.disconnect();\n            events.forEach(function (name) { return global.removeEventListener(name, _this.listener, true); });\n            this.stopped = true;\n        }\n    };\n    return Scheduler;\n}());\nvar scheduler = new Scheduler();\nvar updateCount = function (n) {\n    !watching && n > 0 && scheduler.start();\n    watching += n;\n    !watching && scheduler.stop();\n};\nexport { scheduler, updateCount };\n","// cellshell.tsx\n// copyright (c) 2020 Henrik Bechmann, Toronto, Licence: MIT\n\nimport React, {useRef, useEffect, useLayoutEffect, useState, useCallback, useMemo, useContext } from 'react'\n\nimport ReactDOM from 'react-dom'\n\nimport {requestIdleCallback, cancelIdleCallback} from 'requestidlecallback'\n\nimport useIsMounted from 'react-is-mounted-hook'\n\nimport { OutPortal } from 'react-reverse-portal'\n\nimport Placeholder from './placeholder'\n\nimport { portalManager as portalAgentInstance } from './portalmanager'\n\nconst CellShell = ({\n    orientation, \n    cellHeight, \n    cellWidth, \n    index, \n    observer, \n    callbacks, \n    getItem, \n    listsize, \n    placeholder, \n    instanceID, \n    scrollerName,\n    scrollerID,\n}) => {\n    \n    // console.log('running cellshell with scrollerID',scrollerID)\n\n    const portalManager = portalAgentInstance // useContext(PortalAgent)\n    // const [error, saveError] = useState(null)\n    const [styles,saveStyles] = useState({\n        overflow:'hidden',\n        // willChange:'transform', // for Chrome Android paint bug\n    } as React.CSSProperties)\n    // const [itemstate,setItemstate] = useState('setup')\n    const shellRef = useRef(null)\n    const instanceIDRef = useRef(instanceID)\n    const isMounted = useIsMounted()\n    const itemrequestRef = useRef(null)\n    const portalRecord = useRef(null)\n    const [portalStatus, setPortalStatus] = useState('setup'); // 'setup' -> 'render'\n    // console.log('RUNNING cellshell scrollerID, portalStatus', scrollerID, portalStatus)\n\n    // initialize\n    useEffect(() => {\n\n        let requestidlecallback = window['requestIdleCallback']?window['requestIdleCallback']:requestIdleCallback\n        let cancelidlecallback = window['cancelIdleCallback']?window['cancelIdleCallback']:cancelIdleCallback\n\n        portalRecord.current = portalManager.createPortalListItem(scrollerID,index,null, placeholderchildRef.current)\n\n        // console.log('cellshell scrollerID, index, instanceID, portalRecord.current',scrollerID, index, instanceID, portalRecord.current)\n\n        let hasUserContent = portalManager.hasPortalUserContent(scrollerID,index)\n\n        // console.log('cellshell hasUserContent',index,hasUserContent)\n\n        if (!hasUserContent) {\n\n            setPortalStatus('renderplaceholder')\n\n            // console.log('cellshell getItem',index)\n\n            if (isMounted() && getItem) {\n\n                itemrequestRef.current = requestidlecallback(()=> { // TODO make this optional\n                    let contentItem = getItem(index)\n\n                    if (contentItem && contentItem.then) {\n                        contentItem.then((usercontent) => {\n                            if (isMounted()) { \n                                // console.log('saving new usercontent by promise',scrollerName, scrollerID, index, usercontent)\n                                portalRecord.current = portalManager.updatePortalListItem(scrollerID,index,usercontent)\n                                setPortalStatus('render')\n                                // saveError(null)\n                            }\n                        }).catch((e) => {\n                            console.log('ERROR',e)\n                            // if (isMounted()) { \n                            //     saveError(e)\n                            // }\n                        })\n                    } else {\n                        // console.log('isMounted, contentItem',isMounted(), contentItem)\n                        if (isMounted()) {\n                            if (contentItem) {\n                                let usercontent = contentItem;\n                                // (scrollerID == 0) && console.log('saving new usercontent',scrollerName, scrollerID, index, usercontent)\n                                portalRecord.current = portalManager.updatePortalListItem(scrollerID,index,usercontent)\n                                setPortalStatus('render')\n                                // saveError(null)\n                            } else {\n                                console.log('ERROR','no content item')\n                                // saveError(true)\n                            }\n                        }\n                    }\n                },{timeout:250})\n        \n            }         \n        } else {\n        \n            setPortalStatus('render')\n    \n        }        \n\n        // cleanup\n        return () => {\n            let requesthandle = itemrequestRef.current\n            cancelidlecallback(requesthandle)\n        }\n    },[])\n\n\n    // initialize\n    useEffect(() => {\n\n        let localcalls = callbacks\n\n        localcalls.setElementData && localcalls.setElementData(getElementData(),'register')\n\n        return (()=>{\n\n            localcalls.setElementData && localcalls.setElementData(getElementData(),'unregister')\n\n        })\n\n    },[callbacks])\n\n    let shellelement\n\n    useEffect(()=>{\n\n        if (!shellRef.current) return\n\n        observer.observe(shellRef.current)\n        shellelement = shellRef.current\n\n        return () => {\n\n            observer.unobserve(shellelement)\n\n        }\n\n    },[observer, shellRef.current])\n\n    useEffect(()=>{\n\n        let newStyles = getShellStyles(orientation, cellHeight, cellWidth, styles)\n        if (isMounted()) {\n            saveStyles(newStyles)\n        }\n\n    },[orientation,cellHeight,cellWidth])\n\n    // cradle ondemand callback parameter value\n    const getElementData = useCallback(()=>{\n        return [index, shellRef]\n    },[])\n\n    // placeholder handling\n    const customplaceholderRef = useRef(\n            placeholder?React.createElement(placeholder, {index, listsize}):null\n    )\n\n    const placeholderchild = useMemo(()=>{\n        let child = customplaceholderRef.current?\n                customplaceholderRef.current:<Placeholder index = {index} listsize = {listsize} error = 'none'/>\n        return child\n    }, [index, customplaceholderRef.current, listsize]);\n\n    const placeholderchildRef = useRef(placeholderchild)\n\n    const portalchildRef = useRef(placeholderchild)\n    const usingPlaceholder = useRef(true)\n\n    portalchildRef.current = useMemo(()=>{\n\n        let portallistitem = portalRecord.current\n        if (portalStatus != 'render') {\n            if (portallistitem && !portallistitem.reparenting) {\n                portallistitem.reparenting = true\n            }\n            return portalchildRef.current \n        }\n        if (!usingPlaceholder.current) return portalchildRef.current\n        let reverseportal = portallistitem.reverseportal\n        usingPlaceholder.current = false\n\n        return <OutPortal node = {reverseportal} />\n\n    }, [portalStatus]);\n\n    useEffect(()=> {\n        if (portalStatus != 'render') return\n        if (portalRecord.current?.reparenting) {\n            setTimeout(()=>{\n                if (!isMounted()) return\n                portalRecord.current.reparenting = false\n            })\n        }\n    }, [portalRecord.current?.reparenting, portalStatus])\n\n    return <div ref = { shellRef } data-type = 'cellshell' data-scrollerid = {scrollerID} data-index = {index} data-instanceid = {instanceID} style = {styles}>\n            { ((portalStatus == 'render') || (portalStatus == 'renderplaceholder')) && portalchildRef.current }\n        </div>\n\n} // CellShell\n\nconst getShellStyles = (orientation, cellHeight, cellWidth, styles) => {\n\n    let styleset = Object.assign({position:'relative'},styles)\n    if (orientation == 'horizontal') {\n        styleset.width = cellWidth?(cellWidth + 'px'):'auto'\n        styleset.height = 'auto'\n    } else if (orientation === 'vertical') {\n        styleset.width = 'auto'\n        styleset.height = cellHeight?(cellHeight + 'px'):'auto'\n    }\n\n    return styleset\n\n}\n\nexport default CellShell\n","// cradle.tsx\n// copyright (c) 2020 Henrik Bechmann, Toronto, Licence: MIT\n\n/*\n    TODO:\n\n    ObserversAgent\n    WingsAgent\n    MessageAgent ? // message with host environment, such as referenceIndexCallback\n\n    ScrollAgent\n    SignalsAgent\n    StateAgent\n    ContentAgent\n    CradleAgent\n    ServiceAgent // user services\n    StylesAgent\n\n    BUGS:\n    - check styles in scrollTracker args\n    - reposition gets stuck at a particular number after getting behind on heavy scroll\n        check pauseScrollingEffects\n    - variable cells showing signs of getItem() with portal\n    - Chrome sometimes misses nested cell portals horizontally\n    - reduce computing intensity to avoid battery drainage\n*/\n\n/*\n    Description\n    -----------\n    The GridStroller provides the illusion of infinite scrolling through the use of a data 'cradle' inside a viewport.\n    The illusion is maintained by synchronizing changes in cradle content with cradle location inside a scrollblock, such\n    that as the scrollblock is moved, the cradle moves oppositely in the scrollblock (to stay visible within the viewport). \n    The scrollblock is sized to approximate the list being viewed, so as to have a scroll thumb size and position which \n    realistically reflects the size of the list being shown.\n\n    The position of the cradle is controlled by a 'spine' which is a 0px height/width (along the medial - ScrollBlock can be \n    verticsl or horizontal). The purpose of the spine is to act as a 'fold', above which cell content expands 'upwards', and \n    below which the cell content expands  'downwards'. GridScroller can be viewed vertically or horizontally. When horizontal, \n    the spine has a 0px width, so that the 'fold' is vertical, and cells expand to the left and right.\n\n    The spine is controlled to always be in the at the leading edge of the leading cellrow of the viewport. Thus\n    in vertical orientation, the spine 'top' css attribute is always equal to the 'scrollTop' position of the scrollblock,\n    plus an adjustment. The adjustment is the result of the alignment of the spine in relation to the top-(or left-)most cell\n    in the viewport (the 'reference' row). The spine can only be placed at the leading edge of the first visible\n    cell in the viewport. Therefore the spine offset from the leading edge of the viewport can be anywhere from minus to\n    plus the length of the leading row. The exact amount depends on where the 'breakpoint' of transition notification is set for\n    cells crossing the viewport threshold (and can be configured). The default of the breakpoint is .5 (half the length of the cell).\n\n    Technically, there are several reference points tracked by the GridScroller. These are:\n        - spineReferenceIndex (the virtual index of the item controlling the location of the spine)\n            The spineReferenceIndex is also used to allocate items above (lower index value) and below (same or higher index value)\n            the fold\n        - cradleReferenceIndex (the virtual index of the item defining the leading bound of the cradle content)\n        - spinePosOffset (pixels - plus or minus - that the spine is placed in relation to the viewport's leading edge) \n    \n    These reference points are applied to the following structures:\n        - the viewport\n        - the scrollblock\n        - the cradle, consisting of\n            - the spine (contains cradle head and tail)\n            - the head (contains leading items)\n            - the tail (contains trailing items)\n\n    Structure details:\n        the cradle content consists of\n        - the number of rows that are visible in the viewport (according to the default parameters)\n            - this typically includes one partially visible row\n        - the number of runway rows specified in the parameters, times 2 (one et for the head; one for the tail)\n        - the number of items is the number of rows times the 'crosscount' the lateral number of cells. \n        - the last row might consist of fewer items than crosscount, to match the maximum listsize\n        - the cradleRowcount (visible default rows + runwaycount * 2) and viewpointRowcount (visble rows;typicall one partial)\n\n    Item containers:\n        Client cell content is contained in CellShell's, which are configured according to GridScroller's input parameters.\n        The ItemCell's are in turn contained in CSS grid structures. There are two grid structures - one in the cradle head,\n        and one in the cradle tail. Each grid structure is allowed uniform padding and gaps - identical between the two.\n\n    Overscroll handling:\n        Owing to the weight of the code, and potential rapidity of scrolling, there is an overscroll protocol. \n        if the overscroll is such that part of the cradle is still within the viewport boundaries, then the overscroll\n        is calculated as the number of cell rows that would fit (completely or partially) in the space between the edge of \n        the cradle that is receding from a viewport edge. \n\n        If the overshoot is such that the cradle has entirely passed out of the viewport, the GridScroller goes into 'Repositoining'\n        mode, meaning that it tracks relative location of the spine edge of the viewport, and repaints the cradle accroding to\n        this position when the scrolling stops.\n*/\n\nimport React, { useState, useRef, useContext, useEffect, useCallback, useMemo, useLayoutEffect } from 'react'\n\nimport useIsMounted from 'react-is-mounted-hook'\n\n// import ResizeObserverPolyfill from 'resize-observer-polyfill'\n\nimport { ViewportContext } from './viewport'\n\nimport { portalManager } from './portalmanager'\n\n// import { ResizeObserver } from '@juggle/resize-observer'\n\n// const ResizeObserverClass = window['ResizeObserver'] || ResizeObserver\n\nconst ITEM_OBSERVER_THRESHOLD = 0\n\n// import agency classes - loci of data and related methods\nimport ScrollAgent from './cradle/scrollagent'\nimport SignalsAgent from './cradle/signalsagent'\nimport StateAgent from './cradle/stateagent'\nimport ContentAgent from './cradle/contentagent'\nimport CradleAgent from './cradle/cradleagent'\nimport ObserversAgent from './cradle/observersagent'\nimport ServiceAgent from './cradle/serviceagent'\nimport StylesAgent from './cradle/stylesagent'\n\n// popup position trackeer\nimport ScrollTracker from './scrolltracker'\n\nconst Cradle = ({ \n        gap, \n        padding, \n        runwaycount, \n        listsize, \n        defaultVisibleIndex, \n        orientation, \n        cellHeight, \n        cellWidth, \n        getItem, \n        placeholder, \n        functions,\n        styles,\n        scrollerName,\n        scrollerID,\n    }) => {\n\n    // --------------------------[ bundle cradleProps ]----------------------------\n\n    // functions and styles handled separately\n    const cradlePropsRef = useRef(null) // access by closures\n    cradlePropsRef.current = useMemo(() => {\n        return { \n            gap, \n            padding, \n            runwaycount, \n            listsize, \n            defaultVisibleIndex, \n            orientation, \n            cellHeight, \n            cellWidth, \n            getItem, \n            placeholder, \n            scrollerName,\n            scrollerID,\n    }},[\n        gap, \n        padding, \n        runwaycount, \n        listsize, \n        defaultVisibleIndex, \n        orientation, \n        cellHeight, \n        cellWidth, \n        getItem, \n        placeholder, \n        scrollerName,\n        scrollerID,\n    ])\n\n    const cradleProps = cradlePropsRef.current\n\n    // =============================================================================================\n    // --------------------------------------[ INITIALIZATION ]-------------------------------------\n    // =============================================================================================\n\n    // -----------------------------------------------------------------------\n    // -----------------------------------[ utilites ]------------------------\n\n    // const portalManager = portalAgentInstance// useContext(PortalAgent)\n    let isMounted = useIsMounted()\n    const referenceIndexCallbackRef = useRef(functions?.referenceIndexCallback)\n\n    // -----------------------------------------------------------------------\n    // ---------------------------[ context data ]----------------------------\n\n    const viewportData = useContext(ViewportContext)\n    const viewportDataRef = useRef(null)\n    viewportDataRef.current = viewportData\n\n    const [cradleState, setCradleState] = useState('setup')\n\n    const cradleStateRef = useRef(null) // access by closures\n    cradleStateRef.current = cradleState\n\n    const isReparentingRef = useRef(false)\n\n    // -----------------------------------------------------------------------\n    // -------------------------[ configuration ]-----------------\n\n    const { viewportDimensions } = viewportData\n\n    let { height:viewportheight,width:viewportwidth } = viewportDimensions\n    \n    const crosscount = useMemo(() => {\n\n        console.log('in cradle calc crosscount viewportheight, viewportwidth', \n            viewportheight, viewportwidth, Object.assign({},viewportDataRef.current))\n\n        let crosscount\n        let size = (orientation == 'horizontal')?viewportheight:viewportwidth\n        let crossLength = (orientation == 'horizontal')?cellHeight:cellWidth\n\n        let lengthforcalc = size - (padding * 2) + gap // length of viewport\n        let tilelengthforcalc = crossLength + gap\n        tilelengthforcalc = Math.min(tilelengthforcalc,lengthforcalc) // result cannot be less than 1\n        crosscount = Math.floor(lengthforcalc/(tilelengthforcalc))\n\n        console.log('crosscount calculated in cradle', scrollerID, crosscount)\n\n        return crosscount\n\n    },[\n        orientation, \n        cellWidth, \n        cellHeight, \n        gap, \n        padding, \n        viewportheight, \n        viewportwidth,\n    ])\n\n    const [cradleRowcount,viewportRowcount] = useMemo(()=> {\n\n        let viewportLength, cellLength\n        if (orientation == 'vertical') {\n            viewportLength = viewportheight\n            cellLength = cellHeight\n        } else {\n            viewportLength = viewportwidth\n            cellLength = cellWidth\n        }\n\n        cellLength += gap\n\n        let viewportrowcount = Math.ceil(viewportLength/cellLength)\n        let cradleRowcount = viewportrowcount + (runwaycount * 2)\n        let itemcount = cradleRowcount * crosscount\n        if (itemcount > listsize) {\n            itemcount = listsize\n            cradleRowcount = Math.ceil(itemcount/crosscount)\n        }\n        return [cradleRowcount, viewportrowcount]\n\n    },[\n        orientation, \n        cellWidth, \n        cellHeight, \n        gap, \n        listsize,\n        // padding,\n        viewportheight, \n        viewportwidth,\n        runwaycount,\n        crosscount,\n    ])\n\n\n    // const signalsRef = useRef(Object.assign({},signalsbaseline))\n    const cradleConfigRef = useRef(null)\n\n    cradleConfigRef.current = {\n        crosscount,\n        cradleRowcount,\n        viewportRowcount,\n        cellObserverThreshold:ITEM_OBSERVER_THRESHOLD,\n        listRowcount:Math.ceil(listsize/crosscount),\n    }\n\n    // -----------------------------------------------------------------------\n    // -------------------------[ cradle management nodes ]-----------------\n\n    const managersRef = useRef(null) // make available to individual managers\n    const commonPropsRef = useRef({managersRef,viewportdataRef:viewportDataRef,cradlePropsRef, cradleConfigRef})\n    const serviceCallsRef = useRef({referenceIndexCallbackRef})\n\n    // cradle butterfly html components\n    const headCradleElementRef = useRef(null)\n    const tailCradleElementRef = useRef(null)\n    const spineCradleElementRef = useRef(null)\n\n    const cradleElementsRef = useRef(\n        {\n            head:headCradleElementRef, \n            tail:tailCradleElementRef, \n            spine:spineCradleElementRef\n        }\n    )\n    const setItemElementData = useCallback((itemElementData, reportType) => { // candidate to export\n\n        const [index, shellref] = itemElementData\n\n        if (reportType == 'register') {\n\n            contentAgent.itemElements.set(index,shellref)\n\n        } else if (reportType == 'unregister') {\n\n            contentAgent.itemElements.delete(index)\n\n        }\n\n    },[])\n\n    const contentCallbacksRef = useRef({\n        setElementData:setItemElementData\n    })\n\n    const [\n        scrollAgent,\n        signalsAgent,\n        stateAgent,\n        contentAgent,\n        cradleAgent,\n        observersAgent,\n        serviceAgent,\n        stylesAgent,\n    ] = useMemo(()=>{\n        return [\n            new ScrollAgent(commonPropsRef),\n            new SignalsAgent(commonPropsRef),\n            new StateAgent(commonPropsRef,cradleStateRef,setCradleState,isMounted),\n            new ContentAgent(commonPropsRef, contentCallbacksRef),\n            new CradleAgent(commonPropsRef, cradleElementsRef.current),\n            new ObserversAgent(commonPropsRef),\n            new ServiceAgent(commonPropsRef,serviceCallsRef),\n            new StylesAgent(commonPropsRef),\n        ]\n    },[])\n\n    // to instantiate managersRef\n    const managementsetRef = useRef({\n        scroll:scrollAgent,\n        signals:signalsAgent, \n        state:stateAgent,\n        content:contentAgent, \n        cradle:cradleAgent, \n        service:serviceAgent,\n        observers:observersAgent,\n        styles:stylesAgent,\n    })\n\n    managersRef.current = managementsetRef.current\n\n    if (viewportData.isReparenting) {\n        signalsAgent.resetSignals() \n        viewportData.isReparenting = false\n        isReparentingRef.current = true\n        setCradleState('reparenting')\n    }\n\n    // ------------------------------------------------------------------------\n    // -----------------------[ initialization effects ]-----------------------\n\n    //initialize host functions properties\n    useEffect(()=>{\n\n        if (functions?.hasOwnProperty('scrollToItem')) {\n            functions.scrollToItem = serviceAgent.scrollToItem\n        } \n\n        if (functions?.hasOwnProperty('getVisibleList')) {\n            functions.getVisibleList = serviceAgent.getVisibleList\n        } \n\n        if (functions?.hasOwnProperty('getContentList')) {\n            functions.getContentList = serviceAgent.getContentList\n        } \n\n        if (functions?.hasOwnProperty('reload')) {\n            functions.reload = serviceAgent.reload\n        }\n\n        referenceIndexCallbackRef.current = functions?.referenceIndexCallback\n\n    },[functions])\n\n    // initialize window scroll listener\n    useEffect(() => {\n        let viewportdata = viewportDataRef.current\n        viewportdata.elementref.current.addEventListener('scroll',scrollAgent.onScroll)\n\n        return () => {\n\n            viewportdata.elementref.current && viewportdata.elementref.current.removeEventListener('scroll',scrollAgent.onScroll)\n\n        }\n\n    },[])\n\n    // -----------------------------------------------------------------------\n    // -----------------------[ reconfiguration effects ]---------------------\n\n    // trigger resizing based on viewport state\n    useEffect(()=>{\n\n        if (cradleStateRef.current == 'setup') return\n\n        if (viewportData.isResizing) {\n\n            cradleAgent.cellReferenceData.nextReferenceIndex = cradleAgent.cellReferenceData.readyReferenceIndex\n            cradleAgent.cellReferenceData.nextSpineOffset = cradleAgent.cellReferenceData.readySpineOffset\n\n            let signals = signalsAgent.signals\n            signals.pauseCellObserver = true\n            signals.pauseCradleIntersectionObserver = true\n            signals.pauseCradleResizeObserver = true\n            signals.pauseScrollingEffects = true\n            setCradleState('resizing')\n\n        }\n\n        // complete resizing mode\n        if (!viewportData.isResizing && (cradleStateRef.current == 'resizing')) {\n\n            setCradleState('resized')\n\n        }\n\n    },[viewportData.isResizing])\n\n    // reload for changed parameters\n    useEffect(()=>{\n\n        if (cradleStateRef.current == 'setup') return\n\n        cradleAgent.cellReferenceData.nextReferenceIndex = cradleAgent.cellReferenceData.readyReferenceIndex\n        cradleAgent.cellReferenceData.nextSpineOffset = cradleAgent.cellReferenceData.readySpineOffset\n\n        let signals = signalsAgent.signals\n\n        signals.pauseCellObserver = true\n        signals.pauseScrollingEffects = true\n\n        setCradleState('reload')\n\n    },[\n        listsize,\n        cellHeight,\n        cellWidth,\n        gap,\n        padding,\n    ])\n\n    // trigger pivot on change in orientation\n    useEffect(()=> {\n\n        if (cradleStateRef.current != 'setup') {\n\n            cradleAgent.cellReferenceData.nextReferenceIndex = cradleAgent.cellReferenceData.readyReferenceIndex\n            cradleAgent.cellReferenceData.nextSpineOffset = cradleAgent.cellReferenceData.readySpineOffset\n\n            // get previous ratio\n            let previousCellPixelLength = (orientation == 'vertical')?\n                cradlePropsRef.current.cellWidth:cradlePropsRef.current.cellHeight\n            let previousSpineOffset = cradleAgent.cellReferenceData.nextSpineOffset\n\n            let previousratio = previousSpineOffset/previousCellPixelLength\n\n            let currentCellPixelLength = (orientation == 'vertical')?\n                cradlePropsRef.current.cellHeight:cradlePropsRef.current.cellWidth\n\n            let currentSpineOffset = previousratio * currentCellPixelLength\n            \n            cradleAgent.cellReferenceData.nextSpineOffset = Math.round(currentSpineOffset)\n\n            let signals = signalsAgent.signals\n\n            signals.pauseCellObserver = true\n            // pauseCradleIntersectionObserverRef.current = true\n            signals.pauseScrollingEffects = true\n\n            setCradleState('pivot')\n\n        }\n\n        // let cradleContent = contentAgentRef.current.content\n        cradleContent.headModel = []\n        cradleContent.tailModel = []\n        cradleContent.headView = []\n        cradleContent.tailView = []\n\n    },[orientation])\n\n    // =======================================================================\n    // -------------------------[ OPERATION ]---------------------------------\n    // =======================================================================\n\n    // -----------------------------------------------------------------------\n    // ------------------------[ style data ]-------------------------------\n\n    // styles for wings and spine\n    const [cradleHeadStyle, cradleTailStyle, cradleSpineStyle] = useMemo(()=> {\n\n        return stylesAgent.setCradleStyles({\n\n            orientation, \n            cellHeight, \n            cellWidth, \n            gap,\n            padding,\n            viewportheight, \n            viewportwidth,\n            crosscount, \n            userstyles:styles,\n\n        })\n\n    },[\n\n        orientation,\n        cellHeight,\n        cellWidth,\n        gap,\n        padding,\n        viewportheight,\n        viewportwidth,\n        crosscount,\n        styles,\n\n      ])\n\n    // =================================================================================\n    // -------------------------[ Observer support]-------------------------\n    // =================================================================================\n\n    /*\n        There are two interection observers, one for the cradle, and another for itemShells; \n            both against the viewport.\n        There is also a resize observer for the cradle wings, to respond to size changes of \n            variable cells.\n    */    \n\n    // --------------------------[ resize observer ]-----------------------------------\n\n    // set up cradle resizeobserver\n    useEffect(() => {\n\n        let observer = observersAgent.cradleResize.create()\n        let cradleElements = cradleAgent.elements\n        observer.observe(cradleElements.headRef.current)\n        observer.observe(cradleElements.tailRef.current)\n\n        return () => {\n\n            observer.disconnect()\n\n        }\n\n    },[])\n\n    // --------------------[ intersection observer for cradle body ]-----------------------\n\n    // this sets up an IntersectionObserver of the cradle against the viewport. When the\n    // cradle goes out of the observer scope, the \"repositioning\" cradle state is triggerd.\n    useEffect(() => {\n\n        let observer = observersAgent.cradleIntersect.create()\n        let cradleElements = cradleAgent.elements\n        observer.observe(cradleElements.headRef.current)\n        observer.observe(cradleElements.tailRef.current)\n\n        return () => {\n\n            observer.disconnect()\n\n        }\n\n    },[])\n\n    // --------------------------[ item shell observer ]-----------------------------\n\n    /*\n        The cradle content is driven by notifications from the IntersectionObserver.\n        - as the user scrolls the cradle, which has a runwaycount at both the leading\n            and trailing edges, CellShells scroll into or out of the scope of the observer \n            (defined by the width/height of the viewport + the lengths of the runways). The observer\n            notifies the app (through cellobservercallback() below) at the crossings of the itemshells \n            of the defined observer cradle boundaries.\n\n            The no-longer-intersecting notifications trigger dropping of that number of affected items from \n            the cradle contentlist. The dropping of items from the trailing end of the content list\n            triggers the addition of an equal number of items at the leading edge of the cradle content.\n\n            Technically, the opposite end position spec is set (top or left depending on orientation), \n            and the matching end position spec is set to 'auto' when items are added. This causes items to be \n            \"squeezed\" into the leading or trailing ends of the ui content (out of view) as appropriate.\n\n            There are exceptions for setup and edge cases.\n    */\n\n    // responds to change of orientation\n    useEffect(() => {\n\n        let observer = observersAgent.cellIntersect.observer\n        if (observer) observer.disconnect()\n        observer = observersAgent.cellIntersect.create()\n\n        return () => {\n\n            observer.disconnect()\n\n        }\n\n    },[orientation])\n\n    // =====================================================================================\n    // ----------------------------------[ state management ]-------------------------------\n    // =====================================================================================\n\n    // data for state processing\n    const callingCradleState = useRef(cradleStateRef.current)\n    const headlayoutDataRef = useRef(null)\n\n    // this is the core state engine\n    // useLayout for suppressing flashes\n    useLayoutEffect(()=>{\n\n        let viewportData = viewportDataRef.current\n        let cradleContent = contentAgent.content\n        switch (cradleState) {\n            case 'reload':\n                // cradleContent.portalData.clear()\n                setCradleState('setreload')\n                break;\n            case 'updatereposition':\n                setCradleState('repositioning')\n                break;\n            case 'repositioning':\n                break;\n\n            case 'reparenting':\n                isReparentingRef.current = false\n                setCradleState('setscrollposition')\n                break;\n\n            case 'setscrollposition': {\n\n                // const cradleAgent = managersRef.current.scrollRef.current\n                viewportData.elementref.current[cradleAgent.blockScrollProperty] =\n                    Math.max(0,cradleAgent.blockScrollPos)\n\n                setCradleState('normalizesignals')\n\n                break\n            }\n            case 'updatecontent': { // scroll\n\n                setCradleState('ready')\n                break\n\n            }\n            case 'preparerender': {\n\n                let cradleContent = contentAgent.content\n                cradleContent.headView = cradleContent.headModel\n                cradleContent.tailView = cradleContent.tailModel\n\n                setCradleState('setscrollposition')\n                break\n            }\n        }\n\n    },[cradleState])\n\n    // standard processing stages\n    useEffect(()=> {\n\n        let viewportData = viewportDataRef.current\n        switch (cradleState) {\n            case 'setup': \n            case 'resized':\n            case 'pivot':\n            case 'setreload':\n            case 'reposition':\n\n                callingCradleState.current = cradleState\n                setCradleState('preparecontent')\n\n                break\n\n            case 'preparecontent': {\n\n                cradleContent.headModel = []\n                cradleContent.tailModel = []\n                cradleContent.headView = []\n                cradleContent.tailView = []\n                portalManager.resetScrollerPortalRepository(scrollerID)\n                contentAgent.setCradleContent(callingCradleState.current)\n\n                setCradleState('preparerender')\n\n                break\n            }\n            case 'normalizesignals': {\n                setTimeout(()=> {\n\n                    if (!isMounted()) return\n                    // console.log('normalizesignals for cradle',scrollerID)\n                    if (!viewportData.isResizing) {\n                        // redundant scroll position to avoid accidental positioning at tail end of reposition\n                        let signals = signalsAgent.signals\n                        if (viewportData.elementref.current) { // already unmounted if fails (?)\n                            signals.pauseCellObserver  && (signals.pauseCellObserver = false)\n                            signals.pauseScrollingEffects && (signals.pauseScrollingEffects = false)\n                            signals.pauseCradleIntersectionObserver && (signals.pauseCradleIntersectionObserver = false)\n                            signals.pauseCradleResizeObserver && (signals.pauseCradleResizeObserver = false)\n                            // signals.isReparenting && (signals.isReparenting = false)\n                        } else {\n                            console.log('ERROR: viewport element not set in normalizesignals', scrollerID, viewportData)\n                        }\n\n                        if (signals.isCradleInView) {\n                            setCradleState('ready')\n                        } else {\n                            setCradleState('repositioning')\n                        }\n\n                    } else {\n                        setCradleState('resizing')\n                    }\n\n                },100)\n\n                break \n\n            }          \n\n            case 'ready':\n                break\n\n        }\n\n    },[cradleState])\n\n    // =============================================================================\n    // ------------------------------[ RENDER... ]----------------------------------\n    // =============================================================================\n\n    const scrollTrackerArgs = useMemo(() => {\n        if (!(cradleStateRef.current == 'updatereposition' || cradleStateRef.current == 'repositioning')) {\n            return\n        }\n        let trackerargs = {\n            top:viewportDimensions.top + 3,\n            left:viewportDimensions.left + 3,\n            referenceIndexOffset:cradleAgent.cellReferenceData.scrollReferenceIndex,\n            listsize:cradlePropsRef.current.listsize,\n            styles:cradlePropsRef.current.styles,\n        }\n        return trackerargs\n    },[cradleStateRef.current, viewportDimensions, cradleAgent.cellReferenceData.scrollReferenceIndex, cradlePropsRef])\n\n    let cradleContent = contentAgent.content\n\n    return <>\n\n        {(cradleStateRef.current == 'updatereposition' || cradleStateRef.current == 'repositioning')\n            ?<ScrollTracker \n                top = {scrollTrackerArgs.top} \n                left = {scrollTrackerArgs.left} \n                offset = {scrollTrackerArgs.referenceIndexOffset} \n                listsize = {scrollTrackerArgs.listsize}\n                styles = {scrollTrackerArgs.styles}\n            />\n            :null}\n        <div \n            data-type = 'cradle_handle'\n            style = {cradleSpineStyle} \n            ref = {spineCradleElementRef}\n        >\n            {true?<div style = {{zIndex:1, position:'absolute',width:'100%',height:'100%',boxShadow:'0 0 5px 3px red'}}></div>:null}\n            <div \n            \n                data-type = 'head'\n                ref = {headCradleElementRef} \n                style = {cradleHeadStyle}\n            \n            >\n            \n                {(cradleStateRef.current != 'setup')?cradleContent.headView:null}\n            \n            </div>\n            <div \n            \n                data-type = 'tail'\n                ref = {tailCradleElementRef} \n                style = {cradleTailStyle}\n            \n            >\n            \n                {(cradleStateRef.current != 'setup')?cradleContent.tailView:null}\n            \n            </div>\n        </div>\n        \n    </>\n\n} // Cradle\n\n\nexport default Cradle","// contentmanager.tsx\n// copyright (c) 2021 Henrik Bechmann, Toronto, Licence: MIT\n\nimport CradleManagement from './cradlesuper'\nimport { \n    getUICellShellList, \n    calcHeadAndTailChanges,\n    calcContentShifts,\n    getContentListRequirements,\n    isolateRelevantIntersections,\n    allocateContentList,\n    deleteAndResetPortals,\n\n} from './contentfunctions'\n\nimport { portalManager } from '../portalmanager'\n\nexport default class ContentAgent extends CradleManagement{\n\n   constructor(commonPropsRef, contentCallbacksRef) {\n\n      super(commonPropsRef)\n\n      this.contentCallbacksRef = contentCallbacksRef\n\n   }\n\n   content = {\n\n      cradleModel: null,\n      headModel: null,\n      tailModel: null,\n      headView: [],\n      tailView: [],\n\n    }\n\n    instanceIdCounterRef = {\n       current:0\n    }\n    instanceIdMap = new Map()\n\n    private _previousScrollForward = undefined\n\n    itemElements = new Map()\n\n    contentCallbacksRef\n\n    // Two public methods - setCradleContent and updateCradleContent\n\n    // reset cradle, including allocation between head and tail parts of the cradle\n    setCradleContent = (cradleState/*, referenceIndexData*/) => { \n\n        let viewportData = this._viewportdataRef.current\n        let cradleProps = this._cradlePropsRef.current\n        let cradleConfig = this._cradleconfigRef.current\n        let scrollAgent = this._managersRef.current.scroll\n        let cradleAgent = this._managersRef.current.cradle\n        let stateAgent = this._managersRef.current.state\n        let serviceAgent = this._managersRef.current.service\n        let observersAgent = this._managersRef.current.observers\n\n        let viewportElement = viewportData.elementref.current\n\n        let visibletargetindexoffset = cradleAgent.cellReferenceData.readyReferenceIndex\n        let visibletargetscrolloffset = cradleAgent.cellReferenceData.readySpineOffset\n\n        let {cellHeight, cellWidth, orientation, runwaycount, gap, padding, listsize} = cradleProps\n\n        let { cradleRowcount,\n            crosscount,\n            viewportRowcount } = cradleConfig\n\n        if (cradleState == 'reposition') {\n\n            visibletargetscrolloffset = (visibletargetindexoffset == 0)?padding:gap\n\n        }\n\n        let localContentList = []\n        let cradleContent = this.content\n\n        let {cradleReferenceIndex, referenceoffset, contentCount, scrollblockOffset, spinePosOffset, spineAdjustment} = \n            getContentListRequirements({\n                cradleProps,\n                cradleConfig,\n                visibletargetindexoffset,\n                targetViewportOffset:visibletargetscrolloffset,\n                viewportElement:viewportData.elementref.current\n            })\n\n        // returns content constrained by cradleRowcount\n        let [childlist,deleteditems] = getUICellShellList({\n\n            cradleProps,\n            cradleConfig,\n            contentCount,\n            cradleReferenceIndex,\n            headchangecount:0,\n            tailchangecount:contentCount,\n            localContentList,\n            callbacks:this.contentCallbacksRef.current,\n            observer: observersAgent.cellIntersect.observer,\n            instanceIdCounterRef:this.instanceIdCounterRef,\n        })\n\n        deleteAndResetPortals(portalManager, cradleProps.scrollerID, deleteditems)\n\n        let [headcontentlist, tailcontentlist] = allocateContentList({\n\n            contentlist:childlist,\n            spineReferenceIndex:referenceoffset,\n    \n        })\n\n        if (headcontentlist.length == 0) {\n            spinePosOffset = padding\n        }\n\n        cradleContent.cradleModel = childlist\n        cradleContent.headModel = headcontentlist\n        cradleContent.tailModel = tailcontentlist\n\n        cradleAgent.cellReferenceData.scrollReferenceIndex = referenceoffset\n        cradleAgent.cellReferenceData.scrollSpineOffset = spinePosOffset\n\n        cradleAgent.cellReferenceData.readyReferenceIndex = referenceoffset\n        cradleAgent.cellReferenceData.readySpineOffset = spinePosOffset\n\n        if (serviceAgent.serviceCalls.referenceIndexCallbackRef.current) {\n\n            let cstate = cradleState\n            if (cstate == 'setreload') cstate = 'reload'\n            serviceAgent.serviceCalls.referenceIndexCallbackRef.current(\n\n                cradleAgent.cellReferenceData.readyReferenceIndex,'setCradleContent', cstate)\n        \n        }\n\n        let cradleElements = cradleAgent.elements //cradleElementsRef.current\n\n        cradleAgent.blockScrollPos = scrollblockOffset - spinePosOffset\n        if (orientation == 'vertical') {\n\n            cradleAgent.blockScrollProperty = 'scrollTop'\n\n            cradleElements.spineRef.current.style.top = (scrollblockOffset + spineAdjustment) + 'px'\n            cradleElements.spineRef.current.style.left = 'auto'\n            cradleElements.headRef.current.style.paddingBottom = headcontentlist.length?cradleProps.gap + 'px':0\n\n        } else { // orientation = 'horizontal'\n\n            cradleAgent.blockScrollProperty = 'scrollLeft'\n\n            cradleElements.spineRef.current.style.top = 'auto'\n            cradleElements.spineRef.current.style.left = (scrollblockOffset + spineAdjustment) + 'px'\n            cradleElements.headRef.current.style.paddingRight = headcontentlist.length?cradleProps.gap + 'px':0\n\n        }\n\n    }\n\n    updateCradleContent = (entries, source = 'notifications') => {\n\n        let viewportData = this._viewportdataRef.current\n        let cradleProps = this._cradlePropsRef.current\n        let scrollAgent = this._managersRef.current.scroll\n        let cradleAgent = this._managersRef.current.cradle\n        let stateAgent = this._managersRef.current.state\n        let observersAgent = this._managersRef.current.observers\n\n        let viewportElement = viewportData.elementref.current\n        if (!viewportElement) {\n            console.error('ERROR: viewport element not set in updateCradleContent',\n                cradleProps.scrollerID, viewportData.elementref.current,viewportData)\n            return\n        }\n            \n        let scrollOffset\n        if (cradleProps.orientation == 'vertical') {\n            scrollOffset = viewportElement.scrollTop\n        } else {\n            scrollOffset = viewportElement.scrollLeft\n        }\n        if ( scrollOffset < 0) { // for Safari elastic bounce at top of scroll\n\n            return\n\n        }\n\n        // ----------------------------[ 1. initialize ]----------------------------\n\n        let scrollPositions = scrollAgent.scrollPositions //scrollPositionsRef.current\n\n        let scrollforward\n        if (scrollPositions.current == scrollPositions.previous) { // edge case \n\n            scrollforward = this._previousScrollForward\n\n        } else {\n\n            scrollforward = scrollPositions.current > scrollPositions.previous\n            this._previousScrollForward = scrollforward\n\n        }\n\n        if (scrollforward === undefined) {\n            return // init call\n        }\n\n        let cradleElements = cradleAgent.elements\n        let cradleContent = this.content\n        let cradleConfig = this._cradleconfigRef.current\n\n        let itemElements = this.itemElements\n\n        let modelcontentlist = cradleContent.cradleModel\n\n        let cradleReferenceIndex = modelcontentlist[0].props.index\n\n        // --------------------[ 2. filter intersections list ]-----------------------\n\n        // filter out inapplicable intersection entries\n        // we're only interested in intersections proximal to the spine\n        let intersections = isolateRelevantIntersections({\n\n            scrollforward,\n            intersections:entries,\n            cradleContent,\n            cellObserverThreshold:cradleConfig.cellObserverThreshold,\n\n        })\n\n        // --------------------------------[ 3. Calculate shifts ]-------------------------------\n\n        let [cradleindex, \n            cradleitemshift, \n            spineReferenceIndex, \n            referenceitemshift,\n            spinePosOffset, \n            contentCount] = calcContentShifts({\n\n                cradleProps,\n                cradleConfig,\n                cradleElements,\n                cradleContent,\n                viewportElement,\n                itemElements,\n                intersections,\n                scrollforward,\n\n        })\n\n        if ((referenceitemshift == 0 && cradleitemshift == 0)) return\n\n        // ------------------[ 4. calculate head and tail consolidated cradle content changes ]-----------------\n\n        let [headchangecount,tailchangecount] = calcHeadAndTailChanges({\n\n            cradleProps,\n            cradleConfig,\n            cradleContent,\n            cradleshiftcount:cradleitemshift,\n            scrollforward,\n            cradleReferenceIndex,\n\n        })\n\n        // ----------------------------------[ 5. reconfigure cradle content ]--------------------------\n\n        // collect modified content\n        let localContentList, deletedContentItems = []\n\n        if (headchangecount || tailchangecount) {\n\n            [localContentList,deletedContentItems] = getUICellShellList({\n                cradleProps,\n                cradleConfig,\n                contentCount,\n                localContentList:modelcontentlist,\n                headchangecount,\n                tailchangecount,\n                cradleReferenceIndex,\n                observer: observersAgent.cellIntersect.observer,\n                callbacks:this.contentCallbacksRef.current,\n                instanceIdCounterRef:this.instanceIdCounterRef,\n            })\n        } else {\n\n            localContentList = modelcontentlist\n\n        }\n\n        deleteAndResetPortals(portalManager, cradleProps.scrollerID, deletedContentItems)\n\n        // ----------------------------------[ 7. allocate cradle content ]--------------------------\n\n        let [headcontent, tailcontent] = allocateContentList(\n            {\n                contentlist:localContentList,\n                spineReferenceIndex,\n            }\n        )\n\n        cradleContent.cradleModel = localContentList\n        cradleContent.headView = cradleContent.headModel = headcontent\n        cradleContent.tailView = cradleContent.tailModel = tailcontent\n\n        // -------------------------------[ 8. set css changes ]-------------------------\n\n        if (spinePosOffset !== undefined) {\n            \n            if (cradleProps.orientation == 'vertical') {\n\n                cradleAgent.blockScrollPos = viewportElement.scrollTop\n                cradleAgent.blockScrollProperty = 'scrollTop'\n                cradleElements.spineRef.current.style.top = viewportElement.scrollTop + spinePosOffset + 'px'\n                cradleElements.spineRef.current.style.left = 'auto'\n                cradleElements.headRef.current.style.paddingBottom = headcontent.length?cradleProps.gap + 'px':0\n\n            } else {\n\n                cradleAgent.blockScrollPos = viewportElement.scrollLeft\n                cradleAgent.blockScrollProperty = 'scrollLeft'\n                cradleElements.spineRef.current.style.top = 'auto'\n                cradleElements.spineRef.current.style.left = viewportElement.scrollLeft + spinePosOffset + 'px'\n                cradleElements.headRef.current.style.paddingRight = headcontent.length?cradleProps.gap + 'px':0\n\n            }\n\n        }\n\n        cradleAgent.cellReferenceData.scrollReferenceIndex = spineReferenceIndex\n        cradleAgent.cellReferenceData.scrollSpineOffset = spinePosOffset\n\n        cradleAgent.cellReferenceData.readyReferenceIndex = spineReferenceIndex\n        cradleAgent.cellReferenceData.readySpineOffset = spinePosOffset\n\n        stateAgent.setCradleState('updatecontent')\n\n    }\n\n}","// cradlefunctions.tsx\n// copyright (c) 2020 Henrik Bechmann, Toronto, Licence: MIT\n\n/******************************************************************************************\n ------------------------------------[ SUPPORTING FUNCTIONS ]------------------------------\n*******************************************************************************************/\n\nimport React, {useContext} from 'react'\n\nimport CellShell from '../cellshell'\n\nimport { detect } from 'detect-browser'\n\nconst browser = detect()\n\nexport const getContentListRequirements = ({ // called from setCradleContent only\n\n        cradleProps,\n        cradleConfig,\n        visibletargetindexoffset:referenceoffset,\n        targetViewportOffset,\n        viewportElement,\n\n    }) => {\n\n    let { orientation, \n        cellHeight, \n        cellWidth, \n        runwaycount,\n        gap,\n        padding,\n        listsize} = cradleProps\n\n    let {crosscount,\n        cradleRowcount,\n        viewportRowcount} = cradleConfig\n    // reconcile spineReferenceIndex to crosscount context\n    let diff = referenceoffset % crosscount\n    referenceoffset -= diff\n\n    // -------------[ calc basic inputs: cellLength, contentCount. ]----------\n\n    let cellLength,viewportlength\n    if (orientation == 'vertical') {\n        cellLength = cellHeight + gap\n        viewportlength = viewportElement.offsetHeight\n    } else {\n        cellLength = cellWidth + gap\n        viewportlength = viewportElement.offsetWidth\n    }\n    // let viewportrows = Math.floor(viewportlength / cellLength)\n\n    let viewportrows = viewportRowcount\n\n    let contentCount = cradleRowcount * crosscount \n\n    // -----------------------[ calc leadingitemcount, referenceoffset ]-----------------------\n\n    let runwayitemcount = runwaycount * crosscount\n    runwayitemcount = Math.min(runwayitemcount, referenceoffset) // for list head\n\n    // -----------------------[ calc cradleReferenceIndex ]------------------------\n    // leading edge\n    let cradleReferenceIndex = referenceoffset - runwayitemcount\n\n    // ------------[ adjust cradleReferenceIndex for underflow ]------------\n\n    diff = 0 // reset\n    let indexshift = 0 // adjustment if overshoot head\n    if (cradleReferenceIndex < 0) {\n        diff = cradleReferenceIndex\n        indexshift = Math.floor(cradleReferenceIndex / crosscount) * crosscount\n        cradleReferenceIndex += indexshift\n    }\n\n    // ------------[ adjust cradleReferenceIndex and contentCount for listsize overflow ]------------\n\n    let spinePosOffset = targetViewportOffset % cellLength\n\n    // if (spinePosOffset < 0) { // TODO: this shouldn't happen - reproduce from wide botton to narrow\n    //     spinePosOffset += (orientation == 'vertical'?cellHeight:cellWidth)\n    //     referenceoffset += crosscount\n    //     cradleReferenceIndex += crosscount\n    // }\n\n    // --------------------[ calc css positioning ]-----------------------\n\n    let targetrowoffset = Math.ceil(referenceoffset/crosscount)\n    let scrollblockOffset = (targetrowoffset * cellLength) + padding // gap\n    let spineAdjustment\n\n    if (targetrowoffset == 0) {\n        scrollblockOffset = 0\n        spinePosOffset = 0 // padding\n        spineAdjustment = padding\n    } else {\n        spineAdjustment = 0; //gap;\n\n        [cradleReferenceIndex, contentCount, referenceoffset, scrollblockOffset, spinePosOffset] = adjustSpineOffsetForMaxRefindex({\n            referenceoffset,\n            spinePosOffset,\n            scrollblockOffset,            \n            targetrowoffset,\n            viewportlength,\n            listsize,\n            viewportrows,\n            crosscount,\n            cellLength,\n            padding,\n            gap,\n            cradleReferenceIndex,\n            contentCount,\n        })\n    }\n\n    return {cradleReferenceIndex, referenceoffset, contentCount, scrollblockOffset, spinePosOffset, spineAdjustment} // summarize requirements message\n\n}\n\nconst adjustSpineOffsetForMaxRefindex = ({\n\n    listsize,\n    crosscount,\n    contentCount,\n\n    cradleReferenceIndex,\n    referenceoffset,\n    targetrowoffset,\n\n    scrollblockOffset,\n    spinePosOffset,\n\n    viewportlength,\n    viewportrows,\n\n    cellLength,\n    padding,\n    gap,\n\n}) => {\n\n    let activelistitemcount = cradleReferenceIndex + contentCount\n    let activelistrowcount = Math.ceil(activelistitemcount/crosscount)\n    let listRowcount = Math.ceil(listsize/crosscount)\n\n    if (activelistrowcount > listRowcount) {\n        let diffrows = activelistrowcount - listRowcount\n        let diff = diffrows * crosscount\n        cradleReferenceIndex -= diff\n        activelistrowcount -= diffrows\n    }\n\n    // let testlistrowcount = Math.ceil((cradleReferenceIndex + contentCount + 1)/crosscount)\n    if (activelistrowcount == listRowcount) {\n        let diff = listsize % crosscount\n        if (diff) {\n            contentCount -= (crosscount - diff)\n        }\n    }\n\n    let maxrefindexrowoffset = Math.ceil(listsize/crosscount) - viewportrows + 1\n    // console.log('targetrowoffset, maxrefindexrowoffset', targetrowoffset, maxrefindexrowoffset)\n    if (targetrowoffset > maxrefindexrowoffset) {\n\n        let diff = targetrowoffset - maxrefindexrowoffset\n        targetrowoffset -= diff // maxrefindexrowoffset\n\n        referenceoffset = (targetrowoffset * crosscount)\n\n        scrollblockOffset = (targetrowoffset * cellLength) + padding\n\n        spinePosOffset = viewportlength - ((viewportrows - 1) * cellLength) - gap\n\n    }\n\n    return [cradleReferenceIndex, contentCount, referenceoffset, scrollblockOffset, spinePosOffset]\n\n}\n\n// filter out items that not proximate to the spine\nexport const isolateRelevantIntersections = ({\n    intersections,\n    cradleContent,\n    cellObserverThreshold,\n    scrollforward,\n}) => {\n\n    let headcontent = cradleContent.headModel\n    let tailcontent = cradleContent.tailModel\n\n    let headindexes = [], \n        tailindexes = [],\n        headintersectionindexes = [],\n        headintersections = [],\n        tailintersectionindexes = [],\n        tailintersections = [],\n        intersecting:any = {},\n        filteredintersections = []\n\n    // collect lists of indexes...\n    // headindexes, tailindexes\n    for (let component of headcontent) {\n        headindexes.push(component.props.index)\n    }\n\n    for (let component of tailcontent) {\n        tailindexes.push(component.props.index)\n    }\n\n    let duplicates:any = {}\n    let intersectionsptr = 0\n    for (let entry of intersections) {\n\n        let index = parseInt(entry.target.dataset.index)\n        let headptr, tailptr\n        if (tailindexes.includes(index)) {\n\n            tailintersectionindexes.push(index)\n            tailintersections.push(entry)\n            tailptr = tailintersections.length - 1 // used for duplicate resolution\n\n        } else if (headindexes.includes(index)) {\n\n            headintersectionindexes.push(index)\n            headintersections.push(entry)\n            headptr = headintersections.length - 1 // used for duplicate resolution\n\n        } else {\n\n            console.log('error: unknown intersection element, aborting isolateRelevantIntersections',entry)\n            return // shouldn't happen; give up\n\n        }\n\n        let ratio\n        if (browser && browser.name == 'safari') {\n            ratio = entry.intersectionRatio\n        } else {\n            ratio = Math.round(entry.intersectionRatio * 1000)/1000\n        }\n\n        let calcintersecting = (ratio >= cellObserverThreshold)\n        let iobj = {\n            index,\n            intersecting:calcintersecting,  // to accommodate browser differences\n            isIntersecting:entry.isIntersecting,\n            ratio,\n            originalratio:entry.intersectionRatio,\n            time:entry.time,\n            headptr,\n            tailptr,\n            intersectionsptr,\n        }\n        if (!intersecting[index]) { // new item\n            intersecting[index] = iobj\n        } else { // duplicate item\n            if (!Array.isArray(intersecting[index])) {\n                let arr = [intersecting[index]]\n                intersecting[index] = arr\n            }\n            intersecting[index].push(iobj)\n            if (!duplicates[index]) {\n                duplicates[index] = []\n                duplicates[index].push(intersecting[index][0])\n            }\n            duplicates[index].push(iobj)\n        }\n        intersectionsptr++\n\n    }\n    // resolve duplicates. For uneven number, keep the most recent\n    // otherwise delete them, they cancel each other out.\n\n    let duplicateslength = Object.keys(duplicates).length\n    if (duplicateslength > 0) {\n        // console.log('DUPLICATES found', duplicateslength, duplicates)\n        let headintersectionsdelete = [],\n            tailintersectionsdelete = []\n\n        for (let duplicateindex in duplicates) {\n\n            let duplicate = duplicates[duplicateindex]\n\n            if (duplicate.length % 2) {\n                duplicate.sort(duplicatecompare)\n                let entry = duplicate.slice(duplicate.length -1,1)\n                intersecting[entry.index] = entry\n            } else {\n                delete intersecting[duplicate[0].index]\n                // intersectingdelete.push(duplicate[0].index)\n            }\n            for (let entryobj of duplicate) {\n                let headptr = entryobj.headptr\n                let tailptr = entryobj.tailptr\n                if (headptr !== undefined) {\n                    headintersectionsdelete.push(headptr)\n                }\n                if (tailptr !== undefined) {\n                    tailintersectionsdelete.push(tailptr)\n                }\n            }\n        }\n        if (headintersectionsdelete.length) {\n            headintersectionindexes = headintersectionindexes.filter((value, index) => {\n                return !headintersectionsdelete.includes(index)\n            })\n            headintersections = headintersections.filter((value, index) => {\n                return !headintersectionsdelete.includes(index)\n            })\n        }\n        if (tailintersectionsdelete.length) {\n            tailintersectionindexes = tailintersectionindexes.filter((value, index) => {\n                return !tailintersectionsdelete.includes(index)\n            })\n            tailintersections = tailintersections.filter((value, index) => {\n                return !tailintersectionsdelete.includes(index)\n            })\n        }\n    }\n\n    headintersectionindexes.sort(indexcompare)\n    tailintersectionindexes.sort(indexcompare)\n\n    headintersections.sort(entrycompare)\n    tailintersections.sort(entrycompare)\n\n    // set reference points in relation to the spine\n    let headindex = headindexes[headindexes.length - 1]\n    let tailindex = tailindexes[0]\n    let headptr = headintersectionindexes.indexOf(headindex)\n    let tailptr = tailintersectionindexes.indexOf(tailindex)\n\n    // filter out items that register only because they have just been moved\n    if (headptr !== (headintersectionindexes.length - 1)) { \n        headptr = -1\n    }\n\n    if (tailptr !==0) { \n        tailptr = -1\n    }\n    if ((headptr > -1) && (tailptr > -1)) { // edge case\n\n        if (scrollforward) {\n            headptr = -1\n        } else {\n            tailptr = -1\n        }\n\n    }\n\n    // collect notifications to main thread (filtered intersections)\n    // for scrollbackward\n    let headrefindex, tailrefindex // for return\n    if (!scrollforward && (headptr >= 0)) {\n        headrefindex = headintersectionindexes[headptr]\n        let refindex = headrefindex + 1\n        let refintersecting = intersecting[refindex - 1].intersecting\n\n        for (let ptr = headptr; ptr >= 0; ptr--) {\n\n            let index = headintersectionindexes[ptr]\n\n            // test for continuity and consistency\n            if (((index + 1) == refindex) && (intersecting[index].intersecting == refintersecting)) {\n\n                filteredintersections.push(headintersections[ptr])\n\n            } else {\n\n                break\n\n            }\n\n            refindex = index\n            refintersecting = intersecting[refindex].intersecting\n\n        }\n    }\n    // for scrollforward\n    if (scrollforward && (tailptr >= 0)) {\n        tailrefindex = tailintersectionindexes[tailptr]\n        let refindex = tailrefindex - 1\n        let refintersecting = intersecting[refindex + 1].intersecting\n\n        for (let ptr = tailptr; ptr < tailintersectionindexes.length; ptr++) {\n\n            let index = tailintersectionindexes[ptr]\n\n            // test for continuity and consistency\n            if (((index - 1) == refindex) && (intersecting[index].intersecting == refintersecting)) {\n\n                filteredintersections.push(tailintersections[ptr])\n\n            } else {\n\n                break\n\n            }\n\n            refindex = index\n            refintersecting = intersecting[index].intersecting\n\n        }\n    }\n\n    filteredintersections.sort(entrycompare) // TODO this should be integrated into the code above\n\n    return filteredintersections \n\n}\n\nlet indexcompare = (a,b) => {\n    let retval = (a < b)?-1:1\n    return retval\n}\n\nlet entrycompare = (a,b) => {\n    let retval = (parseInt(a.target.dataset.index) < parseInt(b.target.dataset.index))? -1:1\n    return retval\n}\n\nlet duplicatecompare = (a,b) => {\n    let retval = (a.time < b.time)?-1:1\n}\n\nexport const calcContentShifts = ({ // called only from updateCradleContent\n    cradleProps,\n    cradleElements,\n    cradleContent,\n    cradleConfig,\n    viewportElement,\n    itemElements,\n    intersections,\n    scrollforward,\n    // source,\n}) => {\n\n    // ------------------------[ initialize ]--------------\n\n    let { gap,\n        orientation,\n        cellHeight,\n        cellWidth,\n        listsize,\n        padding,\n        runwaycount } = cradleProps\n\n    let spineElement = cradleElements.spineRef.current\n    let headElement = cradleElements.headRef.current\n    let tailElement = cradleElements.tailRef.current\n\n    let cradlecontentlist = cradleContent.cradleModel\n    let headcontentlist = cradleContent.headModel\n    let tailcontentlist = cradleContent.tailModel\n\n    let { crosscount,\n        cradleRowcount,\n        listRowcount,\n        viewportRowcount,\n        itemObserverThreshold } = cradleConfig\n\n    let BOD = false, EOD = false // beginning-of-data, end-of-data\n\n    // -------[ 1. calculate head overshoot row count, if any ]-------\n    \n    let startingspineoffset, headblockoffset, tailblockoffset, viewportlength\n    let viewportvisiblegaplength = 0\n\n    let cellLength = (orientation == 'vertical')?cellHeight + gap:cellWidth + gap\n\n    if (orientation == 'vertical') {\n\n        startingspineoffset = spineElement.offsetTop - viewportElement.scrollTop\n        viewportlength = viewportElement.offsetHeight\n\n        // measure any gap between the cradle and the top viewport boundary\n        if (!scrollforward) {\n\n            // if startingspineoffset is below the top by more than the height of the headElment then a gap will be visible\n            viewportvisiblegaplength = startingspineoffset - headElement.offsetHeight\n\n        }\n\n    } else { // horizontal\n\n        startingspineoffset = spineElement.offsetLeft - viewportElement.scrollLeft\n        viewportlength = viewportElement.offsetWidth\n\n        if (!scrollforward) {\n\n            viewportvisiblegaplength = startingspineoffset - headElement.offsetWidth\n\n        }\n    }\n\n    if ((viewportvisiblegaplength < 0) || (viewportvisiblegaplength > viewportlength)) viewportvisiblegaplength = 0 // no visible gap, or reposition should have kicked in\n\n    // viewportvisiblegaplength is always positive\n    let overshootrowcount = (viewportvisiblegaplength == 0)?0:Math.ceil(viewportvisiblegaplength/cellLength) // rows to fill viewport\n\n    // extra rows for runway\n    if (overshootrowcount) {\n        overshootrowcount += runwaycount\n    }\n\n    let overshootitemcount = overshootrowcount * crosscount\n\n    if (overshootitemcount) {// (!scrollforward && overshootitemcount) { // negation of values for scroll backward\n        overshootitemcount = -overshootitemcount\n        overshootrowcount = -overshootrowcount\n    }\n\n    // ----------------------[ 2. calculate itemshiftcount includng overshoot ]------------------------\n    // shift item count is the number of items the virtual cradle shifts, according to observer notices\n\n    let forwardcount = 0, backwardcount = 0\n    if (scrollforward) {\n\n        backwardcount = intersections.length\n\n    } else {\n\n        forwardcount = intersections.length\n\n    }\n\n    let cradleshiftcount = backwardcount - forwardcount + overshootitemcount\n    let referenceshiftcount = cradleshiftcount\n\n    let cradlerowshift = Math.ceil(cradleshiftcount/crosscount)\n    let referencerowshift = cradlerowshift\n\n    // --------------------------[ 3. calc cradleindex and referenceindex ]--------------------------\n\n    let previouscradleindex = cradlecontentlist[0].props.index\n    let previouscradlerowoffset = previouscradleindex/crosscount\n    let previousreferenceindex = tailcontentlist[0]?.props.index // TODO:Uncaught TypeError: Cannot read property 'props' of undefined\n    let previousreferencerowoffset = previousreferenceindex/crosscount\n\n    let diff \n    if (scrollforward) {\n\n        if ((previouscradlerowoffset + cradleRowcount + cradlerowshift) >= (listRowcount)) {\n            EOD = true\n        }\n\n        diff = (previouscradlerowoffset + cradleRowcount + cradlerowshift) - (listRowcount)\n\n        if (diff > 0) {\n\n            cradlerowshift -= diff\n            cradleshiftcount -= (diff * crosscount)\n\n        }\n\n    } else {\n\n        if ((previouscradlerowoffset + cradlerowshift) <= 0) {\n            BOD = true\n        }\n        diff = previouscradlerowoffset + cradlerowshift\n        if (diff < 0) {\n\n            cradlerowshift -= diff\n            cradleshiftcount -= (diff * crosscount)\n\n        }\n\n    }\n\n    let newcradleindex = previouscradleindex + cradleshiftcount\n    let newreferenceindex = previousreferenceindex + referenceshiftcount\n\n    if (newreferenceindex < 0) {\n        referenceshiftcount += newreferenceindex\n        newreferenceindex = 0\n    }\n\n    // -------------[ 4. calculate spineAdjustment and spinePosOffset ]------------------\n\n    let referenceitemshiftcount = newreferenceindex - previousreferenceindex\n    let cradleitemshiftcount = newcradleindex - previouscradleindex\n\n    referencerowshift = referenceitemshiftcount/crosscount\n    let referencepixelshift = referencerowshift * cellLength\n\n    let spinePosOffset = startingspineoffset + referencepixelshift\n\n    let spineOffsetTarget = spinePosOffset\n    let spineAdjustment = 0\n\n    if (Math.abs(spinePosOffset) > cellLength) {\n\n        spineOffsetTarget = (spinePosOffset % cellLength)\n        spineAdjustment = -(Math.ceil((spinePosOffset - spineOffsetTarget) / cellLength) * crosscount)\n\n    }\n\n    if (spineOffsetTarget < 0) {\n        spineOffsetTarget += cellLength\n        spineAdjustment += crosscount \n    }\n\n    if (spineAdjustment && (BOD || EOD)) {\n\n        newreferenceindex += spineAdjustment\n        referenceitemshiftcount += spineAdjustment\n        spinePosOffset = spineOffsetTarget\n\n    } else if (spineAdjustment) {\n\n        newcradleindex += spineAdjustment\n        cradleitemshiftcount += spineAdjustment\n        newreferenceindex += spineAdjustment\n        referenceitemshiftcount += spineAdjustment\n        spinePosOffset = spineOffsetTarget\n    }\n\n    spinePosOffset = spineOffsetTarget\n\n    // ---------------------[ 5. return required values ]-------------------\n\n    let cradleitemcount = cradleRowcount * crosscount\n\n    return [ newcradleindex, cradleitemshiftcount, newreferenceindex, referenceitemshiftcount, spinePosOffset, cradleitemcount ]\n\n}\n\nexport const calcHeadAndTailChanges = ({\n\n        cradleProps,\n        cradleConfig,\n        cradleContent,\n        cradleshiftcount,\n        scrollforward,\n        cradleReferenceIndex,\n\n    }) => {\n\n    let listsize = cradleProps.listsize\n\n    let headcontent = cradleContent.headModel\n    let tailcontent = cradleContent.tailModel\n\n    let { crosscount,\n    cradleRowcount } = cradleConfig\n\n    cradleshiftcount = Math.abs(cradleshiftcount) \n    let rowshiftcount = Math.ceil(cradleshiftcount/crosscount) //+ boundaryrowcount\n\n    let headrowcount, tailrowcount\n    headrowcount = Math.ceil(headcontent.length/crosscount)\n    tailrowcount = Math.ceil(tailcontent.length/crosscount)\n\n    let pendingcontentoffset // lookahead to new cradleReferenceIndex\n\n    let headchangecount, tailchangecount // the output instructions for getUICellShellList\n\n    // anticipaate add to one end, clip from the other        \n    let additemcount = 0\n    let cliprowcount = 0, clipitemcount = 0\n\n    if (scrollforward) { // clip from head; add to tail; scroll forward head is direction of scroll\n\n        // adjust clipitemcount\n        if ((headrowcount + rowshiftcount) > (cradleProps.runwaycount)) {\n\n            let rowdiff = (headrowcount + rowshiftcount) - (cradleProps.runwaycount)\n            cliprowcount = rowdiff\n            clipitemcount = (cliprowcount * crosscount)\n\n        }\n\n        additemcount = clipitemcount // maintain constant cradle count\n\n        pendingcontentoffset = cradleReferenceIndex + clipitemcount // after clip\n\n        let proposedtailindex = pendingcontentoffset + (cradleRowcount * crosscount) - 1 // modelcontentlist.length - 1\n\n        // adkjust changes for list boundaries\n        if ((proposedtailindex) > (listsize -1) ) {\n\n            let diffitemcount = (proposedtailindex - (listsize -1)) // items outside range\n            additemcount -= diffitemcount // adjust the addcontent accordingly\n            \n            let diffrows = Math.floor(diffitemcount/crosscount) // number of full rows to leave in place\n            let diffrowitems = (diffrows * crosscount)  // derived number of items to leave in place\n\n            clipitemcount -= diffrowitems // apply adjustment to netshift\n\n            if (additemcount <=0) { // nothing to do\n\n                additemcount = 0\n\n            }\n            if (clipitemcount <=0 ) {\n\n                clipitemcount = 0\n                \n            }\n        }\n\n        headchangecount = -clipitemcount\n        tailchangecount = additemcount\n\n    } else { // scroll backward, in direction of tail; clip from tail, add to head\n\n        let intersectionindexes = []\n\n        // headcount will be less than minimum (runwaycount), so a shift can be accomplished[]\n        if ((headrowcount - rowshiftcount) < (cradleProps.runwaycount)) {\n            // calculate clip for tail\n            let rowshortfall = (cradleProps.runwaycount) - (headrowcount - rowshiftcount)\n\n            cliprowcount = rowshortfall\n            let tailrowitemcount = (tailcontent.length % crosscount)\n\n            if (tailrowitemcount == 0) tailrowitemcount = crosscount\n\n            clipitemcount = tailrowitemcount\n            if (tailrowcount > 1) {\n\n                if (cliprowcount > tailrowcount) {\n                    cliprowcount = tailrowcount\n                }\n\n                if (cliprowcount > 1) {\n                    clipitemcount += ((cliprowcount -1) * crosscount)\n                }\n\n            }\n\n            // compenstate with additemcount\n            additemcount = (cliprowcount * crosscount)\n\n        }\n\n        let proposedindexoffset = cradleReferenceIndex - additemcount\n\n        if (proposedindexoffset < 0) {\n\n            let diffitemcount = -proposedindexoffset\n            let diffrows = Math.ceil(diffitemcount/crosscount) // number of full rows to leave in place\n            let diffrowitems = (diffrows * crosscount)\n\n            additemcount -= diffitemcount\n            clipitemcount -= diffrowitems\n\n            if (additemcount <= 0) {\n\n                additemcount = 0\n                \n            }\n\n            if (clipitemcount <= 0) {\n\n                clipitemcount = 0\n\n            }\n        }\n\n        headchangecount = additemcount\n        tailchangecount = -clipitemcount\n\n    }\n    return [headchangecount,tailchangecount]\n\n}\n\n// update content\n// adds itemshells at end of contentlist according to headindexcount and tailindescount,\n// or if indexcount values are <0 removes them.\nexport const getUICellShellList = ({ \n\n        cradleProps,\n        cradleConfig,\n        contentCount,\n        cradleReferenceIndex, \n        headchangecount, \n        tailchangecount, \n        localContentList:contentlist,\n        callbacks,\n        observer,\n        instanceIdCounterRef,\n    }) => {\n\n    let { crosscount,\n        cradleRowcount } = cradleConfig\n\n    let localContentlist = [...contentlist]\n    let tailindexoffset = cradleReferenceIndex + contentlist.length\n    // let headindexoffset = cradleReferenceIndex\n    // let returnContentlist\n\n    let headContentlist = []\n\n    let topconstraint = cradleReferenceIndex - headchangecount,\n    bottomconstraint = (cradleReferenceIndex - headchangecount) + (contentCount + 1) // TODO: validate \"+1\"\n\n    let deletedtailitems = [], deletedheaditems = []\n\n    if (headchangecount >= 0) {\n\n        for (let index = cradleReferenceIndex - headchangecount; index < (cradleReferenceIndex); index++) {\n\n            if (!((index >= topconstraint) && (index <= bottomconstraint))) {\n                continue\n            }\n            headContentlist.push(\n                acquireItem(\n                    {\n                        index, \n                        cradleProps,\n                        observer, \n                        callbacks, \n                        instanceIdCounterRef,\n                    }\n                )\n            )\n\n        }\n\n    } else {\n\n        deletedheaditems = localContentlist.splice( 0, -headchangecount )\n\n    }\n\n    let tailContentlist = []\n\n    if (tailchangecount >= 0) {\n\n        for (let index = tailindexoffset; index < (tailindexoffset + tailchangecount); index++) {\n\n            if (!((index >= topconstraint) && (index <= bottomconstraint))) {\n                continue\n            }\n            tailContentlist.push(\n                acquireItem(\n                    {\n                        index, \n                        cradleProps,\n                        observer, \n                        callbacks, \n                        instanceIdCounterRef,\n                    }\n                )\n            )\n            \n        }\n\n    } else {\n\n        deletedtailitems = localContentlist.splice(tailchangecount,-tailchangecount)\n\n    }\n\n    let deleteditems = deletedheaditems.concat(deletedtailitems)\n\n    let componentList = headContentlist.concat(localContentlist,tailContentlist)\n\n    return [componentList,deleteditems]\n\n}\n\n// butterfly model. Leading (head) all or partially hidden; tail, visible plus following hidden\nexport const allocateContentList = (\n    {\n\n        contentlist, // of cradle, in items (React components)\n        spineReferenceIndex, // first tail item\n\n    }\n) => {\n\n    let offsetindex = contentlist[0]?.props.index // TODO: Cannot read property 'props' of undefined\n\n    let headitemcount\n\n    headitemcount = (spineReferenceIndex - offsetindex)\n\n    let headlist = contentlist.slice(0,headitemcount)\n    let taillist = contentlist.slice(headitemcount)\n\n    return [headlist,taillist]\n\n}\n\nconst acquireItem = ({\n    index, \n    cradleProps,\n    observer, \n    callbacks, \n    instanceIdCounterRef,\n\n}) => {\n    let instanceID = instanceIdCounterRef.current++\n\n    return emitItem({\n        index, \n        cradleProps,\n        observer, \n        callbacks, \n        instanceID,\n    })\n}\n\nconst emitItem = ({\n    index, \n    cradleProps,\n    observer, \n    callbacks, \n    instanceID,\n}) => {\n\n    let { orientation,\n        cellHeight,\n        cellWidth,\n        getItem,\n        placeholder,\n        listsize,\n        scrollerName,\n        scrollerID } = cradleProps\n\n    return <CellShell\n        key = {index} \n        orientation = {orientation}\n        cellHeight = { cellHeight }\n        cellWidth = { cellWidth }\n        index = {index}\n        observer = {observer}\n        callbacks = {callbacks}\n        getItem = {getItem}\n        listsize = {listsize}\n        placeholder = { placeholder }\n        instanceID = {instanceID}\n        scrollerName = { scrollerName }\n        scrollerID = { scrollerID }\n    />    \n\n}\n\nexport const deleteAndResetPortals = (portalManager, scrollerID, deleteList) => {\n\n    for (let item of deleteList) {\n        portalManager.deletePortalListItem(scrollerID, item.props.index)\n    }\n    if (deleteList.length) portalManager.renderPortalList(scrollerID)\n}\n","// cradlemanager.tsx\n// copyright (c) 2021 Henrik Bechmann, Toronto, Licence: MIT\n\nimport CradleManagement from './cradlesuper'\n\nexport default class CradleAgent extends CradleManagement{\n\n    constructor(commonPropsRef, cradleElements) {\n\n       super(commonPropsRef)\n\n       // console.log('CALLING CradleAgent CONSTRUCTOR')\n\n       let elements = this.elements\n       elements.spineRef = cradleElements.spine\n       elements.headRef = cradleElements.head\n       elements.tailRef = cradleElements.tail\n\n       let {defaultVisibleIndex, listsize, padding} = commonPropsRef.current.cradlePropsRef.current\n\n       // console.log('commonPropsRef.current.cradlePropsRef.current in CradleAgent constructor',commonPropsRef.current.cradlePropsRef.current)\n\n       this.cellReferenceData.scrollReferenceIndex = (Math.min(defaultVisibleIndex,(listsize - 1)) || 0)\n       this.cellReferenceData.scrollSpineOffset = padding\n       this.cellReferenceData.readyReferenceIndex = this.cellReferenceData.scrollReferenceIndex\n       this.cellReferenceData.readySpineOffset = this.cellReferenceData.scrollSpineOffset\n       this.cellReferenceData.nextReferenceIndex = this.cellReferenceData.readyReferenceIndex\n       this.cellReferenceData.nextSpineOffset = this.cellReferenceData.readySpineOffset\n\n    }\n\n   cellReferenceData = {\n\n      scrollReferenceIndex:null,\n      scrollSpineOffset:null,\n\n      readyReferenceIndex:null,\n      readySpineOffset:null,\n\n      nextReferenceIndex:null,\n      nextSpineOffset:null,\n\n   }    \n\n   // TODO: wrap this in blockPosData\n    blockScrollPos:number\n    blockScrollProperty:string\n\n\n    elements = {\n       spineRef:null, \n       headRef:null, \n       tailRef:null\n    }\n\n}","// cradlesuper.tsx\n// copyright (c) 2021 Henrik Bechmann, Toronto, Licence: MIT\n\nexport default class CradleManagement {\n\n    constructor(commonPropsRef) {\n\n       let {managersRef, viewportdataRef, cradlePropsRef, cradleConfigRef} = commonPropsRef.current\n\n       this._managersRef = managersRef\n       this._viewportdataRef = viewportdataRef\n       this._cradlePropsRef = cradlePropsRef\n       this._cradleconfigRef = cradleConfigRef\n\n    }\n\n    protected _managersRef\n    protected _viewportdataRef\n    protected _cradlePropsRef\n    protected _cradleconfigRef\n\n}","// wingsmanager.tsx\n// copyright (c) 2021 Henrik Bechmann, Toronto, Licence: MIT\n\nimport { ResizeObserver } from '@juggle/resize-observer'\n\nconst ResizeObserverClass = window['ResizeObserver'] || ResizeObserver\n\nimport CradleManagement from './cradlesuper'\n\nexport default class ObserversAgent extends CradleManagement{\n\n   constructor(commonPropsRef) {\n\n      super(commonPropsRef)\n\n   }\n\n   // TODO: stub\n   cradleresizeobservercallback = (entries) => {\n\n       let signalsAgent = this._managersRef.current.signals\n       if (signalsAgent.signals.pauseCradleResizeObserver) return\n\n   }\n\n    cradleIntersectionObserverCallback = (entries) => {\n\n        let signalsAgent = this._managersRef.current.signals\n        let signals = signalsAgent.signals\n        let stateAgent = this._managersRef.current.state\n        let contentAgent = this._managersRef.current.content\n\n        if (signals.pauseCradleIntersectionObserver) return\n        let viewportData = this._viewportdataRef.current\n        if (viewportData.portalitem?.reparenting) return\n\n        for (let i = 0; i < entries.length; i++ ) {\n            let entry = entries[i]\n            if (entry.target.dataset.type == 'head') {\n                signals.isHeadCradleInView = entry.isIntersecting\n            } else {\n                signals.isTailCradleInView = entry.isIntersecting\n            }\n        }\n\n        signals.isCradleInView = (signals.isHeadCradleInView || signals.isTailCradleInView);\n\n        if (!signals.isCradleInView) \n        {\n            let cradleState = stateAgent.cradleStateRef.current        \n            if (\n                !viewportData.isResizing &&\n                !(cradleState == 'resized') &&\n                !(cradleState == 'repositioning') && \n                !(cradleState == 'reposition') && \n                !(cradleState == 'pivot')\n                ) \n            {\n                let element = viewportData.elementref.current\n                if (!element) {\n                    console.log('viewport element not set in cradleIntersectionObserverCallback',\n                        this._cradlePropsRef.current.scrollerID,viewportData)\n                    return\n                }\n                let rect = element.getBoundingClientRect()\n                let {top, right, bottom, left} = rect\n                let width = right - left, height = bottom - top\n                viewportData.viewportDimensions = {top, right, bottom, left, width, height} // update for scrolltracker\n                signals.pauseCellObserver = true\n                // pauseCradleIntersectionObserverRef.current = true\n                let cradleContent = contentAgent.content\n                cradleContent.headModel = []\n                cradleContent.tailModel = []\n                cradleContent.headView = []\n                cradleContent.tailView = []\n                stateAgent.setCradleState('repositioning')\n\n            }\n        }\n\n    }\n\n    // the async callback from IntersectionObserver.\n    cellobservercallback = (entries)=>{\n\n        let signalsAgent = this._managersRef.current.signals\n        let contentAgent = this._managersRef.current.content\n        let stateAgent = this._managersRef.current.state\n\n        let movedentries = []\n\n        for (let entry of entries) {\n            if (entry.target.dataset.initialized) {\n\n                movedentries.push(entry)\n\n            } else {\n\n                entry.target.dataset.initialized = true\n\n            }\n        }\n\n        if (signalsAgent.signals.pauseCellObserver) {\n\n            return\n\n        }\n\n        stateAgent.isMounted() && contentAgent.updateCradleContent(movedentries,'cellObserver')\n\n    }\n\n   cradleResize = {\n      observer:null,\n      callback:this.cradleresizeobservercallback,\n      create:() => {\n\n        this.cradleResize.observer = new ResizeObserverClass(this.cradleResize.callback)\n        return this.cradleResize.observer\n\n      }\n   }\n   cradleIntersect = {\n        observer:null,\n        callback:this.cradleIntersectionObserverCallback,\n        create:() => {\n            let viewportData = this._viewportdataRef.current\n            this.cradleIntersect.observer = new IntersectionObserver(\n                this.cradleIntersect.callback,\n                {root:viewportData.elementref.current, threshold:0}\n            )\n            return this.cradleIntersect.observer\n        }\n    }\n    cellIntersect = {\n        observer:null,\n        callback:null,\n        create:() => {\n            let viewportData = this._viewportdataRef.current\n            this.cellIntersect.observer = new IntersectionObserver(\n\n                this.cellobservercallback,\n                {\n                    root:viewportData.elementref.current, \n                    threshold:this._cradleconfigRef.current.cellObserverThreshold,\n                } \n            )\n            return this.cellIntersect.observer\n        }\n\n    }\n\n}\n","// scrollmanager.tsx\n// copyright (c) 2021 Henrik Bechmann, Toronto, Licence: MIT\n\nimport CradleManagement from './cradlesuper'\n\nconst SCROLL_TIMEOUT_FOR_ONAFTERSCROLL = 200\n\nexport default class ScrollAgent extends CradleManagement{\n\n    constructor(commonPropsRef) {\n\n        super(commonPropsRef)\n\n    }\n\n    scrollPositions = {current:0,previous:0}\n\n    private _scrolltimerid = null\n\n    onScroll = () => {\n\n        let signals = this._managersRef.current.signals.signals\n\n        if (signals.pauseScrollingEffects) {\n\n            return\n\n        }\n\n        let viewportData = this._viewportdataRef.current\n        let viewportElement = viewportData.elementref.current\n\n        let scrollPositionCurrent = \n            (this._cradlePropsRef.current.orientation == 'vertical')\n            ?viewportElement.scrollTop\n            :viewportElement.scrollLeft\n\n        if (scrollPositionCurrent < 0) { // for Safari\n\n            return \n\n        }\n\n        this.scrollPositions.previous = this.scrollPositions.current\n        this.scrollPositions.current = scrollPositionCurrent\n\n        clearTimeout(this._scrolltimerid)\n\n        let stateAgent = this._managersRef.current.state\n        let cradleState = stateAgent.cradleStateRef.current\n\n        let contentAgent = this._managersRef.current.content\n        let cradleAgent = this._managersRef.current.cradle\n        let serviceAgent = this._managersRef.current.service\n\n        if (!viewportData.isResizing) {\n\n            if (cradleState == 'ready' || cradleState == 'repositioning') {\n\n                if (cradleState == 'ready') {\n                    // let itemindex = contentAgent.content.tailModel[0]?.props.index \n                    // console.log('itemindex, readyReferenceIndex',itemindex,cradleAgent.cellReferenceData.readyReferenceIndex)\n\n                    let itemindex = cradleAgent.cellReferenceData.readyReferenceIndex\n                    let spineVisiblePosOffset\n                    let cradleElements = cradleAgent.elements\n\n                    if (this._cradlePropsRef.current.orientation == 'vertical') {\n\n                        spineVisiblePosOffset = cradleElements.spineRef.current.offsetTop - \n                            this._viewportdataRef.current.elementref.current.scrollTop\n                            \n                    } else {\n\n                        spineVisiblePosOffset = cradleElements.spineRef.current.offsetLeft - \n                            this._viewportdataRef.current.elementref.current.scrollLeft\n\n                    }\n                    cradleAgent.cellReferenceData.scrollReferenceIndex = itemindex\n                    cradleAgent.cellReferenceData.scrollSpineOffset = spineVisiblePosOffset\n\n                } else {\n\n                    this._setScrollReferenceIndexData()\n                    stateAgent.setCradleState('updatereposition')\n                }\n\n                // TODO: re-instatiate the following\n                serviceAgent.serviceCalls.referenceIndexCallbackRef.current && \n                    serviceAgent.serviceCalls.referenceIndexCallbackRef.current(cradleAgent.cellReferenceData.scrollReferenceIndex,'scrolling', cradleState)\n\n            }\n\n        }\n\n        this._scrolltimerid = setTimeout(() => {\n\n            this._onAfterScroll()\n\n        },SCROLL_TIMEOUT_FOR_ONAFTERSCROLL)\n\n    }\n\n\n    private _onAfterScroll = () => {\n\n        let stateAgent = this._managersRef.current.state\n        let cradleAgent = this._managersRef.current.cradle\n        let cradleProps = this._cradlePropsRef.current\n        let viewportData = this._viewportdataRef.current\n        // let cradleMaster = this._managersRef.current.cradleMaster\n        let contentAgent = this._managersRef.current.content\n\n        if (!stateAgent.isMounted()) return\n\n        let spineVisiblePosOffset\n        let cradleElements = cradleAgent.elements\n\n        let viewportElement = viewportData.elementref.current\n        if (cradleProps.orientation == 'vertical') {\n\n            spineVisiblePosOffset = cradleElements.spineRef.current.offsetTop - \n                viewportElement.scrollTop\n                \n        } else {\n\n            spineVisiblePosOffset = cradleElements.spineRef.current.offsetLeft - \n                viewportElement.scrollLeft\n\n        }\n\n        cradleAgent.cellReferenceData.scrollSpineOffset = spineVisiblePosOffset\n\n        if (!viewportData.isResizing) {\n\n            cradleAgent.cellReferenceData.readyReferenceIndex = cradleAgent.cellReferenceData.scrollReferenceIndex\n            cradleAgent.cellReferenceData.readySpineOffset = cradleAgent.cellReferenceData.scrollSpineOffset\n\n            if (cradleProps.orientation == 'vertical') {\n\n                cradleAgent.blockScrollProperty = 'scrollTop'\n                cradleAgent.blockScrollPos = viewportElement.scrollTop\n\n            } else {\n                cradleAgent.blockScrollProperty = 'scrollLeft'\n                cradleAgent.blockScrollPos = viewportElement.scrollLeft\n            }\n\n        }\n\n        let cradleState = stateAgent.cradleStateRef.current\n        switch (cradleState) {\n\n            case 'repositioning': {\n\n                cradleAgent.nextReferenceIndex = cradleAgent.readyReferenceIndex\n                cradleAgent.nextSpineOffset = cradleAgent.readySpineOffset\n\n                stateAgent.setCradleState('reposition')\n\n                break\n            }\n\n            default: {\n\n                contentAgent.updateCradleContent([], 'endofscroll') // for Safari to compensate for overscroll\n\n\n            }\n\n        }\n        \n    }\n\n    private _setScrollReferenceIndexData = () => {\n\n        let viewportData = this._viewportdataRef.current\n        let cradleProps = this._cradlePropsRef.current\n        let cradleConfig = this._cradleconfigRef.current\n\n        let {crosscount} = cradleConfig\n        let viewportElement = viewportData.elementref.current\n        let {orientation, listsize} = cradleProps\n        let scrollPos, cellLength\n        if (orientation == 'vertical') {\n\n            scrollPos = viewportElement.scrollTop\n            cellLength = cradleProps.cellHeight + cradleProps.gap\n\n        } else {\n\n            scrollPos = viewportElement.scrollLeft\n            cellLength = cradleProps.cellWidth + cradleProps.gap\n\n        }\n\n        let referencescrolloffset = cellLength - (scrollPos % cellLength)\n        if (referencescrolloffset == (cellLength + cradleProps.padding)) {\n            referencescrolloffset = 0\n        }\n\n        let referencerowindex = Math.ceil((scrollPos - cradleProps.padding)/cellLength)\n        let spineReferenceIndex = referencerowindex * crosscount\n        spineReferenceIndex = Math.min(spineReferenceIndex,listsize - 1)\n        let diff = spineReferenceIndex % crosscount\n        spineReferenceIndex -= diff\n\n        let referenceIndexData = {\n            index:spineReferenceIndex,\n            spineVisiblePosOffset:referencescrolloffset\n        }\n\n        if (spineReferenceIndex == 0) referencescrolloffset = 0 // defensive\n\n        let cradleAgent = this._managersRef.current.cradle\n        cradleAgent.cellReferenceData.scrollReferenceIndex = spineReferenceIndex\n        cradleAgent.cellReferenceData.scrollSpineOffset = referencescrolloffset\n\n    }\n\n}\n","// servicemanager.tsx\n// copyright (c) 2021 Henrik Bechmann, Toronto, Licence: MIT\n\nimport CradleManagement from './cradlesuper'\n\nexport default class ServiceAgent extends CradleManagement{\n\n    constructor(commonPropsRef, serviceCallsRef) {\n\n       super(commonPropsRef)\n\n       this.serviceCalls = serviceCallsRef.current\n\n    }\n\n    serviceCalls\n\n    getVisibleList = () => {\n\n        let contentAgent = this._managersRef.current.content        \n\n        let cradleContent = contentAgent.content\n        let viewportData = this._viewportdataRef.current\n        let cradleAgent = this._managersRef.current.cradle\n        let cradleElements = cradleAgent.elements\n\n        return getVisibleItemsList({\n            itemElementMap:contentAgent.itemElements,\n            viewportElement:viewportData.elementref.current,\n            cradleElements, \n            cradleProps:this._cradlePropsRef.current,\n            cradleContent,\n        })\n\n    }\n\n    getContentList = () => {\n        let contentAgent = this._managersRef.current.content        \n        let contentlist = Array.from(contentAgent.itemElements)\n\n        contentlist.sort((a,b)=>{\n            return (a[0] < b[0])?-1:1\n        })\n\n        return contentlist\n    }\n\n    reload = () => {\n\n        let cradleAgent = this._managersRef.current.cradle\n        let signalsAgent = this._managersRef.current.signals\n        let stateAgent = this._managersRef.current.state\n        let signals = signalsAgent.signals\n        // let viewportData = this._viewportdata\n\n        signals.pauseCellObserver = true\n        signals.pauseScrollingEffects = true\n\n        let spineVisiblePosOffset\n        let cradleElements = cradleAgent.elements\n\n        cradleAgent.cellReferenceData.nextSpineOffset = cradleAgent.cellReferenceData.readySpineOffset\n        cradleAgent.cellReferenceData.nextReferenceIndex = cradleAgent.cellReferenceData.readyReferenceIndex        \n\n        stateAgent.setCradleState('reload')\n\n    }\n\n    scrollToItem = (index) => {\n\n        let signalsAgent = this._managersRef.current.signals\n        let cradleAgent = this._managersRef.current.cradle\n        let stateAgent = this._managersRef.current.state\n\n        let signals = signalsAgent.signals\n        // let cradleAgent = cradleAgentRef.current\n\n        signals.pauseCellObserver = true\n        signals.pauseScrollingEffects = true\n\n        cradleAgent.cellReferenceData.nextSpineOffset = \n            cradleAgent.cellReferenceData.readySpineOffset\n        cradleAgent.cellReferenceData.nextReferenceIndex = \n            cradleAgent.cellReferenceData.readyReferenceIndex = index\n\n        stateAgent.setCradleState('reposition')\n\n    }\n\n}\n\nconst getVisibleItemsList = ({   \n\n        itemElementMap, \n        viewportElement, \n        cradleElements, \n        cradleProps, \n        cradleContent\n\n    }) => {\n\n    let headElement = cradleElements.headRef.current\n    let spineElement = cradleElements.spineRef.current\n    let {orientation} = cradleProps\n    let headlist = cradleContent.headView\n\n    let itemlistindexes = Array.from(itemElementMap.keys())\n    itemlistindexes.sort((a,b)=>{\n        return (a < b)?-1:1\n    })\n    let headlistindexes = []\n    for (let item of headlist) {\n        headlistindexes.push(parseInt(item.props.index))\n    }\n\n    let list = []\n    let cradleTop = headElement.offsetTop + spineElement.offsetTop, \n        cradleLeft = headElement.offsetLeft + spineElement.offsetLeft\n    let scrollblockTopOffset = -viewportElement.scrollTop, \n        scrollblockLeftOffset = -viewportElement.scrollLeft,\n        viewportHeight = viewportElement.offsetHeight,\n        viewportWidth = viewportElement.offsetWidth,\n        viewportTopOffset = -scrollblockTopOffset,\n        viewportBottomOffset = -scrollblockTopOffset + viewportHeight\n\n    for (let index of itemlistindexes) {\n\n        let element = itemElementMap.get(index).current\n        let inheadlist = headlistindexes.includes(index)\n        let top = inheadlist?(element.offsetTop):(((orientation == 'vertical')?headElement.offsetHeight:0) + element.offsetTop), \n            left = inheadlist?(element.offsetLeft):(((orientation == 'horizontal')?headElement.offsetWidth:0) + element.offsetLeft), \n            width = element.offsetWidth, \n            height = element.offsetHeight,\n            right = left + width,\n            bottom = top + height\n\n        let itemTopOffset = scrollblockTopOffset + cradleTop + top, // offset from top of viewport\n            itemBottomOffset = scrollblockTopOffset + cradleTop + bottom, // offset from top of viewport\n            itemLeftOffset = scrollblockLeftOffset + cradleLeft + left, \n            itemRightOffset = scrollblockLeftOffset + cradleLeft + right \n\n\n        let isVisible = false // default\n\n        let topPortion,\n            bottomPortion,\n            leftPortion,\n            rightPortion\n\n        if ((itemTopOffset < 0) && (itemBottomOffset > 0)) {\n\n            (orientation == 'vertical') && (isVisible = true)\n            bottomPortion = itemBottomOffset\n            topPortion = bottomPortion - height\n\n        } else if ((itemTopOffset >= 0) && (itemBottomOffset < viewportHeight)) {\n\n            (orientation == 'vertical') && (isVisible = true)\n            topPortion = height\n            bottomPortion = 0\n\n        } else if ((itemTopOffset > 0) && ((itemTopOffset - viewportHeight) < 0)) {\n\n            (orientation == 'vertical') && (isVisible = true)\n            topPortion = viewportHeight - itemTopOffset\n            bottomPortion = topPortion - height\n\n        } else {\n\n            if (orientation == 'vertical') continue\n\n        }\n\n        if (itemLeftOffset < 0 && itemRightOffset > 0) {\n\n            (orientation == 'horizontal') && (isVisible = true)\n            rightPortion = itemRightOffset\n            leftPortion = rightPortion - width\n\n        } else if (itemLeftOffset >= 0 && itemRightOffset < viewportWidth) {\n\n            (orientation == 'horizontal') && (isVisible = true)\n            leftPortion = width\n            rightPortion = 0\n\n        } else if (itemLeftOffset > 0 && (itemLeftOffset - viewportWidth) < 0) {\n\n            (orientation == 'horizontal') && (isVisible = true)\n            leftPortion = viewportWidth - itemLeftOffset\n            rightPortion = leftPortion - width\n\n        } else {\n\n            if (orientation == 'horizontal') continue\n\n        }\n\n        let verticalRatio = (topPortion > 0)?topPortion/height:bottomPortion/height,\n            horizontalRatio = (leftPortion > 0)?leftPortion/width:rightPortion/height\n\n        let itemData = {\n\n            index,\n            isVisible,\n\n            top,\n            right,\n            bottom,\n            left,\n            width,\n            height,\n\n            itemTopOffset,\n            itemBottomOffset,\n            topPortion,\n            bottomPortion,\n\n            itemLeftOffset,\n            itemRightOffset,\n            leftPortion,\n            rightPortion,\n\n            verticalRatio,\n            horizontalRatio,\n            \n        }\n\n        list.push(itemData)\n\n    }\n\n    return list\n}\n\n","// singalsmanager.txt\n// copyright (c) 2021 Henrik Bechmann, Toronto, Licence: MIT\n\nimport CradleManagement from './cradlesuper'\n\nconst signalsbaseline = {\n    pauseCellObserver: true,\n    pauseCradleIntersectionObserver:true,\n    pauseCradleResizeObserver: true,\n    pauseScrollingEffects: true,\n    isTailCradleInView:true,\n    isHeadCradleInView:true,\n    isCradleInView:true,\n}\n\nexport default class SignalsAgent extends CradleManagement {\n\n    constructor(commonPropsRef) {\n\n       super(commonPropsRef)\n       this.resetSignals()\n\n    }\n\n    signalsBaseline\n\n    signals = {\n        pauseCellObserver: null,\n        pauseCradleIntersectionObserver:null,\n        pauseCradleResizeObserver: null,\n        pauseScrollingEffects: null,\n        isTailCradleInView:null,\n        isHeadCradleInView:null,\n        isCradleInView:null,\n    }\n\n    resetSignals = () => {\n\n        this.signals = Object.assign({},signalsbaseline) //clone \n\n    }\n\n}\n","// statemanager.tsx\n// copyright (c) 2021 Henrik Bechmann, Toronto, Licence: MIT\n\nimport CradleManagement from './cradlesuper'\n\nexport default class StateAgent extends CradleManagement{\n\n    constructor(commonPropsRef,cradleStateRef,setCradleState,isMounted) {\n\n       super(commonPropsRef)\n\n       this.setCradleState = setCradleState\n       this.cradleStateRef = cradleStateRef\n       this.isMounted = isMounted\n       \n    }\n\n    cradleStateRef\n    setCradleState\n    isMounted\n\n}\n","// stylesmanager.tsx\n// copyright (c) 2021 Henrik Bechmann, Toronto, Licence: MIT\n\nimport CradleManagement from './cradlesuper'\n\nexport default class StylesAgent extends CradleManagement{\n\n   constructor(commonPropsRef) {\n\n      super(commonPropsRef)\n\n    }\n\n    setCradleStyles = ({\n\n        orientation, \n        cellHeight, \n        cellWidth, \n        gap,\n        padding, \n        crosscount, \n        viewportheight, \n        viewportwidth,\n        userstyles,\n\n    }) => {\n\n        // TODO: change 'cradle' to 'head' and 'tail' for more granularity\n        let headstyles:React.CSSProperties = this.getHeadStyles(gap, padding, orientation, userstyles?.cradle)\n        let tailstyles:React.CSSProperties = this.getTailStyles(gap, padding, orientation, userstyles?.cradle)\n        let spinestyles:React.CSSProperties = this.getSpineStyles(gap, padding, orientation, userstyles?.spine)\n\n        headstyles.gridGap = gap + 'px'\n\n        tailstyles.gridGap = gap + 'px'\n\n        if (orientation == 'horizontal') {\n\n            headstyles.padding = `${padding}px 0 ${padding}px ${padding}px`\n\n            headstyles.width = 'auto'\n            headstyles.height = '100%'\n            headstyles.gridAutoFlow = 'column'\n            // explict crosscount next line as workaround for FF problem - \n            //     sets length of horiz cradle items in one line (row), not multi-row config\n            headstyles.gridTemplateRows = cellHeight?`repeat(${crosscount}, minmax(${cellHeight}px, 1fr))`:'auto'\n            // headstyles.gridTemplateRows = cellHeight?`repeat(auto-fit, minmax(${cellHeight}px, 1fr))`:'auto'\n            headstyles.gridTemplateColumns = 'none'\n\n            tailstyles.padding = `${padding}px ${padding}px ${padding}px 0`\n\n            tailstyles.width = 'auto'\n            tailstyles.height = '100%'\n            tailstyles.gridAutoFlow = 'column'\n            // explict crosscount next line as workaround for FF problem - \n            //     sets length of horiz cradle items in one line (row), not multi-row config\n            tailstyles.gridTemplateRows = cellHeight?`repeat(${crosscount}, minmax(${cellHeight}px, 1fr))`:'auto'\n            // tailstyles.gridTemplateRows = cellHeight?`repeat(auto-fit, minmax(${cellHeight}px, 1fr))`:'auto'\n            tailstyles.gridTemplateColumns = 'none'\n\n        } else if (orientation == 'vertical') {\n\n            headstyles.padding = `${padding}px ${padding}px 0 ${padding}px`\n\n            headstyles.width = '100%'\n            headstyles.height = 'auto'\n            headstyles.gridAutoFlow = 'row'\n            \n            headstyles.gridTemplateRows = 'none'\n            headstyles.gridTemplateColumns = cellWidth?`repeat(auto-fit, minmax(${cellWidth}px, 1fr))`:'auto'\n\n            tailstyles.padding = `0 ${padding}px ${padding}px ${padding}px`\n\n            tailstyles.width = '100%'\n            tailstyles.height = 'auto'\n            tailstyles.gridAutoFlow = 'row'\n            \n            tailstyles.gridTemplateRows = 'none'\n            tailstyles.gridTemplateColumns = cellWidth?`repeat(auto-fit, minmax(${cellWidth}px, 1fr))`:'auto'\n\n        }\n\n        return [headstyles,tailstyles,spinestyles]\n        \n    }\n\n    getHeadStyles = (gap,padding,orientation,userheadstyles) => {\n\n        let bottom, left, top, right\n\n        if (orientation == 'vertical') {\n            bottom = 0\n            left = 0\n            right = 0\n            top = 'auto'\n        } else {\n            bottom = 0\n            left = 'auto'\n            right = 0\n            top = 0\n        }\n\n        return {...{\n\n            position: 'absolute',\n            backgroundColor: 'blue',\n            display: 'grid',\n            gridGap: gap + 'px',\n            padding: padding + 'px',\n            justifyContent:'start',\n            alignContent:'start',\n            boxSizing:'border-box',\n            bottom,\n            left,\n            right,\n            top,\n\n        } as React.CSSProperties,...userheadstyles}\n\n    }\n\n    getTailStyles = (gap,padding,orientation,usertailstyles) => {\n\n        let bottom, left, top, right\n\n        if (orientation == 'vertical') {\n            bottom = 'auto'\n            left = 0\n            right = 0\n            top = 0\n        } else {\n            bottom = 0\n            left = 0\n            right = 'auto'\n            top = 0\n        }\n\n        return {...{\n\n            position: 'absolute',\n            backgroundColor: 'blue',\n            display: 'grid',\n            gridGap: gap + 'px',\n            padding: padding + 'px',\n            justifyContent:'start',\n            alignContent:'start',\n            boxSizing:'border-box',\n            top,\n            left,\n            right,\n            bottom,\n\n        } as React.CSSProperties,...usertailstyles}\n\n    }\n\n    getSpineStyles = (gap, padding, orientation, userspinestyles) => {\n        let top, left, width, height // for spine\n\n        if (orientation == 'vertical') {\n            top = padding + 'px'\n            left = 'auto'\n            width = '100%'\n            height = 'auto'\n        } else {\n            top = 'auto'\n            left = padding + 'px'\n            width = 0\n            height = '100%'\n        }\n\n        return { ...{\n            position: 'relative',\n            top,\n            left,\n            width,\n            height,\n\n        } as React.CSSProperties,...userspinestyles}\n\n    }\n\n}\n","// infinitegridscroller.tsx\n// copyright (c) 2019 Henrik Bechmann, Toronto, Licence: MIT\n\n/*\n    TODO:\n    - nested list overflows port boundaries on android FF\n    \n    - promote system constants to 'advanced' parameter, eg RESIZE_TIMEOUT_FOR_ONAFTERSRESIZE\n\n    - break up cradle\n\n    - change portalmanager to simple object (singleton)\n\n    - calc minwidth by form factor\n    - use state machine logic throughout\n    */\n\nimport React, {useRef, useEffect, useMemo, useContext} from 'react'\nimport ReactDOM from 'react-dom'\n\nimport Viewport from './viewport'\nimport Scrollblock from './scrollblock'\nimport Cradle from './cradle'\nimport {portalManager as portalAgentInstance, PortalList} from './portalmanager'\n\nlet globalScrollerID = 0\nconst getScrollerSessionID = () => {\n    return globalScrollerID++\n}\n\nconst portalrootstyle = {display:'none'} // static\n/*\n    BACKLOG: \n    - cache: none/preload/keepload\n*/\n\n// ===================================[ INITIALIZE ]===========================\n\n/*\n    The job of InfiniteGridScroller is to pass parameters to dependents.\n    Viewport contains the scrollblock, which in turn contains the cradle \n        - a component that contains displayed (or nearly displayed) items. \n    The items are skeletons which contain the host content components.\n\n    Host content is created in a portal cache (via PortalAgent) and then portal'd to its parent item\n\n    Scrollblock virtually represents the entirety of the list, and of course scrolls\n\n    Cradle contains the list items, and is 'virtualized' -- it appears as\n      though it is the full scrollblock, but in fact it is only slightly larger than\n      the viewport.\n    - individual items are framed by CellShell, managed by Cradle\n\n    Overall the infinitegridscroller manages the (often asynchronous) interactions of the \n    components of the mechanism\n*/\nconst InfiniteGridScroller = (props) => {\n    let { \n        orientation, // vertical or horizontal\n        gap, // space between grid cells, not including the leading and trailing edges\n        padding, // the space between the items and the viewport, applied to the cradle\n        cellHeight, // the outer pixel height - literal for vertical; approximate for horizontal\n        cellWidth, // the outer pixel width - literal for horizontal; approximate for vertical\n        runway, // the number of items outside the view of each side of the viewport \n            // -- gives time to assemble before display\n        listsize, // the exact number of the size of the virtual list\n        indexOffset:defaultVisibleIndex, // the 0-based starting index of the list, when first loaded\n        getItem, // function provided by host - parameter is index number, set by system; return value is \n            // host-selected component or promise of a component\n        functions, // properties with direct access to some component utilites, optional\n        placeholder, // a sparse component to stand in for content until the content arrives; \n            // optional, replaces default\n        styles, // passive style over-rides (eg. color, opacity) for viewport, scrollblock, cradle, or scrolltracker\n        // to come...\n        // cache = \"preload\", \"keepload\", \"none\"\n        // dense, // boolean (only with preload)\n        // advanced, technical settings like useRequestIdleCallback, and RequestIdleCallbackTimeout\n        layout, // uniform, variable\n        scrollerName, // for debugging\n    } = props\n\n    const portalManager = portalAgentInstance // useContext(PortalAgent)\n    const scrollerSessionID = useMemo(()=>{\n        return getScrollerSessionID()\n    },[])\n    const scrollerSessionIDRef = useRef(scrollerSessionID)\n\n    // console.log('RUNNING infinitegridscroller scrollerSessionID',scrollerSessionIDRef.current)//, scrollerState)\n\n    // defaults\n    functions !?? (functions = {})\n    gap !?? (gap = 0)\n    padding !?? (padding = 0)\n    runway !?? (runway = 3)\n    defaultVisibleIndex !?? (defaultVisibleIndex = 0)\n    listsize !?? (listsize = 0)\n    layout !?? (layout = 'uniform')\n    // constraints\n    defaultVisibleIndex = Math.max(0,defaultVisibleIndex) // non-negative\n    defaultVisibleIndex = Math.min(listsize, defaultVisibleIndex) // not larger than list\n    if (!['horizontal','vertical'].includes(orientation)) {\n        orientation = 'vertical'\n    }\n\n    useEffect(()=>{\n\n        // initialize\n        portalManager.createScrollerPortalRepository(scrollerSessionIDRef.current)\n\n        // cleanup\n        return () => {portalManager.deleteScrollerPortalRepository(scrollerSessionIDRef.current)}\n\n    },[])\n\n    return <div data-type = 'scroller' data-scrollerid = { scrollerSessionID }>\n        <div data-type = 'portalroot' style = { portalrootstyle }>\n            <PortalList scrollerID = { scrollerSessionID }/>\n        </div>\n        <Viewport\n\n            orientation = { orientation } \n            cellWidth = { cellWidth }\n            cellHeight = { cellHeight }\n            gap = { gap }\n            padding = { padding }\n            functions = { functions }\n            styles = { styles }\n            scrollerID = { scrollerSessionID }\n        >\n        \n            <Scrollblock\n\n                listsize = { listsize }\n                cellWidth = { cellWidth }\n                cellHeight = { cellHeight }\n                gap = { gap}\n                padding = { padding }\n                orientation = { orientation }\n                functions = { functions }\n                styles = { styles }\n                scrollerID = { scrollerSessionID }\n\n            >\n                <Cradle \n\n                    gap = { gap }\n                    padding = { padding }\n                    cellWidth = { cellWidth }\n                    cellHeight = { cellHeight }\n                    listsize = { listsize }\n                    defaultVisibleIndex = { defaultVisibleIndex }\n                    orientation = { orientation }\n                    getItem = { getItem }\n                    functions = { functions }\n                    placeholder = { placeholder }\n                    styles = { styles }\n                    runwaycount = { runway }\n                    scrollerName = { scrollerName }\n                    scrollerID = { scrollerSessionID }\n\n                />\n            </Scrollblock>\n        </Viewport>\n    </div>\n}\n\nexport default InfiniteGridScroller\n","// placeholder.tsx\n// copyright (c) 2020 Henrik Bechmann, Toronto, Licence: MIT\n\nimport React, {useRef, useEffect, useState, useCallback } from 'react'\n\nconst Placeholder = ({index, listsize, error}) => {\n\n    const stylesRef = useRef({\n        position:'relative',\n        boxSizing:'border-box',\n        backgroundColor:'cyan',\n        border:'2px solid black',\n        height:'100%',\n        width:'100%'\n    } as React.CSSProperties)\n    const itemStylesRef = useRef(\n        {\n            position:'absolute',\n            top:0,\n            left:0,\n            padding:'3px',\n            opacity:.5,\n            borderRadius:'8px',\n            backgroundColor:'white', \n            margin:'3px',\n            fontSize:'smaller',\n        } as React.CSSProperties\n    )\n\n    return <div style = {stylesRef.current}>\n        { !error?\n            <div style = {itemStylesRef.current}>{index + 1}/{listsize}</div>:\n            <div style = {itemStylesRef.current}>item is not available at this time</div>\n        }\n        \n    </div>\n}\n\nexport default Placeholder","// portalmanager.tsx\n\n/*\n    The infinite list scroller stores user cell data in a hidden portal cache, from whence\n    the data is pulled into the relevant CellShell for display\n*/\n\nimport React, {useState, useEffect} from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { createHtmlPortalNode, InPortal } from 'react-reverse-portal'\n\nimport useIsMounted from 'react-is-mounted-hook'\n\n// global scroller data, organized by session scrollerID\nconst scrollerPortalMetaData = new Map()\nconst scrollerPortalListData = new Map()\nconst scrollerPortalCallbacks = new Map()\n\nclass PortalAgentClass {\n\n    // initialize scroller repository\n    createScrollerPortalRepository (scrollerID) {\n\n        if (!scrollerPortalMetaData.has(scrollerID)) {\n            scrollerPortalMetaData.set(scrollerID, new Map())\n        }\n        if (!scrollerPortalListData.has(scrollerID)) {\n            scrollerPortalListData.set(scrollerID, {modified:false,portalMap:new Map(),portalList:null})\n        }\n\n    }\n\n    // clear scroller repository for list recreation (like re-positioning in list)\n    clearScrollerPortalRepository (scrollerID) {\n\n        if (scrollerPortalMetaData.has(scrollerID)) {\n            scrollerPortalMetaData.get(scrollerID).clear()\n        }\n        if (scrollerPortalListData.has(scrollerID)) {\n            scrollerPortalListData.delete(scrollerID)\n        }\n\n    }\n\n    // start again\n    resetScrollerPortalRepository(scrollerID) { // TODO: confirm no memory leak\n\n        this.clearScrollerPortalRepository(scrollerID)\n        this.createScrollerPortalRepository(scrollerID)\n\n    }\n\n    // delete scroller repository for reset or unmount\n    deleteScrollerPortalRepository (scrollerID) {\n\n        scrollerPortalMetaData.delete(scrollerID)\n        scrollerPortalListData.delete(scrollerID)\n        scrollerPortalCallbacks.delete(scrollerID)\n\n    }\n\n    // set state of the PortalList component of the scroller to trigger render\n    renderPortalList = (scrollerID) => {\n\n        let scrollerlistmap = scrollerPortalListData.get(scrollerID)\n        if (scrollerlistmap.modified) {\n            scrollerlistmap.portalList = Array.from(scrollerlistmap.portalMap.values())\n            scrollerlistmap.modified = false\n        }\n\n        scrollerPortalCallbacks.get(scrollerID).setListState() // trigger display update\n\n    }\n\n    // add a portal list item. The index is the scroller dataset index\n    createPortalListItem (scrollerID, index, usercontent, placeholder) {\n\n        if (this.hasPortalListItem(scrollerID, index)) {\n            return this.getPortalListItem(scrollerID, index)\n        }\n\n        let container = document.createElement('div')\n        // container.style.inset = '0px' // not recognized by React\n        container.style.top = '0px'\n        container.style.right = '0px'\n        container.style.left = '0px'\n        container.style.bottom = '0px'\n        container.style.position = 'absolute'\n        // container.style.willChange = 'transform'\n        // container.style.display = 'none'\n        container.dataset.type = 'portalcontainer'\n        container.dataset.index = index\n        container.dataset.scrollerid = scrollerID\n        container.setAttribute('key',index)\n\n        let [portal,reverseportal] = getInPortal(usercontent || placeholder, container)\n\n        let scrollerportals = scrollerPortalListData.get(scrollerID)\n        scrollerportals.portalMap.set(index,<PortalWrapper portal = {portal} key = {index} index = {index}/>)\n        scrollerportals.modified = true\n\n        let portalMetaItem = {usercontent, placeholder, target:null, container, portal, reverseportal, reparenting:false, indexid: index,scrollerid:scrollerID}\n\n        scrollerPortalMetaData.get(scrollerID).set(index, portalMetaItem)\n\n        this.renderPortalList(scrollerID)\n\n        return portalMetaItem\n\n    }\n\n    // update the content of a portal list item\n    updatePortalListItem (scrollerID, index, usercontent) {\n        let portalItem = this.getPortalListItem(scrollerID,index)\n\n        let portal = updateInPortal(usercontent, portalItem.reverseportal )\n\n        let scrollerportals = scrollerPortalListData.get(scrollerID)\n        scrollerportals.portalMap.set(index,<PortalWrapper portal = {portal} key = {index} index = {index}/>)\n        scrollerportals.modified = true\n\n        let portalMetaItem = scrollerPortalMetaData.get(scrollerID).get(index)\n        portalMetaItem.usercontent = usercontent\n\n        this.renderPortalList(scrollerID)\n\n        return portalMetaItem\n    }\n\n    // delete a portal list item\n    deletePortalListItem (scrollerID, index) {\n\n        scrollerPortalMetaData.get(scrollerID).delete(index)\n        let portalMetaItem = scrollerPortalListData.get(scrollerID)\n        portalMetaItem.portalMap.delete(index)\n        portalMetaItem.modified = true\n        return portalMetaItem\n\n    }\n\n    // query existence of a portal list item\n    hasPortalListItem (scrollerID, index) {\n\n        return scrollerPortalMetaData.get(scrollerID).has(index)\n\n    }\n\n    // query existence of content for a portal list item\n    hasPortalUserContent (scrollerID, index) {\n\n        let portalItem = this.getPortalListItem(scrollerID, index)\n        return  !!(portalItem && portalItem.usercontent)\n\n    }\n\n    // get a portal list item's meta data\n    getPortalListItem (scrollerID, index) {\n\n        return scrollerPortalMetaData.get(scrollerID).get(index)\n\n    }\n\n}\n\n// export the portal manager\nexport const portalManager = new PortalAgentClass()\n// export const PortalAgent = React.createContext(portalManager)\n\n// Utility functions\n\n// get a react-reverse-portal InPortal component, with its metadata\n// with user content and container\nconst getInPortal = (content, container) => {\n\n    let reversePortal = createHtmlPortalNode()\n    reversePortal.element = container\n\n    return [<InPortal node = {reversePortal}>\n        {content}\n    </InPortal>,reversePortal]\n\n}     \n\n// update an InPortal component's user content\nconst updateInPortal = (content, reversePortal) => {\n\n    return <InPortal node = {reversePortal} >\n        { content }\n    </InPortal>\n\n}\n\n// Utility components\n\nconst wrapperstyle = {display:'none'} // static\n\n// hidden portal wrapper for clarity and usage of conventional react relisting services\nexport const PortalWrapper = ({\n    portal, index,\n}) => {\n\n    return <div data-type='portalwrapper' data-index = {index} style = {wrapperstyle} key={index}>\n        {portal}\n    </div>\n\n}\n\n// portal list component for rapid relisting of updates, using external callback for set state\nexport const PortalList = ({scrollerID}) => {\n\n    const [portalList, setPortalList] = useState(null)\n    const isMounted = useIsMounted()\n\n    useEffect(()=>{\n\n        scrollerPortalCallbacks.set(scrollerID,\n            {setListState:()=>{\n                isMounted() && setPortalList(scrollerPortalListData.get(scrollerID).portalList)\n            }})\n\n    },[]) \n\n    return portalList\n}\n","// scrollblock.tsx\n// copyright (c) 2020 Henrik Bechmann, Toronto, Licence: MIT\n\nimport React, {useContext, useRef, useCallback, useEffect, useLayoutEffect, useState} from 'react'\n\nimport { ViewportContext } from './viewport'\n\nconst Scrollblock = ({\n    children,\n    listsize, \n    cellHeight, \n    cellWidth, \n    gap, \n    padding, \n    orientation, \n    functions, \n    styles,\n    scrollerID,\n}) => {\n\n    // -------------------------[ context and state ]-------------------------\n    const viewportData = useContext(ViewportContext)\n    const [blockstate,setBlockState] = useState('setup') // setup -> render\n    // console.log('RUNNING scrollblock scrollerID, viewportstate',scrollerID,blockstate)\n\n    // -----------------------------------[ data heap ]-------------------------\n    const scrollBlockLengthRef = useRef(null)\n    const scrollblockRef = useRef(null)\n    const divlinerstyleRef = useRef(\n        Object.assign(\n        {\n\n            backgroundColor:'white',\n            position:'relative',\n            \n        } as React.CSSProperties, styles?.cradle)\n\n    )\n    const [divlinerstyle,saveDivlinerstyle] = useState(divlinerstyleRef.current) // to trigger render\n\n    let { viewportDimensions, itemobserver, isResizing } = viewportData\n    let { top, right, bottom, left, width, height } = viewportDimensions\n\n    // state engine\n    useEffect(()=>{\n        switch (blockstate) {\n            case 'setup': {\n                setBlockState('render')\n                break\n            }\n        }\n    },[blockstate])\n    \n    useLayoutEffect(() => {\n\n        updateBlockLength()\n        divlinerstyleRef.current = updateScrollblockStyles(orientation,divlinerstyleRef,scrollBlockLengthRef)\n        saveDivlinerstyle(divlinerstyleRef.current)\n\n    },[\n        orientation,\n        height,\n        width,\n        listsize,\n        cellHeight,\n        cellWidth,\n        gap,\n        padding,\n    ])\n\n    const updateBlockLength = useCallback(\n        () => {\n            let scrollblocklength = \n                calcScrollblockLength(\n                    {\n                        listsize,\n                        cellHeight,\n                        cellWidth,\n                        gap,\n                        padding,\n                        orientation, \n                        viewportheight:height,\n                        viewportwidth:width,\n                    }\n                )\n\n            scrollBlockLengthRef.current = scrollblocklength\n\n        },[\n            listsize,\n            cellHeight,\n            cellWidth,\n            gap,\n            padding,\n            orientation, \n            height,\n            width,\n       ]\n    )\n\n    return (blockstate != 'setup') &&\n        <div ref = {scrollblockRef} data-type = 'scrollblock' style={divlinerstyleRef.current}>{children}</div>\n\n} // Scrollblock\n\n// all the parameters affect the length\nconst calcScrollblockLength = ({\n    listsize, \n    cellHeight, \n    cellWidth, \n    gap, \n    padding, \n    orientation, \n    viewportheight,\n    viewportwidth,\n    }) => {\n\n    // dependents of orientation\n    let crosslength\n    let cellLength\n    let viewportcrosslength\n    if (orientation == 'vertical') {\n\n        crosslength = cellWidth + gap\n        cellLength = cellHeight + gap\n        viewportcrosslength = viewportwidth \n\n    } else {\n\n        crosslength = cellHeight + gap\n        cellLength = cellWidth + gap\n        viewportcrosslength = viewportheight\n\n    }\n    // adjustments to viewportcrosslength\n    viewportcrosslength -= (padding * 2)\n    viewportcrosslength += gap\n\n    if (viewportcrosslength < crosslength) viewportcrosslength = crosslength // must be at least one\n    let crosscount = Math.floor(viewportcrosslength/crosslength)\n\n    let listlength = Math.ceil(listsize/crosscount)\n\n    let straightlength = (listlength * cellLength) - ((listlength > 0)?gap:0) + (padding * 2)\n\n    return straightlength\n\n}\n\nconst updateScrollblockStyles = (orientation,stylesRef,scrollblocklengthRef) => {\n\n    let localstyles = Object.assign({},stylesRef.current) as React.CSSProperties\n    let height \n    let width\n    if (orientation == 'horizontal') {\n        height = '100%'\n        width = scrollblocklengthRef.current + 'px'\n    } else if (orientation == 'vertical') {\n        height = scrollblocklengthRef.current + 'px'\n        width = '100%'\n    }\n    localstyles.height = height\n    localstyles.width = width\n\n    return localstyles\n}\n\nexport default Scrollblock\n","// scrolltracker.tsx\n// copyright (c) 2020 Henrik Bechmann, Toronto, Licence: MIT\n\nimport React, {useRef} from 'react'\n\nconst ScrollTracker = ({ top, left, offset, listsize, styles }) => {\n\n    let trackdata = `${offset + 1}/${listsize}`\n\n    let styleRef = useRef(Object.assign({\n        top: top + 'px',\n        left: left + 'px',\n        position:'fixed',\n        zIndex:3,\n        backgroundColor:'white',\n        border: '1px solid gray',\n        borderRadius:'10px',\n        fontSize:'smaller',\n        padding:'3px'\n    } as React.CSSProperties,styles?.scrolltracker))\n\n    return <div data-name = 'scrolltracker' style = {styleRef.current} >{trackdata}</div>\n}\n\nexport default ScrollTracker","// viewport.tsx\n// copyright (c) 2020 Henrik Bechmann, Toronto, Licence: MIT\n\n/*\n    The role of viewport is to provide data to its children (scrollblock and cradle), \n    and act as the visible screen portal of the list being shown\n*/\n\nimport React, {useState, useRef, useEffect, useMemo, useCallback, useContext} from 'react'\n\nexport const ViewportContext = React.createContext(null)\n\nimport useIsMounted from 'react-is-mounted-hook'\n\nimport { ResizeObserver } from '@juggle/resize-observer'\n\nimport { portalManager as portalAgentInstance } from './portalmanager'\n\nconst ResizeObserverClass = window['ResizeObserver'] || ResizeObserver\n\n// control constant\nconst RESIZE_TIMEOUT_FOR_ONAFTERSRESIZE = 250\n\nconst Viewport = ({\n    children, \n    orientation, \n    cellWidth, \n    cellHeight, \n    gap, \n    padding, \n    functions, \n    styles,\n    scrollerID,\n}) => {\n\n    // -----------------------[ initialize ]------------------\n\n    // processing state\n    const portalManager = portalAgentInstance// useContext(PortalAgent)\n    // setup -> render; resizing -> resized -> render\n    const [viewportstate,setViewportState] = useState('setup')\n\n    const viewportstateRef = useRef(null)\n    viewportstateRef.current = viewportstate\n    let isMounted = useIsMounted()\n\n    // data heap\n    // const timeoutidRef = useRef(null)\n    const viewportdivRef = useRef(undefined)\n    const divlinerstyleRef = useRef(\n        Object.assign({\n        position:'absolute',\n        // height:'100%',\n        // width:'100%',\n        top:0,\n        right:0,\n        bottom:0,\n        left:0,\n        overflow:'auto',\n        backgroundColor:'red',\n    } as React.CSSProperties,styles?.viewport))\n    const resizeTimeridRef = useRef(null)\n    const isResizingRef = useRef(false)\n    const viewportDataRef = useRef({portalitem:null, isResizing:false, isReparenting: false})\n    const viewportClientRectRef = useRef({top:0,right:0,bottom:0,left:0})\n\n    const resizeObserverRef = useRef(null);\n\n    // console.log('RUNNING viewport scrollerID, viewportstate, portalitem',\n    //     scrollerID,viewportstate,viewportDataRef.current.portalitem)\n\n    if (viewportDataRef.current.portalitem?.reparenting && !viewportDataRef.current.isReparenting) {\n        viewportDataRef.current.isReparenting = true\n\n        console.log('in viewport, setting isReparenting', scrollerID, viewportstateRef.current, viewportDataRef.current)\n        setViewportState('reparenting')\n    }\n\n    useEffect(()=>{\n\n        // initialize\n        resizeObserverRef.current = new ResizeObserverClass(resizeCallback)\n        resizeObserverRef.current.observe(viewportdivRef.current)\n\n        // cleanup\n        return () => {\n\n            resizeObserverRef.current.disconnect()\n\n        }\n\n    },[])\n\n    useEffect(()=>{\n\n        if (scrollerID == 0) return\n        let parentscrollerid\n        let portalindex\n        let el = viewportdivRef.current\n        while (el) {\n            if (el.dataset && (el.dataset.type == 'portalcontainer')) {\n                portalindex = parseInt(el.dataset.index)\n                parentscrollerid = parseInt(el.dataset.scrollerid)\n                viewportDataRef.current.portalitem = portalManager.getPortalListItem(parentscrollerid, portalindex)\n                break\n            } else {\n                el = el.parentElement\n            }\n        } \n\n        if (!el) {\n            console.log('ERROR: parent portalcontainer not found')\n            return\n        }\n\n    },[])\n\n    const resizeCallback = useCallback((entries)=>{\n\n        if (viewportstateRef.current == 'setup') return\n\n        // console.log('viewport resizeCallback scrollerID, viewportDataRef.current.portalitem.reparenting, viewportDataRef.current.portalitem',\n        //     scrollerID, viewportDataRef.current.portalitem?.reparenting, viewportDataRef.current.portalitem)\n\n        // console.log('continuing')\n\n        let target = entries[0].target\n\n        if (!target.dataset.initialized) {\n            // console.log('initializing target', target.dataset)\n            target.dataset.initialized = true\n            return\n        }\n\n        if (!isResizingRef.current) {\n            viewportDataRef.current.isResizing = isResizingRef.current = true \n            viewportDataRef.current = Object.assign({},viewportDataRef.current) // trigger child render\n            // below is a realtime message to cradle.onScroll\n            // to stop updating the referenceIndexData, and to the item observer to stop\n            // triggering responses (anticipating reset of cradle content based on resize)\n            if (isMounted()) setViewportState('resizing')\n        }\n\n        clearTimeout(resizeTimeridRef.current)\n        resizeTimeridRef.current = setTimeout(() => {\n            isResizingRef.current = false\n            if (isMounted()) {\n                setViewportState('resized')\n            }\n\n        },RESIZE_TIMEOUT_FOR_ONAFTERSRESIZE)\n\n    },[])\n\n    // ----------------------------------[ calculate ]--------------------------------\n\n    // calculated values\n    divlinerstyleRef.current = useMemo(() => {\n        let mincrosslength = calcMinViewportCrossLength(orientation, cellWidth, cellHeight, padding)\n        let styles = {...divlinerstyleRef.current} as React.CSSProperties\n        if (orientation == 'vertical') {\n            styles.minWidth = mincrosslength + 'px'\n            styles.minHeight = 'auto'\n        } else {\n            styles.minWidth = 'auto'\n            styles.minHeight = mincrosslength + 'px'\n        }\n        return styles\n\n    },[orientation, cellWidth, cellHeight, padding])\n\n    // set context data for children\n    viewportDataRef.current = useMemo(() => {\n\n        if (viewportstate == 'setup') return viewportDataRef.current\n\n        viewportClientRectRef.current = viewportdivRef.current.getBoundingClientRect()\n\n        let {top, right, bottom, left} = viewportClientRectRef.current\n        console.log('getting scrollerID, viewport dimensions',scrollerID,top, right, bottom, left )\n        let width, height, localViewportData\n        width = (right - left)\n        height = (bottom - top)\n        localViewportData = {\n            viewportDimensions:{top,right, bottom, left, width, height},\n            elementref:viewportdivRef,\n            isResizing:isResizingRef.current,\n        }\n        return Object.assign({},viewportDataRef.current, localViewportData)\n\n    },[orientation, isResizingRef.current, viewportstate])\n\n    // --------------------[ state processing ]---------------------------\n    useEffect(()=>{\n        switch (viewportstate) {\n            case 'setup':\n            case 'resized': {\n                setViewportState('render')\n                break\n            }\n        }\n    },[viewportstate])\n\n    useEffect(() => {\n\n        let viewportstate = viewportstateRef.current\n        if (viewportstate == 'reparenting') {\n            setViewportState('render')\n        }\n\n    },[viewportstateRef.current])\n\n    // ----------------------[ render ]--------------------------------\n\n    return <ViewportContext.Provider value = { viewportDataRef.current }>\n        <div \n            data-type = 'viewport'\n            data-scrollerid = {scrollerID}\n            style = {divlinerstyleRef.current}\n            ref = {viewportdivRef}\n        >\n            { ((viewportstate != 'setup') && (viewportstate != 'reparenting')) && children }\n        </div>\n    </ViewportContext.Provider>\n    \n} // Viewport\n\n// establish minimum width/height for the viewport -- approximately one item\nconst calcMinViewportCrossLength = (orientation, cellWidth, cellHeight, padding) => {\n    // console.log('calcMinViewportCrossLength parms',orientation, cellWidth, cellHeight, padding,)\n    let crosslength, cellLength\n    if (orientation == 'vertical') {\n        cellLength = cellWidth\n    } else {\n        cellLength = cellHeight\n    }\n    crosslength = cellLength + (padding * 2)\n    return crosslength\n}\n\nexport default Viewport","var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar BrowserInfo = /** @class */ (function () {\n    function BrowserInfo(name, version, os) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.type = 'browser';\n    }\n    return BrowserInfo;\n}());\nexport { BrowserInfo };\nvar NodeInfo = /** @class */ (function () {\n    function NodeInfo(version) {\n        this.version = version;\n        this.type = 'node';\n        this.name = 'node';\n        this.os = process.platform;\n    }\n    return NodeInfo;\n}());\nexport { NodeInfo };\nvar SearchBotDeviceInfo = /** @class */ (function () {\n    function SearchBotDeviceInfo(name, version, os, bot) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.bot = bot;\n        this.type = 'bot-device';\n    }\n    return SearchBotDeviceInfo;\n}());\nexport { SearchBotDeviceInfo };\nvar BotInfo = /** @class */ (function () {\n    function BotInfo() {\n        this.type = 'bot';\n        this.bot = true; // NOTE: deprecated test name instead\n        this.name = 'bot';\n        this.version = null;\n        this.os = null;\n    }\n    return BotInfo;\n}());\nexport { BotInfo };\nvar ReactNativeInfo = /** @class */ (function () {\n    function ReactNativeInfo() {\n        this.type = 'react-native';\n        this.name = 'react-native';\n        this.version = null;\n        this.os = null;\n    }\n    return ReactNativeInfo;\n}());\nexport { ReactNativeInfo };\n// tslint:disable-next-line:max-line-length\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nvar SEARCHBOT_OS_REGEX = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\\ Jeeves\\/Teoma|ia_archiver)/;\nvar REQUIRED_VERSION_PARTS = 3;\nvar userAgentRules = [\n    ['aol', /AOLShield\\/([0-9\\._]+)/],\n    ['edge', /Edge\\/([0-9\\._]+)/],\n    ['edge-ios', /EdgiOS\\/([0-9\\._]+)/],\n    ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\n    ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\n    ['samsung', /SamsungBrowser\\/([0-9\\.]+)/],\n    ['silk', /\\bSilk\\/([0-9._-]+)\\b/],\n    ['miui', /MiuiBrowser\\/([0-9\\.]+)$/],\n    ['beaker', /BeakerBrowser\\/([0-9\\.]+)/],\n    ['edge-chromium', /EdgA?\\/([0-9\\.]+)/],\n    [\n        'chromium-webview',\n        /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/,\n    ],\n    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n    ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\n    ['fxios', /FxiOS\\/([0-9\\.]+)/],\n    ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/],\n    ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\n    ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/],\n    ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\n    ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\n    ['ie', /MSIE\\s(7\\.0)/],\n    ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\n    ['android', /Android\\s([0-9\\.]+)/],\n    ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\n    ['safari', /Version\\/([0-9\\._]+).*Safari/],\n    ['facebook', /FB[AS]V\\/([0-9\\.]+)/],\n    ['instagram', /Instagram\\s([0-9\\.]+)/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],\n    ['curl', /^curl\\/([0-9\\.]+)$/],\n    ['searchbot', SEARCHBOX_UA_REGEX],\n];\nvar operatingSystemRules = [\n    ['iOS', /iP(hone|od|ad)/],\n    ['Android OS', /Android/],\n    ['BlackBerry OS', /BlackBerry|BB10/],\n    ['Windows Mobile', /IEMobile/],\n    ['Amazon OS', /Kindle/],\n    ['Windows 3.11', /Win16/],\n    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\n    ['Windows 98', /(Windows 98)|(Win98)/],\n    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\n    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\n    ['Windows Server 2003', /(Windows NT 5.2)/],\n    ['Windows Vista', /(Windows NT 6.0)/],\n    ['Windows 7', /(Windows NT 6.1)/],\n    ['Windows 8', /(Windows NT 6.2)/],\n    ['Windows 8.1', /(Windows NT 6.3)/],\n    ['Windows 10', /(Windows NT 10.0)/],\n    ['Windows ME', /Windows ME/],\n    ['Open BSD', /OpenBSD/],\n    ['Sun OS', /SunOS/],\n    ['Chrome OS', /CrOS/],\n    ['Linux', /(Linux)|(X11)/],\n    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\n    ['QNX', /QNX/],\n    ['BeOS', /BeOS/],\n    ['OS/2', /OS\\/2/],\n];\nexport function detect(userAgent) {\n    if (!!userAgent) {\n        return parseUserAgent(userAgent);\n    }\n    if (typeof document === 'undefined' &&\n        typeof navigator !== 'undefined' &&\n        navigator.product === 'ReactNative') {\n        return new ReactNativeInfo();\n    }\n    if (typeof navigator !== 'undefined') {\n        return parseUserAgent(navigator.userAgent);\n    }\n    return getNodeVersion();\n}\nfunction matchUserAgent(ua) {\n    // opted for using reduce here rather than Array#first with a regex.test call\n    // this is primarily because using the reduce we only perform the regex\n    // execution once rather than once for the test and for the exec again below\n    // probably something that needs to be benchmarked though\n    return (ua !== '' &&\n        userAgentRules.reduce(function (matched, _a) {\n            var browser = _a[0], regex = _a[1];\n            if (matched) {\n                return matched;\n            }\n            var uaMatch = regex.exec(ua);\n            return !!uaMatch && [browser, uaMatch];\n        }, false));\n}\nexport function browserName(ua) {\n    var data = matchUserAgent(ua);\n    return data ? data[0] : null;\n}\nexport function parseUserAgent(ua) {\n    var matchedRule = matchUserAgent(ua);\n    if (!matchedRule) {\n        return null;\n    }\n    var name = matchedRule[0], match = matchedRule[1];\n    if (name === 'searchbot') {\n        return new BotInfo();\n    }\n    // Do not use RegExp for split operation as some browser do not support it (See: http://blog.stevenlevithan.com/archives/cross-browser-split)\n    var versionParts = match[1] && match[1].split('.').join('_').split('_').slice(0, 3);\n    if (versionParts) {\n        if (versionParts.length < REQUIRED_VERSION_PARTS) {\n            versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length), true);\n        }\n    }\n    else {\n        versionParts = [];\n    }\n    var version = versionParts.join('.');\n    var os = detectOS(ua);\n    var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);\n    if (searchBotMatch && searchBotMatch[1]) {\n        return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);\n    }\n    return new BrowserInfo(name, version, os);\n}\nexport function detectOS(ua) {\n    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];\n        var match = regex.exec(ua);\n        if (match) {\n            return os;\n        }\n    }\n    return null;\n}\nexport function getNodeVersion() {\n    var isNode = typeof process !== 'undefined' && process.version;\n    return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\nfunction createVersionParts(count) {\n    var output = [];\n    for (var ii = 0; ii < count; ii++) {\n        output.push('0');\n    }\n    return output;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar use_is_mounted_1 = __importDefault(require(\"./use-is-mounted\"));\nexports.default = use_is_mounted_1.default;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nfunction useIsMounted() {\n    var ref = react_1.useRef(false);\n    react_1.useEffect(function () {\n        ref.current = true;\n        return function () {\n            ref.current = false;\n        };\n    }, []);\n    return react_1.useCallback(function () { return ref.current; }, [ref]);\n}\nexports.default = useIsMounted;\n//# sourceMappingURL=use-is-mounted.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n// Internally, the portalNode must be for either HTML or SVG elements\nvar ELEMENT_TYPE_HTML = 'html';\nvar ELEMENT_TYPE_SVG = 'svg';\n// ReactDOM can handle several different namespaces, but they're not exported publicly\n// https://github.com/facebook/react/blob/b87aabdfe1b7461e7331abb3601d9e6bb27544bc/packages/react-dom/src/shared/DOMNamespaces.js#L8-L10\nvar SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nvar validateElementType = function (domElement, elementType) {\n    if (elementType === ELEMENT_TYPE_HTML) {\n        return domElement instanceof HTMLElement;\n    }\n    if (elementType === ELEMENT_TYPE_SVG) {\n        return domElement instanceof SVGElement;\n    }\n    throw new Error(\"Unrecognized element type \\\"\" + elementType + \"\\\" for validateElementType.\");\n};\n// This is the internal implementation: the public entry points set elementType to an appropriate value\nvar createPortalNode = function (elementType, options) {\n    var initialProps = {};\n    var parent;\n    var lastPlaceholder;\n    var element;\n    if (elementType === ELEMENT_TYPE_HTML) {\n        element = document.createElement('div');\n    }\n    else if (elementType === ELEMENT_TYPE_SVG) {\n        element = document.createElementNS(SVG_NAMESPACE, 'g');\n    }\n    else {\n        throw new Error(\"Invalid element type \\\"\" + elementType + \"\\\" for createPortalNode: must be \\\"html\\\" or \\\"svg\\\".\");\n    }\n    if (options && typeof options === \"object\") {\n        for (var _i = 0, _a = Object.entries(options.attributes); _i < _a.length; _i++) {\n            var _b = _a[_i], key = _b[0], value = _b[1];\n            element.setAttribute(key, value);\n        }\n    }\n    var portalNode = {\n        element: element,\n        elementType: elementType,\n        setPortalProps: function (props) {\n            initialProps = props;\n        },\n        getInitialPortalProps: function () {\n            return initialProps;\n        },\n        mount: function (newParent, newPlaceholder) {\n            if (newPlaceholder === lastPlaceholder) {\n                // Already mounted - noop.\n                return;\n            }\n            portalNode.unmount();\n            // To support SVG and other non-html elements, the portalNode's elementType needs to match\n            // the elementType it's being rendered into\n            if (newParent !== parent) {\n                if (!validateElementType(newParent, elementType)) {\n                    throw new Error(\"Invalid element type for portal: \\\"\" + elementType + \"\\\" portalNodes must be used with \" + elementType + \" elements, but OutPortal is within <\" + newParent.tagName + \">.\");\n                }\n            }\n            newParent.replaceChild(portalNode.element, newPlaceholder);\n            parent = newParent;\n            lastPlaceholder = newPlaceholder;\n        },\n        unmount: function (expectedPlaceholder) {\n            if (expectedPlaceholder && expectedPlaceholder !== lastPlaceholder) {\n                // Skip unmounts for placeholders that aren't currently mounted\n                // They will have been automatically unmounted already by a subsequent mount()\n                return;\n            }\n            if (parent && lastPlaceholder) {\n                parent.replaceChild(lastPlaceholder, portalNode.element);\n                parent = undefined;\n                lastPlaceholder = undefined;\n            }\n        }\n    };\n    return portalNode;\n};\nvar InPortal = /** @class */ (function (_super) {\n    __extends(InPortal, _super);\n    function InPortal(props) {\n        var _this = _super.call(this, props) || this;\n        _this.addPropsChannel = function () {\n            Object.assign(_this.props.node, {\n                setPortalProps: function (props) {\n                    // Rerender the child node here if/when the out portal props change\n                    _this.setState({ nodeProps: props });\n                }\n            });\n        };\n        _this.state = {\n            nodeProps: _this.props.node.getInitialPortalProps(),\n        };\n        return _this;\n    }\n    InPortal.prototype.componentDidMount = function () {\n        this.addPropsChannel();\n    };\n    InPortal.prototype.componentDidUpdate = function () {\n        this.addPropsChannel();\n    };\n    InPortal.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, children = _a.children, node = _a.node;\n        return ReactDOM.createPortal(React.Children.map(children, function (child) {\n            if (!React.isValidElement(child))\n                return child;\n            return React.cloneElement(child, _this.state.nodeProps);\n        }), node.element);\n    };\n    return InPortal;\n}(React.PureComponent));\nvar OutPortal = /** @class */ (function (_super) {\n    __extends(OutPortal, _super);\n    function OutPortal(props) {\n        var _this = _super.call(this, props) || this;\n        _this.placeholderNode = React.createRef();\n        _this.passPropsThroughPortal();\n        return _this;\n    }\n    OutPortal.prototype.passPropsThroughPortal = function () {\n        var propsForTarget = Object.assign({}, this.props, { node: undefined });\n        this.props.node.setPortalProps(propsForTarget);\n    };\n    OutPortal.prototype.componentDidMount = function () {\n        var node = this.props.node;\n        this.currentPortalNode = node;\n        var placeholder = this.placeholderNode.current;\n        var parent = placeholder.parentNode;\n        node.mount(parent, placeholder);\n        this.passPropsThroughPortal();\n    };\n    OutPortal.prototype.componentDidUpdate = function () {\n        // We re-mount on update, just in case we were unmounted (e.g. by\n        // a second OutPortal, which has now been removed)\n        var node = this.props.node;\n        // If we're switching portal nodes, we need to clean up the current one first.\n        if (this.currentPortalNode && node !== this.currentPortalNode) {\n            this.currentPortalNode.unmount(this.placeholderNode.current);\n            this.currentPortalNode = node;\n        }\n        var placeholder = this.placeholderNode.current;\n        var parent = placeholder.parentNode;\n        node.mount(parent, placeholder);\n        this.passPropsThroughPortal();\n    };\n    OutPortal.prototype.componentWillUnmount = function () {\n        var node = this.props.node;\n        node.unmount(this.placeholderNode.current);\n    };\n    OutPortal.prototype.render = function () {\n        // Render a placeholder to the DOM, so we can get a reference into\n        // our location in the DOM, and swap it out for the portaled node.\n        // A <div> placeholder works fine even for SVG.\n        return React.createElement(\"div\", { ref: this.placeholderNode });\n    };\n    return OutPortal;\n}(React.PureComponent));\nvar createHtmlPortalNode = createPortalNode.bind(null, ELEMENT_TYPE_HTML);\nvar createSvgPortalNode = createPortalNode.bind(null, ELEMENT_TYPE_SVG);\nexport { createHtmlPortalNode, createSvgPortalNode, InPortal, OutPortal, };\n//# sourceMappingURL=index.js.map","(function (factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine([], factory);\n\t} else if (typeof module === 'object' && module.exports) {\n\t\tmodule.exports = factory();\n\t} else {\n\t\twindow.idleCallbackShim = factory();\n\t}\n}(function(){\n\t'use strict';\n\tvar scheduleStart, throttleDelay, lazytimer, lazyraf;\n\tvar root = typeof window != 'undefined' ?\n\t\twindow :\n\t\ttypeof global != undefined ?\n\t\t\tglobal :\n\t\t\tthis || {};\n\tvar requestAnimationFrame = root.cancelRequestAnimationFrame && root.requestAnimationFrame || setTimeout;\n\tvar cancelRequestAnimationFrame = root.cancelRequestAnimationFrame || clearTimeout;\n\tvar tasks = [];\n\tvar runAttempts = 0;\n\tvar isRunning = false;\n\tvar remainingTime = 7;\n\tvar minThrottle = 35;\n\tvar throttle = 125;\n\tvar index = 0;\n\tvar taskStart = 0;\n\tvar tasklength = 0;\n\tvar IdleDeadline = {\n\t\tget didTimeout(){\n\t\t\treturn false;\n\t\t},\n\t\ttimeRemaining: function(){\n\t\t\tvar timeRemaining = remainingTime - (Date.now() - taskStart);\n\t\t\treturn timeRemaining < 0 ? 0 : timeRemaining;\n\t\t},\n\t};\n\tvar setInactive = debounce(function(){\n\t\tremainingTime = 22;\n\t\tthrottle = 66;\n\t\tminThrottle = 0;\n\t});\n\n\tfunction debounce(fn){\n\t\tvar id, timestamp;\n\t\tvar wait = 99;\n\t\tvar check = function(){\n\t\t\tvar last = (Date.now()) - timestamp;\n\n\t\t\tif (last < wait) {\n\t\t\t\tid = setTimeout(check, wait - last);\n\t\t\t} else {\n\t\t\t\tid = null;\n\t\t\t\tfn();\n\t\t\t}\n\t\t};\n\t\treturn function(){\n\t\t\ttimestamp = Date.now();\n\t\t\tif(!id){\n\t\t\t\tid = setTimeout(check, wait);\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction abortRunning(){\n\t\tif(isRunning){\n\t\t\tif(lazyraf){\n\t\t\t\tcancelRequestAnimationFrame(lazyraf);\n\t\t\t}\n\t\t\tif(lazytimer){\n\t\t\t\tclearTimeout(lazytimer);\n\t\t\t}\n\t\t\tisRunning = false;\n\t\t}\n\t}\n\n\tfunction onInputorMutation(){\n\t\tif(throttle != 125){\n\t\t\tremainingTime = 7;\n\t\t\tthrottle = 125;\n\t\t\tminThrottle = 35;\n\n\t\t\tif(isRunning) {\n\t\t\t\tabortRunning();\n\t\t\t\tscheduleLazy();\n\t\t\t}\n\t\t}\n\t\tsetInactive();\n\t}\n\n\tfunction scheduleAfterRaf() {\n\t\tlazyraf = null;\n\t\tlazytimer = setTimeout(runTasks, 0);\n\t}\n\n\tfunction scheduleRaf(){\n\t\tlazytimer = null;\n\t\trequestAnimationFrame(scheduleAfterRaf);\n\t}\n\n\tfunction scheduleLazy(){\n\n\t\tif(isRunning){return;}\n\t\tthrottleDelay = throttle - (Date.now() - taskStart);\n\n\t\tscheduleStart = Date.now();\n\n\t\tisRunning = true;\n\n\t\tif(minThrottle && throttleDelay < minThrottle){\n\t\t\tthrottleDelay = minThrottle;\n\t\t}\n\n\t\tif(throttleDelay > 9){\n\t\t\tlazytimer = setTimeout(scheduleRaf, throttleDelay);\n\t\t} else {\n\t\t\tthrottleDelay = 0;\n\t\t\tscheduleRaf();\n\t\t}\n\t}\n\n\tfunction runTasks(){\n\t\tvar task, i, len;\n\t\tvar timeThreshold = remainingTime > 9 ?\n\t\t\t9 :\n\t\t\t1\n\t\t;\n\n\t\ttaskStart = Date.now();\n\t\tisRunning = false;\n\n\t\tlazytimer = null;\n\n\t\tif(runAttempts > 2 || taskStart - throttleDelay - 50 < scheduleStart){\n\t\t\tfor(i = 0, len = tasks.length; i < len && IdleDeadline.timeRemaining() > timeThreshold; i++){\n\t\t\t\ttask = tasks.shift();\n\t\t\t\ttasklength++;\n\t\t\t\tif(task){\n\t\t\t\t\ttask(IdleDeadline);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(tasks.length){\n\t\t\tscheduleLazy();\n\t\t} else {\n\t\t\trunAttempts = 0;\n\t\t}\n\t}\n\n\tfunction requestIdleCallbackShim(task){\n\t\tindex++;\n\t\ttasks.push(task);\n\t\tscheduleLazy();\n\t\treturn index;\n\t}\n\n\tfunction cancelIdleCallbackShim(id){\n\t\tvar index = id - 1 - tasklength;\n\t\tif(tasks[index]){\n\t\t\ttasks[index] = null;\n\t\t}\n\t}\n\n\tif(!root.requestIdleCallback || !root.cancelIdleCallback){\n\t\troot.requestIdleCallback = requestIdleCallbackShim;\n\t\troot.cancelIdleCallback = cancelIdleCallbackShim;\n\n\t\tif(root.document && document.addEventListener){\n\t\t\troot.addEventListener('scroll', onInputorMutation, true);\n\t\t\troot.addEventListener('resize', onInputorMutation);\n\n\t\t\tdocument.addEventListener('focus', onInputorMutation, true);\n\t\t\tdocument.addEventListener('mouseover', onInputorMutation, true);\n\t\t\t['click', 'keypress', 'touchstart', 'mousedown'].forEach(function(name){\n\t\t\t\tdocument.addEventListener(name, onInputorMutation, {capture: true, passive: true});\n\t\t\t});\n\n\t\t\tif(root.MutationObserver){\n\t\t\t\tnew MutationObserver( onInputorMutation ).observe( document.documentElement, {childList: true, subtree: true, attributes: true} );\n\t\t\t}\n\t\t}\n\t} else {\n\t\ttry{\n\t\t\troot.requestIdleCallback(function(){}, {timeout: 0});\n\t\t} catch(e){\n\t\t\t(function(rIC){\n\t\t\t\tvar timeRemainingProto, timeRemaining;\n\t\t\t\troot.requestIdleCallback = function(fn, timeout){\n\t\t\t\t\tif(timeout && typeof timeout.timeout == 'number'){\n\t\t\t\t\t\treturn rIC(fn, timeout.timeout);\n\t\t\t\t\t}\n\t\t\t\t\treturn rIC(fn);\n\t\t\t\t};\n\t\t\t\tif(root.IdleCallbackDeadline && (timeRemainingProto = IdleCallbackDeadline.prototype)){\n\t\t\t\t\ttimeRemaining = Object.getOwnPropertyDescriptor(timeRemainingProto, 'timeRemaining');\n\t\t\t\t\tif(!timeRemaining || !timeRemaining.configurable || !timeRemaining.get){return;}\n\t\t\t\t\tObject.defineProperty(timeRemainingProto, 'timeRemaining', {\n\t\t\t\t\t\tvalue:  function(){\n\t\t\t\t\t\t\treturn timeRemaining.get.call(this);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})(root.requestIdleCallback)\n\t\t}\n\t}\n\n\treturn {\n\t\trequest: requestIdleCallbackShim,\n\t\tcancel: cancelIdleCallbackShim,\n\t};\n}));\n","module.exports = __WEBPACK_EXTERNAL_MODULE_react__;","module.exports = __WEBPACK_EXTERNAL_MODULE_react_dom__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/infinitegridscroller.tsx\");\n",""],"names":[],"sourceRoot":""}